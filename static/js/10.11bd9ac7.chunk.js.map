{"version":3,"sources":["deck/services/decks.service.ts","common/constants/missing-required-field-error-message.tsx","common/components/loadable-component.styles.tsx","common/components/loadable-component.tsx","common/hooks/use-unique-id.tsx","common/constants/snackbar.ts","deck/pages/add-deck.page.styles.tsx","deck/components/edit-card-tile.styles.tsx","deck/components/edit-card-tile.tsx","deck/components/edit-deck-form.styles.tsx","common/utils/array.utils.ts","deck/components/edit-deck-form.tsx","deck/pages/edit-deck.page.tsx"],"names":["decksService","http","a","title","description","visibility","cards","this","post","authorId","authService","getCurrentUser","map","sides","frontText","text","backText","data","id","get","findOneDeckResponseToDeck","params","decks","count","put","cardId","delete","apiClient","card","tags","missingRequiredFieldErrorMessage","useStyles","makeStyles","root","display","justifyContent","LoadableComponent","loading","children","className","delay","classes","useState","showProgress","setShowProgress","useEffect","timeout","setTimeout","clearTimeout","clsx","CircularProgress","uniqueIdNumber","useUniqueId","useRef","current","autoHideDuration","theme","backdrop","zIndex","appBar","textFieldContainer","gridTemplateColumns","gap","spacing","cardContent","flexDirection","margin","actionArea","header","alignItems","EditCardTile","cardNumber","forceValidate","onFrontTextChange","onBackTextChange","onDelete","onMoveUp","onMoveDown","draggableId","validateFrontText","setValidateFrontText","frontTextValid","length","frontTextError","validateBackText","setValidateBackText","backTextValid","backTextError","index","provided","Card","draggableProps","innerRef","Typography","variant","component","aria-label","dragHandleProps","style","height","DragHandle","TextField","label","required","multiline","value","error","helperText","undefined","onChange","e","target","inputProps","IconButton","onClick","disabled","Delete","ArrowUpward","ArrowDownward","form","marginTop","marginBottom","generalInfoContainer","cardList","saveButtonContainer","reorder","array","sourceIndex","destinationIndex","result","splice","EditDeckForm","onTitleChange","onDescriptionChange","onChangeVisibility","onCardsChange","onSubmit","droppableId","validateTitle","setValidateTitle","setForceValidate","showTitleError","changeCardSideText","cardIndex","side","newCards","modifiedCard","moveCard","currentIndex","targetIndex","ArrayUtils","noValidate","preventDefault","some","fullWidth","select","MenuItem","onDragEnd","source","destination","ref","droppableProps","i","slice","placeholder","Button","startIcon","Add","type","color","EditDeckPage","deckId","useParams","submitting","setSubmitting","history","useHistory","deck","setDeck","setLoading","showSnackbar","setShowsSnackbar","snackbarMessage","setSnackbarMessage","findOne","then","finally","open","state","update","goBack","catch","message","onClose"],"mappings":"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","file":"static/js/10.11bd9ac7.chunk.js","sourcesContent":["import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","const missingRequiredFieldErrorMessage = 'This field is required.';\n\nexport default missingRequiredFieldErrorMessage;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\nexport default useStyles;\n","import { CircularProgress } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ReactNode, useEffect, useState } from 'react';\nimport useStyles from './loadable-component.styles';\n\ninterface LoadableComponentProps {\n  loading?: boolean;\n  children: ReactNode;\n  className?: string;\n  delay?: number;\n}\n\nexport default function LoadableComponent({\n  loading,\n  children,\n  className,\n  delay = 300,\n}: LoadableComponentProps) {\n  const classes = useStyles();\n\n  const [showProgress, setShowProgress] = useState(delay <= 0);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowProgress(true);\n    }, delay);\n    return () => clearTimeout(timeout);\n  }, [delay]);\n\n  return loading ? (\n    <div className={clsx(classes.root, className)}>\n      {showProgress && <CircularProgress />}\n    </div>\n  ) : (\n    <>{children}</>\n  );\n}\n","import { useRef } from 'react';\n\nlet uniqueIdNumber = 0;\n\nexport default function useUniqueId() {\n  const uniqueId = useRef(`unique-id-${uniqueIdNumber++}`);\n  return uniqueId.current;\n}\n","export const autoHideDuration = 6000;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.appBar + 1,\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldContainer: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: theme.spacing(2),\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    margin: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\nexport default useStyles;\n","import { Card, IconButton, TextField, Typography } from '@material-ui/core';\nimport {\n  ArrowDownward,\n  ArrowUpward,\n  Delete,\n  DragHandle,\n} from '@material-ui/icons';\nimport { useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useUniqueId from '../../common/hooks/use-unique-id';\nimport useStyles from './edit-card-tile.styles';\n\ninterface EditCardTileProps {\n  cardNumber: number;\n  frontText: string;\n  backText: string;\n  forceValidate?: boolean;\n  onFrontTextChange: (value: string) => void;\n  onBackTextChange: (value: string) => void;\n  onDelete?: () => void;\n  onMoveUp?: () => void;\n  onMoveDown?: () => void;\n}\n\nexport default function EditCardTile({\n  cardNumber,\n  frontText,\n  backText,\n  forceValidate,\n  onFrontTextChange,\n  onBackTextChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n}: EditCardTileProps) {\n  const classes = useStyles();\n\n  const draggableId = useUniqueId();\n\n  const [validateFrontText, setValidateFrontText] = useState(false);\n  const frontTextValid = frontText.length > 0;\n  const frontTextError =\n    (forceValidate || validateFrontText) && !frontTextValid;\n\n  const [validateBackText, setValidateBackText] = useState(false);\n  const backTextValid = backText.length > 0;\n  const backTextError = (forceValidate || validateBackText) && !backTextValid;\n\n  return (\n    <Draggable draggableId={draggableId} index={cardNumber - 1}>\n      {(provided) => (\n        <Card {...provided.draggableProps} innerRef={provided.innerRef}>\n          <div className={classes.cardContent}>\n            <div className={classes.header}>\n              <Typography\n                variant=\"h5\"\n                component=\"div\"\n              >{`Card ${cardNumber}`}</Typography>\n              <div\n                aria-label=\"card reorder drag handle\"\n                {...provided.dragHandleProps}\n                style={{ height: '24px' }}\n              >\n                <DragHandle />\n              </div>\n            </div>\n\n            <div className={classes.textFieldContainer}>\n              <TextField\n                label=\"Term\"\n                required\n                variant=\"outlined\"\n                multiline\n                value={frontText}\n                error={frontTextError}\n                helperText={\n                  frontTextError ? missingRequiredFieldErrorMessage : undefined\n                }\n                onChange={(e) => {\n                  setValidateFrontText(true);\n                  onFrontTextChange(e.target.value);\n                }}\n                inputProps={{ 'aria-label': 'term' }}\n              />\n              <TextField\n                label=\"Definition\"\n                required\n                variant=\"outlined\"\n                multiline\n                value={backText}\n                error={backTextError}\n                helperText={\n                  backTextError ? missingRequiredFieldErrorMessage : undefined\n                }\n                onChange={(e) => {\n                  setValidateBackText(true);\n                  onBackTextChange(e.target.value);\n                }}\n                inputProps={{ 'aria-label': 'definition' }}\n              />\n            </div>\n            <div className={classes.actionArea}>\n              <IconButton\n                aria-label=\"delete\"\n                onClick={onDelete}\n                disabled={!onDelete}\n              >\n                <Delete />\n              </IconButton>\n              <IconButton\n                aria-label=\"move up\"\n                onClick={onMoveUp}\n                disabled={!onMoveUp}\n              >\n                <ArrowUpward />\n              </IconButton>\n              <IconButton\n                aria-label=\"move down\"\n                onClick={onMoveDown}\n                disabled={!onMoveDown}\n              >\n                <ArrowDownward />\n              </IconButton>\n            </div>\n          </div>\n        </Card>\n      )}\n    </Draggable>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  generalInfoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  cardList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  saveButtonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default useStyles;\n","export function reorder<T>(\n  array: Array<T>,\n  sourceIndex: number,\n  destinationIndex: number\n): Array<T> {\n  const result = [...array];\n  result.splice(destinationIndex, 0, result.splice(sourceIndex, 1)[0]);\n  return result;\n}\n","import { Button, MenuItem, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useState } from 'react';\nimport Card from '../../card/interfaces/card';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport EditCardTile from './edit-card-tile';\nimport useStyles from './edit-deck-form.styles';\nimport * as ArrayUtils from '../../common/utils/array.utils';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport useUniqueId from '../../common/hooks/use-unique-id';\n\ninterface EditDeckFormProps {\n  title: string;\n  description: string;\n  visibility: DeckVisibility;\n  cards: Card[];\n  onTitleChange: (value: string) => void;\n  onDescriptionChange: (value: string) => void;\n  onChangeVisibility: (value: DeckVisibility) => void;\n  onCardsChange: (value: Card[]) => void;\n  onSubmit: () => void;\n}\n\nexport default function EditDeckForm({\n  title,\n  description,\n  visibility,\n  cards,\n  onTitleChange,\n  onDescriptionChange,\n  onChangeVisibility,\n  onCardsChange,\n  onSubmit,\n}: EditDeckFormProps) {\n  const classes = useStyles();\n\n  const droppableId = useUniqueId();\n\n  const [validateTitle, setValidateTitle] = useState(false);\n  const [forceValidate, setForceValidate] = useState(false);\n  const showTitleError = (forceValidate || validateTitle) && title.length === 0;\n\n  const changeCardSideText = (\n    cardIndex: number,\n    side: number,\n    value: string\n  ) => {\n    const newCards = [...cards];\n    const modifiedCard = { ...cards[cardIndex] };\n    modifiedCard.sides[side].text = value;\n    newCards[cardIndex] = modifiedCard;\n    onCardsChange(newCards);\n  };\n\n  const addCard = () => {\n    onCardsChange([...cards, { sides: [{ text: '' }, { text: '' }] }]);\n  };\n\n  const deleteCard = (index: number) => {\n    onCardsChange([...cards.slice(0, index), ...cards.slice(index + 1)]);\n  };\n\n  const moveCard = (currentIndex: number, targetIndex: number) => {\n    onCardsChange(ArrayUtils.reorder(cards, currentIndex, targetIndex));\n  };\n\n  return (\n    <form\n      noValidate\n      className={classes.form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (\n          title.length === 0 ||\n          cards.some(({ sides }) =>\n            sides.some((side) => side.text.length === 0)\n          )\n        ) {\n          setForceValidate(true);\n          return;\n        }\n        onSubmit();\n      }}\n    >\n      <div className={classes.generalInfoContainer}>\n        <TextField\n          required\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          error={showTitleError}\n          helperText={\n            showTitleError ? missingRequiredFieldErrorMessage : undefined\n          }\n          value={title}\n          onChange={(e) => {\n            setValidateTitle(true);\n            onTitleChange(e.target.value);\n          }}\n          inputProps={{ 'aria-label': 'title' }}\n        />\n        <TextField\n          variant=\"outlined\"\n          label=\"Description\"\n          fullWidth\n          value={description}\n          onChange={(e) => onDescriptionChange(e.target.value)}\n          inputProps={{ 'aria-label': 'description' }}\n        />\n        <TextField\n          variant=\"outlined\"\n          value={visibility}\n          onChange={(e) => onChangeVisibility(e.target.value as DeckVisibility)}\n          select\n          label=\"Visibility\"\n          inputProps={{ 'aria-label': 'visibility' }}\n        >\n          <MenuItem value=\"PRIVATE\">Private</MenuItem>\n          <MenuItem value=\"PUBLIC\">Public</MenuItem>\n        </TextField>\n      </div>\n\n      <DragDropContext\n        onDragEnd={({ source, destination }) => {\n          if (\n            !destination ||\n            (destination.droppableId === source.droppableId &&\n              destination.index === source.index)\n          ) {\n            return;\n          }\n          onCardsChange(\n            ArrayUtils.reorder(cards, source.index, destination.index)\n          );\n        }}\n      >\n        <Droppable droppableId={droppableId}>\n          {(provided) => (\n            <div\n              className={classes.cardList}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {cards.map(\n                ({ sides: [{ text: frontText }, { text: backText }] }, i) => (\n                  <EditCardTile\n                    key={i}\n                    forceValidate={forceValidate}\n                    cardNumber={i + 1}\n                    frontText={frontText}\n                    backText={backText}\n                    onFrontTextChange={(value) =>\n                      changeCardSideText(i, 0, value)\n                    }\n                    onBackTextChange={(value) =>\n                      changeCardSideText(i, 1, value)\n                    }\n                    onDelete={\n                      cards.length > 1 ? () => deleteCard(i) : undefined\n                    }\n                    onMoveUp={i !== 0 ? () => moveCard(i, i - 1) : undefined}\n                    onMoveDown={\n                      i !== cards.length - 1\n                        ? () => moveCard(i, i + 1)\n                        : undefined\n                    }\n                  />\n                )\n              )}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Button\n        variant=\"outlined\"\n        fullWidth\n        startIcon={<Add />}\n        onClick={addCard}\n      >\n        Add card\n      </Button>\n      <div className={classes.saveButtonContainer}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import {\n  Backdrop,\n  CircularProgress,\n  Container,\n  Snackbar,\n} from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport { autoHideDuration } from '../../common/constants/snackbar';\nimport EditDeckForm from '../components/edit-deck-form';\nimport Deck from '../interfaces/deck';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './add-deck.page.styles';\n\nexport default function EditDeckPage() {\n  const classes = useStyles();\n  const { id: deckId } = useParams<{ id: string }>();\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n\n  const [deck, setDeck] = useState<Deck | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const [showSnackbar, setShowsSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    decksService\n      .findOne(deckId)\n      .then((deck) => setDeck(deck))\n      .finally(() => setLoading(false));\n  }, [deckId]);\n\n  return (\n    <>\n      <Backdrop open={submitting} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <LoadableComponent loading={loading}>\n        {deck && (\n          <Container>\n            <EditDeckForm\n              title={deck.title}\n              description={deck.description}\n              visibility={deck.visibility}\n              cards={deck.cards}\n              onTitleChange={(title) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, title };\n                })\n              }\n              onDescriptionChange={(description) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, description };\n                })\n              }\n              onChangeVisibility={(visibility) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, visibility };\n                })\n              }\n              onCardsChange={(cards) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, cards };\n                })\n              }\n              onSubmit={() => {\n                setSubmitting(true);\n                decksService\n                  .update({\n                    id: deck.id,\n                    title: deck.title,\n                    description: deck.description,\n                    visibility: deck.visibility,\n                    cards: deck.cards,\n                    tags: [],\n                  })\n                  .then(() => history.goBack())\n                  .catch(() => {\n                    setSnackbarMessage('Failed to update deck.');\n                    setShowsSnackbar(true);\n                    setSubmitting(false);\n                  });\n              }}\n            />\n          </Container>\n        )}\n      </LoadableComponent>\n      <Snackbar\n        open={showSnackbar}\n        message={snackbarMessage}\n        autoHideDuration={autoHideDuration}\n        onClose={() => setShowsSnackbar(false)}\n      />\n    </>\n  );\n}\n"],"sourceRoot":""}