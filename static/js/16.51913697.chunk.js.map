{"version":3,"sources":["common/hooks/use-is-mobile.tsx","common/components/avatar.styles.tsx","common/components/avatar.tsx","common/components/app-bar.styles.tsx","common/components/app-bar.tsx","common/components/page.styles.tsx","common/components/page.tsx","common/hooks/use-title.tsx","deck/services/decks.service.ts","common/components/loadable-component.styles.tsx","common/components/loadable-component.tsx","common/components/link.tsx","dashboard/components/deck-info-tile.styles.tsx","dashboard/components/deck-info-tile.tsx","router/utils/route.utils.ts","deck/pages/deck-search.page.styles.tsx","common/utils/math.utils.ts","deck/pages/deck-search.page.tsx"],"names":["useIsMobile","theme","useTheme","useMediaQuery","breakpoints","down","noSsr","useStyles","makeStyles","root","color","palette","getContrastText","grey","backgroundColor","display","text","fontSize","typography","h4","fontWeight","fontWeightBold","Avatar","username","className","typographyClassName","classes","clsx","aria-hidden","undefined","Typography","component","substring","toLocaleUpperCase","button","whiteSpace","homeLink","textTransform","titleContainer","flexGrow","avatarButton","padding","spacing","avatarText","h5","menuUsername","textAlign","searchBar","width","searchBarInput","paddingLeft","paddingRight","paddingTop","paddingBottom","toolbar","gap","AppBar","location","useLocation","isMobile","useState","menuAnchor","setMenuAnchor","credentials","useContext","CredentialsContext","closeMenu","history","useHistory","showSearchBar","setShowSearchBar","searchTerm","setSearchTerm","from","URLSearchParams","search","get","previousLocation","routes","home","menu","Menu","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","onClose","Divider","MenuItem","onClick","push","accountSettings","authService","logOut","then","avatar","loginProfile","isAuthenticated","IconButton","aria-label","e","currentTarget","Button","Link","to","login","Paper","onSubmit","preventDefault","pathname","deckSearch","encodeURIComponent","InputBase","inputProps","value","autoFocus","fullWidth","placeholder","startAdornment","InputAdornment","position","Search","endAdornment","Close","onChange","target","mobileToolbar","Toolbar","variant","standardToolbar","page","flexDirection","height","content","overflow","skipLink","top","left","secondary","dark","background","paper","zIndex","appBar","transition","transitions","create","duration","leavingScreen","easing","easeOut","textDecoration","enteringScreen","easeIn","Page","title","skipLinks","children","useEffect","document","useTitle","map","i","fragment","tabIndex","blur","element","querySelector","scrollIntoView","focus","scrollToAnchor","disableRipple","decksService","http","a","description","visibility","cards","this","post","authorId","getCurrentUser","sides","frontText","backText","data","id","findOneDeckResponseToDeck","params","decks","count","put","cardId","delete","apiClient","card","tags","justifyContent","LoadableComponent","loading","delay","showProgress","setShowProgress","timeout","setTimeout","clearTimeout","CircularProgress","RouterLink","textOverflow","buttonBox","deleteButton","error","main","DeckInfoTile","deckId","numberOfCards","author","onDelete","onExport","onEdit","stopPropagation","paginationContainer","paginationControls","results","emptyResults","alignItems","emptyResultsIcon","h1","clamp","min","max","Math","DeckSearchPage","deckSlice","setDeckSlice","totalDecks","setTotalDecks","qs","term","pageSizeString","pageSize","MathUtils","numberOfPages","ceil","pageString","setLoading","replace","toString","findAll","titleContains","caseInsensitive","take","skip","finally","deck","length","Pagination","_e","disabled"],"mappings":"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","file":"static/js/16.51913697.chunk.js","sourcesContent":["import { useMediaQuery, useTheme } from '@material-ui/core';\n\nexport default function useIsMobile() {\n  const theme = useTheme();\n  const match = useMediaQuery(theme.breakpoints.down('xs'), { noSsr: true });\n  return match;\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(theme.palette.grey[600]),\n    backgroundColor: theme.palette.grey[600],\n    display: 'flex',\n  },\n  text: {\n    fontSize: theme.typography.h4.fontSize,\n    fontWeight: theme.typography.fontWeightBold,\n  },\n}));\n\nexport default useStyles;\n","import { Avatar as MuiAvatar, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './avatar.styles';\n\nexport interface AvatarProps {\n  username?: string;\n  className?: string;\n  typographyClassName?: string;\n}\n\nexport default function Avatar({\n  username,\n  className,\n  typographyClassName,\n}: AvatarProps) {\n  const classes = useStyles();\n  return (\n    <MuiAvatar className={clsx(classes.root, className)} aria-hidden>\n      {username !== undefined && (\n        <Typography\n          className={clsx(classes.text, typographyClassName)}\n          component=\"div\"\n        >\n          {username.substring(0, 1).toLocaleUpperCase()}\n        </Typography>\n      )}\n    </MuiAvatar>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    whiteSpace: 'nowrap',\n  },\n  homeLink: {\n    textTransform: 'none',\n  },\n  titleContainer: {\n    flexGrow: 1,\n  },\n  avatarButton: {\n    padding: theme.spacing(0.5),\n  },\n  avatarText: {\n    fontSize: theme.typography.h5.fontSize,\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  menuUsername: {\n    textAlign: 'center',\n    padding: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  searchBar: {\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    },\n    maxWidth: '600px',\n    width: '100%',\n  },\n  searchBarInput: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      paddingRight: 0,\n    },\n  },\n  toolbar: {\n    gap: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import {\n  AppBar as MuiAppBar,\n  Button,\n  Divider,\n  IconButton,\n  InputAdornment,\n  InputBase,\n  Menu,\n  MenuItem,\n  Paper,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { Close, Search } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useContext, useState } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport CredentialsContext from '../../auth/contexts/credentials.context';\nimport { authService } from '../../auth/services/auth.service';\nimport useIsMobile from '../hooks/use-is-mobile';\nimport routes from '../../router/constants/routes';\nimport useStyles from './app-bar.styles';\nimport Avatar from './avatar';\n\nexport default function AppBar() {\n  const classes = useStyles();\n\n  const location = useLocation();\n\n  const isMobile = useIsMobile();\n\n  const [menuAnchor, setMenuAnchor] = useState<null | HTMLElement>(null);\n\n  const credentials = useContext(CredentialsContext);\n\n  const closeMenu = () => setMenuAnchor(null);\n  const history = useHistory();\n\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const qs = new URLSearchParams(location.search);\n  const from = qs.get('from');\n  const previousLocation = from ?? routes.home;\n\n  const menu = (\n    <Menu\n      open={menuAnchor !== null}\n      anchorEl={menuAnchor}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      getContentAnchorEl={undefined}\n      onClose={closeMenu}\n    >\n      <Typography className={classes.menuUsername}>\n        {credentials?.username.toLocaleUpperCase()}\n      </Typography>\n      <Divider />\n      <MenuItem\n        onClick={() => {\n          closeMenu();\n          history.push(routes.accountSettings);\n        }}\n      >\n        Manage account\n      </MenuItem>\n      <MenuItem\n        onClick={() => {\n          setMenuAnchor(null);\n          authService.logOut().then(() => history.push(routes.home));\n        }}\n      >\n        Sign out\n      </MenuItem>\n    </Menu>\n  );\n\n  const avatar = <Avatar username={credentials?.username} />;\n\n  const loginProfile = authService.isAuthenticated() ? (\n    <IconButton\n      aria-label=\"Account settings\"\n      className={classes.avatarButton}\n      color=\"inherit\"\n      onClick={(e) => setMenuAnchor(e.currentTarget)}\n    >\n      {avatar}\n    </IconButton>\n  ) : (\n    <Button\n      className={classes.button}\n      component={Link}\n      to={routes.login}\n      color=\"inherit\"\n    >\n      Log in\n    </Button>\n  );\n\n  const searchBar = (\n    <Paper className={classes.searchBar}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          history.push({\n            pathname: routes.deckSearch,\n            search: `?from=${encodeURIComponent(\n              location.pathname\n            )}&term=${encodeURIComponent(searchTerm)}`,\n          });\n        }}\n      >\n        <InputBase\n          inputProps={{ 'aria-label': 'Search' }}\n          value={searchTerm}\n          autoFocus={isMobile}\n          fullWidth={isMobile}\n          placeholder=\"Search\"\n          className={classes.searchBarInput}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Search />\n            </InputAdornment>\n          }\n          endAdornment={\n            isMobile ? (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"close search\"\n                  onClick={\n                    location.pathname === routes.deckSearch\n                      ? () => {\n                          setShowSearchBar(false);\n                          setSearchTerm('');\n                          history.push(previousLocation);\n                        }\n                      : () => {\n                          setShowSearchBar(false);\n                          setSearchTerm('');\n                        }\n                  }\n                >\n                  <Close />\n                </IconButton>\n              </InputAdornment>\n            ) : undefined\n          }\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </form>\n    </Paper>\n  );\n\n  const mobileToolbar = (\n    <Toolbar className={classes.toolbar}>\n      {location.pathname === routes.deckSearch || showSearchBar ? (\n        searchBar\n      ) : (\n        <>\n          <div className={classes.titleContainer}>\n            <Button\n              color=\"inherit\"\n              component={Link}\n              to={routes.home}\n              className={clsx(classes.button, classes.homeLink)}\n            >\n              <Typography variant=\"h6\" component=\"span\">\n                Basic Flashcards\n              </Typography>\n            </Button>\n          </div>\n          <IconButton\n            aria-label=\"toggle search\"\n            color=\"inherit\"\n            onClick={() => setShowSearchBar(true)}\n          >\n            <Search />\n          </IconButton>\n          {loginProfile}\n        </>\n      )}\n    </Toolbar>\n  );\n\n  const standardToolbar = (\n    <Toolbar className={classes.toolbar}>\n      <div className={classes.titleContainer}>\n        <Button\n          color=\"inherit\"\n          component={Link}\n          to={routes.home}\n          className={clsx(classes.button, classes.homeLink)}\n        >\n          <Typography variant=\"h6\" component=\"span\">\n            Basic Flashcards\n          </Typography>\n        </Button>\n      </div>\n      {searchBar}\n      {loginProfile}\n    </Toolbar>\n  );\n\n  return (\n    <MuiAppBar position=\"sticky\">\n      {menu}\n      {isMobile ? mobileToolbar : standardToolbar}\n    </MuiAppBar>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  content: {\n    flexGrow: 1,\n    overflow: 'auto',\n  },\n  skipLink: {\n    position: 'fixed',\n    top: theme.spacing(-10),\n    left: theme.spacing(2),\n    color: theme.palette.secondary.dark,\n    backgroundColor: theme.palette.background.paper,\n    textTransform: 'none',\n    zIndex: theme.zIndex.appBar + 1,\n    transition: theme.transitions.create(['top'], {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.easeOut,\n    }),\n    '&:focus': {\n      top: theme.spacing(2),\n      left: theme.spacing(2),\n      textDecoration: 'underline',\n      transition: theme.transitions.create(['top'], {\n        duration: theme.transitions.duration.enteringScreen,\n        easing: theme.transitions.easing.easeIn,\n      }),\n    },\n  },\n}));\n\nexport default useStyles;\n","import { Button, Link } from '@material-ui/core';\nimport { ReactNode } from 'react';\nimport useTitle from '../hooks/use-title';\nimport AppBar from './app-bar';\nimport useStyles from './page.styles';\n\nexport interface SkipLink {\n  fragment: string;\n  text: string;\n}\n\nexport interface PageProps {\n  title: string;\n  skipLinks?: SkipLink[];\n  children?: ReactNode;\n}\n\nexport default function Page({ title, skipLinks, children }: PageProps) {\n  const classes = useStyles();\n\n  useTitle(title);\n\n  const scrollToAnchor = (fragment: string) => {\n    const element = document.querySelector(`#${fragment}`);\n    element?.scrollIntoView();\n    (element as HTMLElement)?.focus();\n  };\n\n  return (\n    <>\n      {skipLinks !== undefined && (\n        <>\n          {skipLinks.map(({ fragment, text }, i) => (\n            // This would ideally just be a link, but fragment URLs won't work\n            // because react-hash-router is being used\n            <Link\n              key={i}\n              className={classes.skipLink}\n              tabIndex={0}\n              onClick={(e: any) => {\n                e.target.blur();\n                scrollToAnchor(fragment);\n              }}\n              component={Button}\n              color=\"secondary\"\n              disableRipple\n            >\n              {text}\n            </Link>\n          ))}\n        </>\n      )}\n      <div className={classes.page}>\n        <AppBar />\n        <div className={classes.content}>{children}</div>\n      </div>\n    </>\n  );\n}\n","import { useEffect } from 'react';\n\nexport default function useTitle(title: string) {\n  // Store and restore the previous title\n  useEffect(() => {\n    const { title } = document;\n    return () => {\n      document.title = title;\n    };\n  }, []);\n\n  // Set the title\n  useEffect(() => {\n    document.title = `${title} - Basic Flashcards`;\n  }, [title]);\n}\n","import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\nexport default useStyles;\n","import { CircularProgress } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ReactNode, useEffect, useState } from 'react';\nimport useStyles from './loadable-component.styles';\n\ninterface LoadableComponentProps {\n  loading?: boolean;\n  children: ReactNode;\n  className?: string;\n  delay?: number;\n}\n\nexport default function LoadableComponent({\n  loading,\n  children,\n  className,\n  delay = 300,\n}: LoadableComponentProps) {\n  const classes = useStyles();\n\n  const [showProgress, setShowProgress] = useState(delay <= 0);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowProgress(true);\n    }, delay);\n    return () => clearTimeout(timeout);\n  }, [delay]);\n\n  return loading ? (\n    <div className={clsx(classes.root, className)}>\n      {showProgress && <CircularProgress />}\n    </div>\n  ) : (\n    <>{children}</>\n  );\n}\n","import { Link as MuiLink, LinkProps as MuiLinkProps } from '@material-ui/core';\nimport { ReactNode } from 'react';\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\ninterface LinkProps {\n  to: RouterLinkProps['to'];\n  color?: MuiLinkProps['color'];\n  children?: ReactNode;\n}\n\nexport default function Link({ to, color, children }: LinkProps) {\n  return (\n    <MuiLink component={RouterLink} to={to} color={color}>\n      {children}\n    </MuiLink>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  title: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n  buttonBox: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  deleteButton: {\n    color: theme.palette.error.main,\n  },\n}));\n\nexport default useStyles;\n","import { Button, Paper, Typography } from '@material-ui/core';\nimport Link from '../../common/components/link';\nimport { deckView } from '../../router/utils/route.utils';\nimport useStyles from './deck-info-tile.styles';\n\ninterface DeckInfoTileProps {\n  title: string;\n  deckId: string;\n  numberOfCards: number;\n  author?: string;\n  onDelete?: () => void;\n  onExport?: () => void;\n  onEdit?: () => void;\n}\n\nexport default function DeckInfoTile({\n  title,\n  deckId,\n  numberOfCards,\n  author,\n  onDelete,\n  onExport,\n  onEdit,\n}: DeckInfoTileProps) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Link to={deckView(deckId)}>\n        <Typography className={classes.title} variant=\"h5\" component=\"div\">\n          {title}\n        </Typography>\n      </Link>\n      <Typography>{`${numberOfCards} cards`}</Typography>\n      {author && (\n        <Typography\n          onClick={(e: React.MouseEvent<HTMLSpanElement, MouseEvent>) =>\n            e.stopPropagation()\n          }\n          component=\"span\"\n        >\n          By <Link to={`/users/${author}`}>{author}</Link>\n        </Typography>\n      )}\n      {(onDelete || onExport || onEdit) && (\n        <div className={classes.buttonBox}>\n          {onDelete && (\n            <Button\n              className={classes.deleteButton}\n              onClick={(e) => {\n                e.stopPropagation();\n                onDelete();\n              }}\n            >\n              Delete\n            </Button>\n          )}\n          {onExport && (\n            <Button\n              onClick={(e) => {\n                e.stopPropagation();\n                onExport();\n              }}\n            >\n              Export\n            </Button>\n          )}\n          {onEdit && (\n            <Button\n              color=\"primary\"\n              onClick={(e: any) => {\n                e.stopPropagation();\n                onEdit();\n              }}\n            >\n              Edit\n            </Button>\n          )}\n        </div>\n      )}\n    </Paper>\n  );\n}\n","export function deckEdit(id: string) {\n  return `/decks/${id}/edit`;\n}\n\nexport function deckView(id: string) {\n  return `/decks/${id}`;\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    height: '100%',\n    padding: theme.spacing(3),\n  },\n  paginationContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  paginationControls: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  results: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  emptyResults: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    height: '100%',\n  },\n  emptyResultsIcon: {\n    fontSize: theme.typography.h1.fontSize,\n  },\n}));\n\nexport default useStyles;\n","/**\n * Returns the result of constraining an inclusive range.\n *\n * @param min - The minimum value the result can be\n * @param max - The maximum value the result can be\n * @param value - The value to constrain\n * @returns The value of `value` if `min <= value <= max`, `min` if `value < min`, and `max` if `value > max`\n */\nexport function clamp(min: number, max: number, value: number): number {\n  return Math.max(min, Math.min(max, value));\n}\n","import { Pagination } from '@material-ui/lab';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport DeckInfoTile from '../../dashboard/components/deck-info-tile';\nimport routes from '../../router/constants/routes';\nimport Deck from '../interfaces/deck';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './deck-search.page.styles';\nimport * as MathUtils from '../../common/utils/math.utils';\nimport { Search } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport Page from '../../common/components/page';\n\nexport default function DeckSearchPage() {\n  const classes = useStyles();\n\n  const [deckSlice, setDeckSlice] = useState<Deck[]>([]);\n  const [totalDecks, setTotalDecks] = useState(0);\n\n  const { search } = useLocation();\n  const qs = new URLSearchParams(search);\n\n  const term = qs.get('term') ?? '';\n\n  const pageSizeString = qs.get('pageSize');\n  const pageSize = MathUtils.clamp(\n    1,\n    50,\n    pageSizeString ? +pageSizeString : 10\n  );\n\n  const numberOfPages = Math.max(1, Math.ceil(totalDecks / pageSize));\n\n  const pageString = qs.get('page');\n  const page = MathUtils.clamp(1, numberOfPages, pageString ? +pageString : 1);\n\n  const from = qs.get('from');\n\n  const [loading, setLoading] = useState(true);\n\n  const history = useHistory();\n\n  // Remove the from search param\n  useEffect(() => {\n    if (from) {\n      qs.delete('from');\n      history.replace({ search: qs.toString() });\n    }\n  });\n\n  useEffect(() => {\n    // Do not send a request if the from param is being removed\n    if (from) {\n      return;\n    }\n    if (!term) {\n      setLoading(false);\n      setDeckSlice([]);\n      return;\n    }\n    setLoading(true);\n    decksService\n      .findAll({\n        titleContains: term,\n        caseInsensitive: true,\n        take: pageSize,\n        skip: (page - 1) * pageSize,\n      })\n      .then(({ decks, count }) => {\n        setDeckSlice(decks);\n        setTotalDecks(count);\n      })\n      .finally(() => setLoading(false));\n  }, [from, page, pageSize, term]);\n\n  const results = (\n    <main className={classes.paginationContainer}>\n      <Typography variant=\"h1\">Results</Typography>\n      <div className={classes.results}>\n        {deckSlice.map((deck) => (\n          <DeckInfoTile\n            key={deck.id}\n            deckId={deck.id ?? ''}\n            title={deck.title}\n            numberOfCards={deck.cards.length}\n            author={deck.authorId ?? ''}\n          />\n        ))}\n      </div>\n      {totalDecks / pageSize > 1 && (\n        <div className={classes.paginationControls}>\n          <Pagination\n            count={numberOfPages}\n            page={page}\n            onChange={(_e, value) =>\n              history.push({\n                pathname: routes.deckSearch,\n                search: `?term=${encodeURIComponent(\n                  term\n                )}&page=${encodeURIComponent(\n                  value\n                )}&pageSize=${encodeURIComponent(pageSize)}`,\n              })\n            }\n            disabled={loading}\n          />\n        </div>\n      )}\n    </main>\n  );\n\n  const emptyResults = (\n    <div className={classes.emptyResults}>\n      <Search className={classes.emptyResultsIcon} />\n      <Typography variant=\"h4\" component=\"div\">\n        No results found\n      </Typography>\n      <Typography>Enter a new search and results will show up here.</Typography>\n    </div>\n  );\n\n  return (\n    <Page\n      title={`Search \"${term}\"`}\n      skipLinks={[{ fragment: 'content', text: 'Skip to content' }]}\n    >\n      <main className={classes.content}>\n        <LoadableComponent loading={loading}>\n          {totalDecks > 0 ? results : emptyResults}\n        </LoadableComponent>\n      </main>\n    </Page>\n  );\n}\n"],"sourceRoot":""}