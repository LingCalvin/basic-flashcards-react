{"version":3,"sources":["auth/components/form.styles.tsx","auth/components/registration-form.tsx","auth/pages/registration.page.styles.tsx","auth/pages/registration.page.tsx"],"names":["useStyles","makeStyles","theme","form","display","flexDirection","gap","spacing","submitOrAltRow","justifyContent","alignItems","schema","yup","shape","username","label","required","password","min","confirmPassword","oneOf","RegistrationForm","variant","onSubmit","classes","useForm","resolver","yupResolver","errors","formState","handleSubmit","register","className","TextField","inputProps","error","undefined","helperText","message","type","Button","component","Link","to","routes","login","color","content","padding","RegistrationPage","useState","serverError","setServerError","history","useHistory","Container","Alert","severity","value","userService","create","then","push","catch","e","response","data"],"mappings":"yIAAA,aAEMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,IAAKJ,EAAMK,QAAQ,IAErBC,eAAgB,CACdJ,QAAS,OACTK,eAAgB,gBAChBC,WAAY,cAIDV,O,iNCDTW,EAASC,MAAaC,MAAM,CAChCC,SAAUF,MAAaG,MAAM,YAAYC,WACzCC,SAAUL,MAAaG,MAAM,YAAYC,WAAWE,IAAI,GACxDC,gBAAiBP,MAEdG,MAAM,oBACNC,WACAI,MAAM,CAACR,IAAQ,YAAa,MAAO,0BAQzB,SAASS,EAAT,GAGY,IAAD,MAFxBC,EAEwB,EAFxBA,QACAC,EACwB,EADxBA,SAEMC,EAAUxB,cAEhB,EAIIyB,YAAoB,CAAEC,SAAUC,YAAYhB,KAHjCiB,EADf,EACEC,UAAaD,OACbE,EAFF,EAEEA,aACAC,EAHF,EAGEA,SAGF,OACE,uBAAMC,UAAWR,EAAQrB,KAAMoB,SAAUO,EAAaP,GAAtD,UACE,cAACU,EAAA,EAAD,CACElB,MAAM,WACNO,QAASA,EACTY,WAAYH,EAAS,YACrBI,WAA2BC,IAApBR,EAAOd,SACduB,WAAU,UAAET,EAAOd,gBAAT,aAAE,EAAiBwB,UAE/B,cAACL,EAAA,EAAD,CACElB,MAAM,WACNwB,KAAK,WACLjB,QAASA,EACTY,WAAYH,EAAS,YACrBI,WAA2BC,IAApBR,EAAOX,SACdoB,WAAU,UAAET,EAAOX,gBAAT,aAAE,EAAiBqB,UAE/B,cAACL,EAAA,EAAD,CACElB,MAAM,mBACNwB,KAAK,WACLjB,QAASA,EACTY,WAAYH,EAAS,mBACrBI,WAAkCC,IAA3BR,EAAOT,gBACdkB,WAAU,UAAET,EAAOT,uBAAT,aAAE,EAAwBmB,UAEtC,sBAAKN,UAAWR,EAAQhB,eAAxB,UACE,cAACgC,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAIC,IAAOC,MAAOC,MAAM,UAAjD,oBAGA,cAACN,EAAA,EAAD,CAAQD,KAAK,SAASjB,QAAQ,YAAYwB,MAAM,UAAhD,4B,aC3DO9C,EATGC,aAAW,SAACC,GAAD,MAAY,CACvC6C,QAAS,CACP3C,QAAS,OACTC,cAAe,SACfC,IAAKJ,EAAMK,QAAQ,GACnByC,QAAS9C,EAAMK,QAAQ,QCEZ,SAAS0C,IACtB,IAAMzB,EAAUxB,IAEhB,EAAsCkD,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAUC,cAChB,OACE,8BACE,eAACC,EAAA,EAAD,CAAWvB,UAAWR,EAAQuB,QAA9B,UACGI,GAAe,cAACK,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBN,IACzC,cAAC9B,EAAD,CACEC,QAAQ,WACRC,SAAU,SAACmC,GACTC,IACGC,OAAOF,GACPG,MAAK,kBAAMR,EAAQS,KAAKlB,IAAOC,UAC/BkB,OAAM,SAACC,GACW,IAAD,IAAZA,EAAEC,SACJb,EAAc,UAACY,EAAEC,gBAAH,iBAAC,EAAYC,YAAb,aAAC,EAAkB5B,SAEjCc,EAAe","file":"static/js/17.9f5f1677.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  submitOrAltRow: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nexport default useStyles;\n","import { Button, TextField, TextFieldProps } from '@material-ui/core';\nimport useStyles from './form.styles';\nimport routes from '../../router/constants/routes';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nexport type FormValues = {\n  username: string;\n  password: string;\n  confirmPassword: string;\n};\n\nconst schema = yup.object().shape({\n  username: yup.string().label('Username').required(),\n  password: yup.string().label('Password').required().min(8),\n  confirmPassword: yup\n    .string()\n    .label('Confirm password')\n    .required()\n    .oneOf([yup.ref('password'), null], 'Passwords must match'),\n});\n\ninterface RegistrationFormProps {\n  variant?: TextFieldProps['variant'];\n  onSubmit: (value: FormValues) => void;\n}\n\nexport default function RegistrationForm({\n  variant,\n  onSubmit,\n}: RegistrationFormProps) {\n  const classes = useStyles();\n\n  const {\n    formState: { errors },\n    handleSubmit,\n    register,\n  } = useForm<FormValues>({ resolver: yupResolver(schema) });\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n      <TextField\n        label=\"Username\"\n        variant={variant}\n        inputProps={register('username')}\n        error={errors.username !== undefined}\n        helperText={errors.username?.message}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        variant={variant}\n        inputProps={register('password')}\n        error={errors.password !== undefined}\n        helperText={errors.password?.message}\n      />\n      <TextField\n        label=\"Confirm password\"\n        type=\"password\"\n        variant={variant}\n        inputProps={register('confirmPassword')}\n        error={errors.confirmPassword !== undefined}\n        helperText={errors.confirmPassword?.message}\n      />\n      <div className={classes.submitOrAltRow}>\n        <Button component={Link} to={routes.login} color=\"primary\">\n          Log in\n        </Button>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Register\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Container } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport routes from '../../router/constants/routes';\nimport userService from '../../user/services/user.service';\nimport RegistrationForm from '../components/registration-form';\nimport useStyles from './registration.page.styles';\n\nexport default function RegistrationPage() {\n  const classes = useStyles();\n\n  const [serverError, setServerError] = useState('');\n  const history = useHistory();\n  return (\n    <div>\n      <Container className={classes.content}>\n        {serverError && <Alert severity=\"error\">{serverError}</Alert>}\n        <RegistrationForm\n          variant=\"outlined\"\n          onSubmit={(value) => {\n            userService\n              .create(value)\n              .then(() => history.push(routes.login))\n              .catch((e) => {\n                if (e.response) {\n                  setServerError(e.response?.data?.message);\n                } else {\n                  setServerError('An error has occurred.');\n                }\n              });\n          }}\n        />\n      </Container>\n    </div>\n  );\n}\n"],"sourceRoot":""}