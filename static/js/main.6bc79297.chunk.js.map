{"version":3,"sources":["deck/constants/example-deck.ts","deck/components/card-list.styles.tsx","deck/components/card-list.tsx","card/components/card-side.styles.tsx","card/components/card-side.tsx","card/components/card.styles.tsx","card/components/card.tsx","deck/components/deck-stack.styles.tsx","deck/components/deck-stack.tsx","deck/components/deck-stack-controls.styles.tsx","deck/components/deck-stack-controls.tsx","deck/pages/deck.page.styles.tsx","deck/pages/deck.page.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["exampleDeck","id","title","cards","sides","text","tags","useStyles","makeStyles","theme","root","display","gridTemplateColumns","columnGap","spacing","gap","CardList","classes","className","map","card","Fragment","Typography","Divider","orientation","JSON","stringify","flexDirection","justifyContent","content","textAlign","padding","typography","fontSize","h5","CardSide","clsx","CardContent","gridTemplateAreas","transformStyle","cardFlipTransition","transition","flip","transform","cardSide","gridArea","backfaceVisibility","cardBack","Card","frontText","backText","showBack","disableTransition","onFlip","onClick","height","width","hiddenCard","DeckStack","activeIndex","showCardBack","disableCardFlipTransition","onFlipCard","activeCard","alignItems","positionIndicator","DeckStackControls","currentIndex","numberOfCards","onBack","onForward","IconButton","disabled","ArrowBack","variant","align","ArrowForward","margin","deckStack","maxWidth","deckStackContainer","section","progressBar","tagList","flexWrap","DeckPage","deck","useState","activeCardIndex","setActiveCardIndex","setShowCardBack","setDisableCardFlipTransition","useEffect","resetCardViewAndDisableTransition","state","length","LinearProgress","value","tag","Chip","label","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6bc79297.chunk.js","sourcesContent":["import Deck from '../interfaces/deck';\n\nconst exampleDeck: Deck = {\n  id: '8b5bc293-1c71-47c5-85a7-f980464ef546',\n  title: 'Spelling Numbers',\n  cards: [\n    {\n      sides: [{ text: '0' }, { text: 'Zero' }],\n    },\n    {\n      sides: [{ text: '1' }, { text: 'One' }],\n    },\n    {\n      sides: [{ text: '2' }, { text: 'Two' }],\n    },\n    {\n      sides: [{ text: '3' }, { text: 'Three' }],\n    },\n    {\n      sides: [{ text: '4' }, { text: 'Four' }],\n    },\n    {\n      sides: [{ text: '5' }, { text: 'Five' }],\n    },\n    {\n      sides: [{ text: '6' }, { text: 'Six' }],\n    },\n    {\n      sides: [{ text: '7' }, { text: 'Seven' }],\n    },\n    {\n      sides: [{ text: '8' }, { text: 'Eight' }],\n    },\n    {\n      sides: [{ text: '9' }, { text: 'Nine' }],\n    },\n  ],\n  tags: ['English', 'Numbers', 'Spelling'],\n};\n\nexport default exampleDeck;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '2fr auto 3fr',\n    columnGap: theme.spacing(2),\n    gap: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Divider, Typography } from '@material-ui/core';\nimport React from 'react';\nimport Card from '../../card/interfaces/card';\nimport useStyles from './card-list.styles';\n\ninterface CardListProps {\n  cards: Card[];\n}\n\nexport default function CardList({ cards }: CardListProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {cards.map((card) => (\n        <React.Fragment key={card.id ?? JSON.stringify(card)}>\n          <Typography>{card.sides[0].text}</Typography>\n          <Divider orientation=\"vertical\" />\n          <Typography>{card.sides[1].text}</Typography>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: theme.spacing(3),\n  },\n  typography: {\n    fontSize: theme.typography.h5.fontSize,\n  },\n}));\n\nexport default useStyles;\n","import { Card as MuiCard, CardContent, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './card-side.styles';\n\ninterface CardSideProps {\n  text: string;\n  className?: string;\n}\n\nexport default function CardSide({ text, className }: CardSideProps) {\n  const classes = useStyles();\n  return (\n    <MuiCard className={clsx(classes.root, className)}>\n      <CardContent className={classes.content}>\n        <Typography className={classes.typography}>{text}</Typography>\n      </CardContent>\n    </MuiCard>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {\n    display: 'grid',\n    gridTemplateAreas: '\"main\"',\n    transformStyle: 'preserve-3d',\n  },\n  cardFlipTransition: {\n    transition: 'transform 0.4s',\n  },\n  flip: {\n    transform: 'rotateX(180deg)',\n  },\n  cardSide: {\n    gridArea: 'main',\n    backfaceVisibility: 'hidden',\n  },\n  cardBack: {\n    transform: 'rotateX(180deg)',\n  },\n}));\n\nexport default useStyles;\n","import clsx from 'clsx';\nimport CardSide from './card-side';\nimport useStyles from './card.styles';\n\ninterface CardProps {\n  frontText: string;\n  backText: string;\n  showBack: boolean;\n  disableTransition?: boolean;\n  className?: string;\n  onFlip: () => void;\n}\n\nexport default function Card({\n  frontText,\n  backText,\n  showBack,\n  disableTransition,\n  className,\n  onFlip,\n}: CardProps) {\n  const classes = useStyles();\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        !disableTransition && classes.cardFlipTransition,\n        showBack && classes.flip,\n        className\n      )}\n      onClick={onFlip}\n    >\n      <CardSide className={classes.cardSide} text={frontText} />\n      <CardSide\n        className={clsx(classes.cardSide, classes.cardBack)}\n        text={backText}\n      />\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  card: {\n    height: '100%',\n    width: '100%',\n  },\n  hiddenCard: {\n    display: 'none',\n  },\n});\n\nexport default useStyles;\n","import CardComponent from '../../card/components/card';\nimport Card from '../../card/interfaces/card';\nimport useStyles from './deck-stack.styles';\n\ninterface DeckStackProps {\n  cards: Card[];\n  activeIndex: number;\n  showCardBack: boolean;\n  disableCardFlipTransition?: boolean;\n  className?: string;\n  onFlipCard: () => void;\n}\n\nexport default function DeckStack({\n  cards,\n  activeIndex,\n  showCardBack,\n  disableCardFlipTransition,\n  className,\n  onFlipCard,\n}: DeckStackProps) {\n  const activeCard = cards[activeIndex];\n  const classes = useStyles();\n\n  return (\n    <div className={className}>\n      {/* {cards.map((card, cardIndex) => (\n        <CardComponent\n          className={clsx(\n            classes.card,\n            cardIndex !== activeIndex && classes.hiddenCard\n          )}\n          frontText={card.sides[0].text}\n          backText={card.sides[1].text}\n          showBack={showCardBack}\n          onFlip={onFlipCard}\n        />\n      ))} */}\n      <CardComponent\n        className={classes.card}\n        frontText={activeCard.sides[0].text}\n        backText={activeCard.sides[1].text}\n        showBack={showCardBack}\n        disableTransition={disableCardFlipTransition}\n        onFlip={onFlipCard}\n      />\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  positionIndicator: {\n    width: '10ch',\n  },\n});\n\nexport default useStyles;\n","import { IconButton, Typography } from '@material-ui/core';\nimport { ArrowBack, ArrowForward } from '@material-ui/icons';\nimport useStyles from './deck-stack-controls.styles';\n\ninterface DeckStackControlsProps {\n  currentIndex: number;\n  numberOfCards: number;\n  onBack: () => void;\n  onForward: () => void;\n}\n\nexport default function DeckStackControls({\n  currentIndex,\n  numberOfCards,\n  onBack,\n  onForward,\n}: DeckStackControlsProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={onBack} disabled={currentIndex === 0}>\n        <ArrowBack />\n      </IconButton>\n      <Typography\n        variant=\"subtitle2\"\n        align=\"center\"\n        className={classes.positionIndicator}\n      >{`${currentIndex + 1}/${numberOfCards}`}</Typography>\n      <IconButton\n        onClick={onForward}\n        disabled={currentIndex === numberOfCards - 1}\n      >\n        <ArrowForward />\n      </IconButton>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    margin: theme.spacing(3),\n  },\n  deckStack: {\n    height: 280,\n    width: '100%',\n    maxWidth: 397,\n  },\n  deckStackContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  section: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  progressBar: {\n    width: '100%',\n    maxWidth: 400,\n  },\n  tagList: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(0.5),\n  },\n}));\n\nexport default useStyles;\n","import { Chip, LinearProgress, Typography } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport CardList from '../components/card-list';\nimport DeckStack from '../components/deck-stack';\nimport DeckStackControls from '../components/deck-stack-controls';\nimport Deck from '../interfaces/deck';\nimport useStyles from './deck.page.styles';\n\ninterface DeckPageProps {\n  deck: Deck;\n}\n\nexport default function DeckPage({ deck }: DeckPageProps) {\n  const classes = useStyles();\n  const [activeCardIndex, setActiveCardIndex] = useState(0);\n  const [showCardBack, setShowCardBack] = useState(false);\n  const [disableCardFlipTransition, setDisableCardFlipTransition] = useState(\n    false\n  );\n\n  useEffect(() => {\n    // Re-enable transitions\n    setDisableCardFlipTransition(false);\n  }, [activeCardIndex]);\n\n  const resetCardViewAndDisableTransition = () => {\n    // Disable transitions when going to another card\n    setDisableCardFlipTransition(true);\n    setShowCardBack(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <section className={classes.section}>\n        <Typography variant=\"h4\">{deck.title}</Typography>\n        <div className={classes.deckStackContainer}>\n          <DeckStack\n            className={classes.deckStack}\n            cards={deck.cards}\n            activeIndex={activeCardIndex}\n            showCardBack={showCardBack}\n            disableCardFlipTransition={disableCardFlipTransition}\n            onFlipCard={() => setShowCardBack((state) => !state)}\n          />\n          <DeckStackControls\n            currentIndex={activeCardIndex}\n            numberOfCards={deck.cards.length}\n            onBack={() => {\n              resetCardViewAndDisableTransition();\n              setActiveCardIndex((state) => state - 1);\n            }}\n            onForward={() => {\n              resetCardViewAndDisableTransition();\n              setActiveCardIndex((state) => state + 1);\n            }}\n          />\n          <LinearProgress\n            className={classes.progressBar}\n            variant=\"determinate\"\n            value={(activeCardIndex / (deck.cards.length - 1)) * 100}\n          />\n        </div>\n      </section>\n      <section className={classes.section}>\n        <Typography variant=\"h5\">Tags</Typography>\n        <div className={classes.tagList}>\n          {deck.tags.map((tag) => (\n            <Chip key={tag} label={tag} variant=\"outlined\" />\n          ))}\n        </div>\n      </section>\n\n      <section className={classes.section}>\n        <Typography variant=\"h5\">Terms</Typography>\n        <CardList cards={deck.cards} />\n      </section>\n    </div>\n  );\n}\n","import exampleDeck from './deck/constants/example-deck';\nimport DeckPage from './deck/pages/deck.page';\n\nexport default function App() {\n  return <DeckPage deck={exampleDeck} />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}