{"version":3,"sources":["auth/contexts/credentials.context.tsx","common/services/local-storage.service.ts","common/constants/api-client.ts","user/services/user.service.ts","auth/utils/credentials.utils.ts","common/components/app-bar-with-back-button.tsx","router/constants/routes.ts","common/hooks/use-text-field-value.tsx","common/components/validated-text-field.tsx","common/constants/missing-required-field-error-message.tsx","auth/components/form.styles.tsx","auth/components/login-form.tsx","auth/services/auth.service.ts","auth/pages/login.page.styles.tsx","auth/pages/login.page.tsx","auth/components/registration-form.tsx","auth/pages/registration.page.styles.tsx","auth/pages/registration.page.tsx","common/hooks/use-is-mobile.tsx","common/hooks/use-unique-id.tsx","deck/services/decks.service.ts","dashboard/components/app-bar.styles.tsx","dashboard/components/app-bar.tsx","common/components/link.tsx","dashboard/components/deck-info-tile.styles.tsx","dashboard/components/deck-info-tile.tsx","dashboard/pages/dashboard.page.styles.tsx","router/utils/route.utils.ts","dashboard/components/delete-deck-dialog.tsx","common/constants/snackbar.ts","dashboard/pages/dashboard.page.tsx","common/hooks/use-debounced-value.tsx","common/utils/download.utils.ts","common/components/loadable-component.styles.tsx","common/components/loadable-component.tsx","dashboard/pages/home.page.styles.tsx","dashboard/pages/home.page.tsx","deck/components/edit-card-tile.styles.tsx","deck/components/edit-card-tile.tsx","deck/components/edit-deck-form.styles.tsx","deck/components/edit-deck-form.tsx","deck/pages/add-deck.page.styles.tsx","deck/pages/add-deck.page.tsx","deck/components/card-list.styles.tsx","deck/components/card-list.tsx","card/components/card-side.styles.tsx","card/components/card-side.tsx","card/components/card.styles.tsx","card/components/card.tsx","deck/components/deck-stack.styles.tsx","deck/components/deck-stack.tsx","deck/components/deck-stack-controls.styles.tsx","deck/components/deck-stack-controls.tsx","deck/pages/deck.page.styles.tsx","deck/pages/deck.page.tsx","router/components/protected-route.tsx","deck/pages/edit-deck.page.tsx","deck/pages/deck-search.page.styles.tsx","common/utils/math.utils.ts","deck/pages/deck-search.page.tsx","router/components/router.tsx","app.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["CredentialsContext","createContext","localStorageService","key","localStorage","getItem","removeItem","document","dispatchEvent","Event","value","setItem","apiClient","axios","create","baseURL","process","withCredentials","interceptors","request","use","config","accessToken","headers","userService","http","params","this","post","raw","JSON","parse","retrieve","user","getCurrentUser","AppBarWithBackButton","title","onBack","history","useHistory","position","Toolbar","IconButton","edge","color","onClick","goBack","ArrowBack","Typography","variant","routes","home","dashboard","decks","deckSearch","deckAdd","deckEdit","deckView","login","registration","useTextFieldValue","useState","val","setVal","e","target","ValidatedTextField","forceValidate","onValidate","onChange","onBlur","rest","checkValid","setCheckValid","errorMessage","TextField","error","undefined","helperText","missingRequiredFieldErrorMessage","useStyles","makeStyles","theme","form","display","flexDirection","gap","spacing","submitOrAltRow","justifyContent","alignItems","LoginForm","username","password","onChangeUsername","onChangePassword","onSubmit","classes","setForceValidate","validateRequired","validator","isEmpty","className","noValidate","preventDefault","some","label","required","type","Button","component","Link","to","authService","a","data","decodedAccessToken","stringify","id","sub","token","get","accessTokenPayload","content","padding","LoginPage","credentials","useContext","serverError","setServerError","search","useLocation","redirectURL","URLSearchParams","Container","Alert","severity","logIn","catch","response","message","RegistrationForm","confirmPassword","onChangeConfirmPassword","textFieldVariant","validateConfirmPassword","RegistrationPage","then","push","useIsMobile","useTheme","useMediaQuery","breakpoints","down","noSsr","uniqueIdNumber","useUniqueId","useRef","current","decksService","description","visibility","cards","authorId","map","sides","frontText","text","backText","findOneDeckResponseToDeck","count","put","cardId","delete","card","tags","button","whiteSpace","homeLink","textTransform","titleContainer","flexGrow","avatarButton","menuUsername","textAlign","fontWeight","typography","fontWeightBold","searchBar","width","searchBarInput","paddingLeft","paddingTop","paddingBottom","toolbar","AppBar","searchBarOpen","searchBarValue","onChangeSearchBarValue","onCloseSearchBar","onSearch","location","isMobile","menuAnchor","setMenuAnchor","closeMenu","showSearchBar","setShowSearchBar","searchTerm","onSearchTermChange","handleChangeSearchBarValue","menu","Menu","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","onClose","toLocaleUpperCase","Divider","MenuItem","logOut","avatar","Avatar","substring","loginProfile","isAuthenticated","currentTarget","Paper","pathname","encodeURIComponent","InputBase","autoFocus","fullWidth","placeholder","startAdornment","InputAdornment","Search","endAdornment","Close","mobileToolbar","clsx","aria-label","standardToolbar","children","RouterLink","root","cursor","backgroundColor","palette","grey","textOverflow","overflow","buttonBox","DeckInfoTile","numberOfCards","deckId","author","onDelete","onExport","onEdit","stopPropagation","paginationContainer","paginationControls","deckList","sortAndSearchContainer","fab","bottom","right","marginLeft","uploadInput","snackbar","DeleteDeckDialog","deckTitle","onBackDropClick","onCancel","onExited","Dialog","onBackdropClick","DialogTitle","DialogContent","DialogContentText","DialogActions","autoHideDuration","DashboardPage","pageSize","userId","Error","loadedDecks","setLoadedDecks","totalDecks","setTotalDecks","page","setPage","loading","setLoading","setSearch","searchValue","timeout","debouncedValue","setDebouncedValue","lastFired","Date","now","useEffect","handle","setTimeout","clearTimeout","useDebouncedValue","transitions","duration","short","exportDeck","deck","deckJSON","blob","blobLink","window","URL","createObjectURL","createElement","href","download","click","revokeObjectURL","downloadBlob","Blob","findDecks","findAll","res","finally","orderTitleBy","take","skip","caseInsensitive","titleContains","showDialog","setShowDialog","deckToDelete","setDeckToDelete","showSnackbar","setShowSnackbar","snackbarMessage","setSnackbarMessage","remove","InputLabel","Select","labelId","accept","hidden","changeEvent","reader","FileReader","file","files","onload","result","readAsText","length","Pagination","Math","ceil","_e","disabled","Fab","Add","Snackbar","LoadableComponent","CircularProgress","topSection","primary","dark","contrastText","exampleDecksContainer","exampleDecksSection","marginRight","HomePage","exampleDecks","setExampleDecks","textFieldContainer","gridTemplateColumns","cardContent","margin","actionArea","EditCardTile","cardNumber","onFrontTextChange","onBackTextChange","onMoveUp","onMoveDown","validateFrontText","setValidateFrontText","frontTextValid","frontTextError","validateBackText","setValidateBackText","backTextValid","backTextError","Card","multiline","Delete","ArrowUpward","ArrowDownward","marginTop","marginBottom","generalInfoContainer","cardList","saveButtonContainer","EditDeckForm","onTitleChange","onDescriptionChange","onChangeVisibility","onCardsChange","visibilityId","validateTitle","setValidateTitle","showTitleError","changeCardSideText","cardIndex","side","newCards","modifiedCard","moveCard","currentIndex","targetIndex","splice","FormControl","i","index","slice","startIcon","backdrop","zIndex","appBar","AddDeckPage","setTitle","setDescription","setVisibility","setCards","submitting","setSubmitting","setShowsSnackbar","Backdrop","columnGap","CardList","Fragment","orientation","fontSize","h5","CardSide","CardContent","gridTemplateAreas","transformStyle","cardFlipTransition","transition","flip","transform","cardSide","gridArea","backfaceVisibility","cardBack","showBack","onFlip","height","hiddenCard","DeckStack","activeIndex","showCardBack","onFlipCard","activeCard","unmount","setUnmount","useLayoutEffect","positionIndicator","DeckStackControls","onForward","align","ArrowForward","deckStack","maxWidth","deckStackContainer","section","progressBar","tagList","flexWrap","DeckPage","activeCardIndex","setActiveCardIndex","setShowCardBack","useParams","setDeck","findOne","sortedTags","useMemo","sort","state","Slider","max","valueLabelFormat","_event","tag","Chip","ProtectedRoute","props","path","EditDeckPage","update","results","clamp","min","DeckSearchPage","deckSlice","setDeckSlice","qs","term","pageSizeString","MathUtils","numberOfPages","pageString","from","previousLocation","replace","toString","setSearchBarValue","Router","exact","App","setCredentials","syncCredentials","addEventListener","removeEventListener","Provider","CssBaseline","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","navigator","serviceWorker","ready","unregister","console"],"mappings":"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","file":"static/js/main.7ccdfe4f.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport Credentials from '../interfaces/credentials';\n\nconst CredentialsContext = createContext<Credentials | null>(null);\nexport default CredentialsContext;\n","export class LocalStorageService {\n  getItem(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  removeItem(key: string): void {\n    localStorage.removeItem(key);\n    document.dispatchEvent(new Event('localStorageServiceChange'));\n  }\n\n  setItem(key: string, value: string) {\n    localStorage.setItem(key, value);\n    document.dispatchEvent(new Event('localStorageServiceChange'));\n  }\n}\n\nconst localStorageService = new LocalStorageService();\nexport default localStorageService;\n","import axios from 'axios';\nimport localStorageService from '../services/local-storage.service';\n\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true,\n});\n\n// Send the access token with requests if present\napiClient.interceptors.request.use((config) => {\n  const accessToken = localStorageService.getItem('accessToken');\n  if (accessToken) {\n    config.headers['Authorization'] = `Bearer ${accessToken}`;\n  }\n  return config;\n});\n\nexport default apiClient;\n","import { AxiosInstance } from 'axios';\nimport apiClient from '../../common/constants/api-client';\nimport localStorageService from '../../common/services/local-storage.service';\nimport CreateParams from '../interfaces/create-params';\nimport User from '../interfaces/user';\n\nexport class UserService {\n  constructor(private http: AxiosInstance) {}\n  create(params: CreateParams) {\n    return this.http.post('/users', params);\n  }\n\n  getCurrentUser(): User | null {\n    const raw = localStorageService.getItem('user');\n    if (!raw) {\n      return null;\n    }\n    return JSON.parse(raw);\n  }\n}\n\nconst userService = new UserService(apiClient);\nexport default userService;\n","import localStorageService from '../../common/services/local-storage.service';\nimport userService from '../../user/services/user.service';\n\nexport function retrieve() {\n  // TODO: check access token expiration\n  const user = userService.getCurrentUser();\n  const accessToken = localStorageService.getItem('accessToken');\n  if (!user || !accessToken) {\n    return null;\n  }\n  return { ...user, accessToken };\n}\n","import {\n  AppBar as MuiAppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\nimport { useHistory } from 'react-router';\n\ninterface AppBarWithBackButtonProps {\n  title: string;\n  onBack?: () => void;\n}\n\nexport default function AppBarWithBackButton({\n  title,\n  onBack,\n}: AppBarWithBackButtonProps) {\n  const history = useHistory();\n  return (\n    <MuiAppBar position=\"sticky\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={onBack ?? (() => history.goBack())}\n        >\n          <ArrowBack />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Toolbar>\n    </MuiAppBar>\n  );\n}\n","const routes = {\n  home: '/',\n  dashboard: '/dashboard',\n  decks: '/decks',\n  deckSearch: '/search',\n  deckAdd: '/add-deck',\n  deckEdit: '/decks/:id/edit',\n  deckView: '/decks/:id',\n  login: '/auth/login',\n  registration: '/auth/register',\n};\n\nexport default routes;\n","import { useState } from 'react';\n\nexport default function useTextFieldValue(\n  value: string\n): [string, React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>] {\n  const [val, setVal] = useState(value);\n  return [\n    val,\n    (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) =>\n      setVal(e.target.value),\n  ];\n}\n","import { TextField, TextFieldProps } from '@material-ui/core';\nimport { useState } from 'react';\n\ntype ValidatedTextFieldProps = TextFieldProps & {\n  onValidate: (value: string) => string | undefined;\n  forceValidate?: boolean;\n  value: string;\n};\n\nexport default function ValidatedTextField({\n  forceValidate,\n  onValidate,\n  onChange,\n  onBlur,\n  ...rest\n}: ValidatedTextFieldProps) {\n  const [checkValid, setCheckValid] = useState(false);\n  const errorMessage = onValidate(rest.value);\n  return (\n    <TextField\n      error={(forceValidate || checkValid) && errorMessage !== undefined}\n      helperText={(forceValidate || checkValid) && errorMessage}\n      onChange={(e) => {\n        setCheckValid(true);\n        onChange?.(e);\n      }}\n      onBlur={(e) => {\n        setCheckValid(true);\n        onBlur?.(e);\n      }}\n      {...rest}\n    />\n  );\n}\n","const missingRequiredFieldErrorMessage = 'This field is required.';\n\nexport default missingRequiredFieldErrorMessage;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  submitOrAltRow: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nexport default useStyles;\n","import { useState } from 'react';\nimport ValidatedTextField from '../../common/components/validated-text-field';\nimport validator from 'validator';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useStyles from './form.styles';\nimport { Button, TextFieldProps } from '@material-ui/core';\nimport routes from '../../router/constants/routes';\nimport { Link } from 'react-router-dom';\n\ninterface LoginFormProps {\n  variant?: TextFieldProps['variant'];\n  username: string;\n  password: string;\n  onChangeUsername: React.ChangeEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onChangePassword: React.ChangeEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onSubmit: () => void;\n}\n\nexport default function LoginForm({\n  variant = 'outlined',\n  username,\n  password,\n  onChangeUsername,\n  onChangePassword,\n  onSubmit,\n}: LoginFormProps) {\n  const classes = useStyles();\n\n  const [forceValidate, setForceValidate] = useState(false);\n\n  const validateRequired = (value: string) =>\n    validator.isEmpty(value) ? missingRequiredFieldErrorMessage : undefined;\n\n  return (\n    <form\n      className={classes.form}\n      noValidate\n      onSubmit={(e) => {\n        e.preventDefault();\n        setForceValidate(true);\n        if ([username, password].some(validateRequired)) {\n          return;\n        }\n\n        onSubmit();\n      }}\n    >\n      <ValidatedTextField\n        label=\"Username\"\n        value={username}\n        onChange={onChangeUsername}\n        onValidate={validateRequired}\n        forceValidate={forceValidate}\n        variant={variant}\n        required\n      />\n      <ValidatedTextField\n        label=\"Password\"\n        value={password}\n        onChange={onChangePassword}\n        onValidate={validateRequired}\n        forceValidate={forceValidate}\n        variant={variant}\n        type=\"password\"\n        required\n      />\n      <div className={classes.submitOrAltRow}>\n        <Button component={Link} to={routes.registration} color=\"primary\">\n          Create account\n        </Button>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Log in\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import { AxiosInstance } from 'axios';\nimport apiClient from '../../common/constants/api-client';\nimport localStorageService from '../../common/services/local-storage.service';\nimport { LogInResponse } from '../interfaces/log-in-response';\n\nexport class AuthService {\n  constructor(private http: AxiosInstance) {}\n\n  async logIn(username: string, password: string) {\n    const {\n      data: { accessToken, decodedAccessToken },\n    } = await this.http.post<LogInResponse>('/auth/access-tokens', {\n      username,\n      password,\n    });\n    localStorageService.setItem('accessToken', accessToken);\n    localStorageService.setItem(\n      'accessTokenPayload',\n      JSON.stringify(decodedAccessToken)\n    );\n    localStorageService.setItem(\n      'user',\n      JSON.stringify({ id: decodedAccessToken.sub, username })\n    );\n    return decodedAccessToken;\n  }\n\n  async logOut() {\n    localStorageService.removeItem('accessToken');\n    localStorageService.removeItem('accessTokenPayload');\n    localStorageService.removeItem('user');\n    // TODO: Revoke token from server\n  }\n\n  async verifyAccessToken(token: string): Promise<boolean> {\n    try {\n      await this.http.get(`/auth/access-tokens/${token}`);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  isAuthenticated(): boolean {\n    return localStorageService.getItem('accessToken') !== null;\n  }\n\n  getCurrentUser(): string | null {\n    const accessTokenPayload = localStorageService.getItem(\n      'accessTokenPayload'\n    );\n    if (!accessTokenPayload) {\n      return null;\n    }\n    return JSON.parse(accessTokenPayload).sub;\n  }\n}\n\nexport const authService = new AuthService(apiClient);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Container } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useContext, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport AppBarWithBackButton from '../../common/components/app-bar-with-back-button';\nimport routes from '../../router/constants/routes';\nimport useTextFieldValue from '../../common/hooks/use-text-field-value';\nimport LoginForm from '../components/login-form';\nimport { authService } from '../services/auth.service';\nimport useStyles from './login.page.styles';\nimport CredentialsContext from '../contexts/credentials.context';\n\nexport default function LoginPage() {\n  const credentials = useContext(CredentialsContext);\n  const classes = useStyles();\n  const [username, onChangeUsername] = useTextFieldValue('');\n  const [password, onChangePassword] = useTextFieldValue('');\n\n  const [serverError, setServerError] = useState('');\n\n  const { search } = useLocation();\n  const redirectURL =\n    new URLSearchParams(search).get('continue') ?? routes.dashboard;\n\n  if (credentials) {\n    return <Redirect to={redirectURL} />;\n  }\n\n  return (\n    <div>\n      <AppBarWithBackButton title=\"Basic Flashcards\" />\n      <Container className={classes.content}>\n        {serverError && <Alert severity=\"error\">{serverError}</Alert>}\n        <LoginForm\n          variant=\"outlined\"\n          username={username}\n          password={password}\n          onChangeUsername={onChangeUsername}\n          onChangePassword={onChangePassword}\n          onSubmit={() => {\n            authService.logIn(username, password).catch((e) => {\n              if (e.response) {\n                setServerError(e.response?.data?.message);\n              } else {\n                setServerError('An error has occurred.');\n              }\n            });\n          }}\n        />\n      </Container>\n    </div>\n  );\n}\n","import { Button, TextFieldProps } from '@material-ui/core';\nimport { useState } from 'react';\nimport ValidatedTextField from '../../common/components/validated-text-field';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useStyles from './form.styles';\nimport validator from 'validator';\nimport routes from '../../router/constants/routes';\nimport { Link } from 'react-router-dom';\n\ninterface RegistrationFormProps {\n  username: string;\n  password: string;\n  confirmPassword: string;\n  onChangeUsername: React.ChangeEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n\n  onChangePassword: React.ChangeEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onChangeConfirmPassword: React.ChangeEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  textFieldVariant?: TextFieldProps['variant'];\n  onSubmit: () => void;\n}\n\nexport default function RegistrationForm({\n  username,\n  password,\n  confirmPassword,\n  onChangeUsername,\n  onChangePassword,\n  onChangeConfirmPassword,\n  textFieldVariant = 'outlined',\n  onSubmit,\n}: RegistrationFormProps) {\n  const classes = useStyles();\n\n  const [forceValidate, setForceValidate] = useState(false);\n\n  const validateRequired = (value: string) =>\n    validator.isEmpty(value) ? missingRequiredFieldErrorMessage : undefined;\n\n  const validateConfirmPassword = (value: string) =>\n    value !== password ? 'Passwords do not match.' : undefined;\n\n  return (\n    <form\n      className={classes.form}\n      noValidate\n      onSubmit={(e) => {\n        e.preventDefault();\n        setForceValidate(true);\n        if (\n          [username, password].some(validateRequired) ||\n          validateConfirmPassword(confirmPassword)\n        ) {\n          return;\n        }\n        onSubmit();\n      }}\n    >\n      <ValidatedTextField\n        variant={textFieldVariant}\n        label=\"Username\"\n        forceValidate={forceValidate}\n        onValidate={validateRequired}\n        required\n        value={username}\n        onChange={onChangeUsername}\n      />\n      <ValidatedTextField\n        variant={textFieldVariant}\n        label=\"Password\"\n        type=\"password\"\n        required\n        value={password}\n        onChange={onChangePassword}\n        forceValidate={forceValidate}\n        onValidate={validateRequired}\n      />\n      <ValidatedTextField\n        variant={textFieldVariant}\n        label=\"Confirm password\"\n        type=\"password\"\n        required\n        value={confirmPassword}\n        onChange={onChangeConfirmPassword}\n        forceValidate={forceValidate}\n        onValidate={validateConfirmPassword}\n      />\n      <div className={classes.submitOrAltRow}>\n        <Button component={Link} to={routes.login} color=\"primary\">\n          Log in\n        </Button>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Register\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Container } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport AppBarWithBackButton from '../../common/components/app-bar-with-back-button';\nimport routes from '../../router/constants/routes';\nimport useTextFieldValue from '../../common/hooks/use-text-field-value';\nimport userService from '../../user/services/user.service';\nimport RegistrationForm from '../components/registration-form';\nimport useStyles from './registration.page.styles';\n\nexport default function RegistrationPage() {\n  const classes = useStyles();\n  const [username, onChangeUsername] = useTextFieldValue('');\n  const [password, onChangePassword] = useTextFieldValue('');\n  const [confirmPassword, onChangeConfirmPassword] = useTextFieldValue('');\n  const [serverError, setServerError] = useState('');\n  const history = useHistory();\n  return (\n    <div>\n      <AppBarWithBackButton title=\"Basic Flashcards\" />\n      <Container className={classes.content}>\n        {serverError && <Alert severity=\"error\">{serverError}</Alert>}\n        <RegistrationForm\n          username={username}\n          password={password}\n          confirmPassword={confirmPassword}\n          onChangeUsername={onChangeUsername}\n          onChangePassword={onChangePassword}\n          onChangeConfirmPassword={onChangeConfirmPassword}\n          onSubmit={() => {\n            userService\n              .create({ username, password })\n              .then(() => history.push(routes.login))\n              .catch((e) => {\n                if (e.response) {\n                  setServerError(e.response?.data?.message);\n                } else {\n                  setServerError('An error has occurred.');\n                }\n              });\n          }}\n        />\n      </Container>\n    </div>\n  );\n}\n","import { useMediaQuery, useTheme } from '@material-ui/core';\n\nexport default function useIsMobile() {\n  const theme = useTheme();\n  const match = useMediaQuery(theme.breakpoints.down('xs'), { noSsr: true });\n  return match;\n}\n","import { useRef } from 'react';\n\nlet uniqueIdNumber = 0;\n\nexport default function useUniqueId() {\n  const uniqueId = useRef(`unique-id-${uniqueIdNumber++}`);\n  return uniqueId.current;\n}\n","import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    whiteSpace: 'nowrap',\n  },\n  homeLink: {\n    textTransform: 'none',\n  },\n  titleContainer: {\n    flexGrow: 1,\n  },\n  avatarButton: {\n    padding: theme.spacing(0.5),\n  },\n  menuUsername: {\n    textAlign: 'center',\n    padding: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  searchBar: {\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    },\n    maxWidth: '600px',\n    width: '100%',\n  },\n  searchBarInput: {\n    paddingLeft: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n  },\n  toolbar: {\n    gap: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import {\n  AppBar as MuiAppBar,\n  Avatar,\n  Button,\n  Divider,\n  IconButton,\n  InputAdornment,\n  InputBase,\n  Menu,\n  MenuItem,\n  Paper,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { Close, Search } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useContext, useState } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport CredentialsContext from '../../auth/contexts/credentials.context';\nimport { authService } from '../../auth/services/auth.service';\nimport useIsMobile from '../../common/hooks/use-is-mobile';\nimport useTextFieldValue from '../../common/hooks/use-text-field-value';\nimport routes from '../../router/constants/routes';\nimport useStyles from './app-bar.styles';\n\ninterface AppBarProps {\n  searchBarOpen?: boolean;\n  searchBarValue?: string;\n  onChangeSearchBarValue?: (value: string) => void;\n  onCloseSearchBar?: () => void;\n  onSearch?: () => void;\n}\n\nexport default function AppBar({\n  searchBarOpen,\n  searchBarValue,\n  onChangeSearchBarValue,\n  onCloseSearchBar,\n  onSearch,\n}: AppBarProps) {\n  const classes = useStyles();\n\n  const location = useLocation();\n\n  const isMobile = useIsMobile();\n\n  const [menuAnchor, setMenuAnchor] = useState<null | HTMLElement>(null);\n\n  const credentials = useContext(CredentialsContext);\n\n  const closeMenu = () => setMenuAnchor(null);\n  const history = useHistory();\n\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [searchTerm, onSearchTermChange] = useTextFieldValue('');\n\n  const handleChangeSearchBarValue = onChangeSearchBarValue\n    ? (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) =>\n        onChangeSearchBarValue(e.target.value)\n    : onSearchTermChange;\n\n  const menu = (\n    <Menu\n      open={menuAnchor !== null}\n      anchorEl={menuAnchor}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      getContentAnchorEl={undefined}\n      onClose={closeMenu}\n    >\n      <Typography className={classes.menuUsername}>\n        {credentials?.username.toLocaleUpperCase()}\n      </Typography>\n      <Divider />\n      <MenuItem onClick={closeMenu}>Manage account</MenuItem>\n      <MenuItem\n        onClick={() => {\n          authService.logOut().then(() => history.push(routes.home));\n        }}\n      >\n        Sign out\n      </MenuItem>\n    </Menu>\n  );\n\n  const avatar = (\n    <Avatar>{credentials?.username.substring(0, 1).toLocaleUpperCase()}</Avatar>\n  );\n\n  const loginProfile = authService.isAuthenticated() ? (\n    <IconButton\n      className={classes.avatarButton}\n      color=\"inherit\"\n      onClick={(e) => setMenuAnchor(e.currentTarget)}\n    >\n      {avatar}\n    </IconButton>\n  ) : (\n    <Button\n      className={classes.button}\n      component={Link}\n      to={routes.login}\n      color=\"inherit\"\n    >\n      Log in\n    </Button>\n  );\n\n  const searchBar = (\n    <Paper className={classes.searchBar}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          onSearch\n            ? onSearch()\n            : history.push({\n                pathname: routes.deckSearch,\n                search: `?from=${encodeURIComponent(\n                  location.pathname\n                )}&term=${encodeURIComponent(searchBarValue ?? searchTerm)}`,\n              });\n        }}\n      >\n        <InputBase\n          value={searchBarValue ?? searchTerm}\n          autoFocus={isMobile}\n          fullWidth={isMobile}\n          placeholder=\"Search\"\n          className={classes.searchBarInput}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Search />\n            </InputAdornment>\n          }\n          endAdornment={\n            isMobile ? (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={onCloseSearchBar ?? (() => setShowSearchBar(false))}\n                >\n                  <Close />\n                </IconButton>\n              </InputAdornment>\n            ) : undefined\n          }\n          onChange={handleChangeSearchBarValue}\n        />\n      </form>\n    </Paper>\n  );\n\n  const mobileToolbar = (\n    <Toolbar className={classes.toolbar}>\n      {searchBarOpen ?? showSearchBar ? (\n        searchBar\n      ) : (\n        <>\n          <div className={classes.titleContainer}>\n            <Button\n              color=\"inherit\"\n              component={Link}\n              to={routes.home}\n              className={clsx(classes.button, classes.homeLink)}\n            >\n              <Typography variant=\"h6\">Basic Flashcards</Typography>\n            </Button>\n          </div>\n          <IconButton\n            aria-label=\"toggle search\"\n            color=\"inherit\"\n            onClick={() => setShowSearchBar(true)}\n          >\n            <Search />\n          </IconButton>\n          {loginProfile}\n        </>\n      )}\n    </Toolbar>\n  );\n\n  const standardToolbar = (\n    <Toolbar className={classes.toolbar}>\n      <div className={classes.titleContainer}>\n        <Button\n          color=\"inherit\"\n          component={Link}\n          to={routes.home}\n          className={clsx(classes.button, classes.homeLink)}\n        >\n          <Typography variant=\"h6\">Basic Flashcards</Typography>\n        </Button>\n      </div>\n      {searchBar}\n      {loginProfile}\n    </Toolbar>\n  );\n\n  return (\n    <MuiAppBar position=\"sticky\">\n      {menu}\n      {isMobile ? mobileToolbar : standardToolbar}\n    </MuiAppBar>\n  );\n}\n","import { Link as MuiLink, LinkProps as MuiLinkProps } from '@material-ui/core';\nimport { ReactNode } from 'react';\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\ninterface LinkProps {\n  to: RouterLinkProps['to'];\n  color?: MuiLinkProps['color'];\n  children?: ReactNode;\n}\n\nexport default function Link({ to, color, children }: LinkProps) {\n  return (\n    <MuiLink component={RouterLink} to={to} color={color}>\n      {children}\n    </MuiLink>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    cursor: 'pointer',\n    padding: theme.spacing(2),\n    '&:hover': {\n      backgroundColor: theme.palette.grey[50],\n    },\n  },\n  title: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n  buttonBox: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default useStyles;\n","import { Button, Paper, Typography } from '@material-ui/core';\nimport Link from '../../common/components/link';\nimport useStyles from './deck-info-tile.styles';\n\ninterface DeckInfoTileProps {\n  title: string;\n  deckId: string;\n  numberOfCards: number;\n  author?: string;\n  onClick?: () => void;\n  onDelete?: () => void;\n  onExport?: () => void;\n  onEdit?: () => void;\n}\n\nexport default function DeckInfoTile({\n  title,\n  deckId,\n  numberOfCards,\n  author,\n  onClick,\n  onDelete,\n  onExport,\n  onEdit,\n}: DeckInfoTileProps) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root} onClick={onClick}>\n      <Typography className={classes.title} variant=\"h5\">\n        {title}\n      </Typography>\n      <Typography>{`${numberOfCards} cards`}</Typography>\n      {author && (\n        <Typography\n          onClick={(e: React.MouseEvent<HTMLSpanElement, MouseEvent>) =>\n            e.stopPropagation()\n          }\n          component=\"span\"\n        >\n          By <Link to={`/users/${author}`}>{author}</Link>\n        </Typography>\n      )}\n      {(onDelete || onExport || onEdit) && (\n        <div className={classes.buttonBox}>\n          {onDelete && (\n            <Button\n              color=\"secondary\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onDelete();\n              }}\n            >\n              Delete\n            </Button>\n          )}\n          {onExport && (\n            <Button\n              onClick={(e) => {\n                e.stopPropagation();\n                onExport();\n              }}\n            >\n              Export\n            </Button>\n          )}\n          {onEdit && (\n            <Button\n              color=\"primary\"\n              onClick={(e: any) => {\n                e.stopPropagation();\n                onEdit();\n              }}\n            >\n              Edit\n            </Button>\n          )}\n        </div>\n      )}\n    </Paper>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  paginationContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  paginationControls: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  deckList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  sortAndSearchContainer: {\n    display: 'flex',\n    gap: theme.spacing(2),\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  buttonBox: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: theme.spacing(1),\n    marginLeft: 'auto',\n  },\n  uploadInput: {\n    display: 'none',\n  },\n  snackbar: {\n    [theme.breakpoints.down('xs')]: {\n      bottom: 90,\n    },\n  },\n}));\n\nexport default useStyles;\n","export function deckEdit(id: string) {\n  return `/decks/${id}/edit`;\n}\n\nexport function deckView(id: string) {\n  return `/decks/${id}`;\n}\n","import {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  DialogProps,\n} from '@material-ui/core';\n\ninterface DeleteDeckDialogProps {\n  deckTitle: string;\n  open: DialogProps['open'];\n  onBackDropClick?: DialogProps['onBackdropClick'];\n  onCancel: () => void;\n  onDelete: () => void;\n  onExited: DialogProps['onExited'];\n}\n\nexport default function DeleteDeckDialog({\n  deckTitle,\n  open,\n  onBackDropClick,\n  onCancel,\n  onDelete,\n  onExited,\n}: DeleteDeckDialogProps) {\n  return (\n    <Dialog open={open} onBackdropClick={onBackDropClick} onExited={onExited}>\n      <DialogTitle>Delete deck?</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure you want to delete deck \"{deckTitle}\"? This action cannot\n          be undone.\n        </DialogContentText>\n        <DialogActions>\n          <Button color=\"primary\" autoFocus onClick={onCancel}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={onDelete}>\n            Delete\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","export const autoHideDuration = 6000;\n","import {\n  Button,\n  Fab,\n  InputLabel,\n  MenuItem,\n  Select,\n  Snackbar,\n  TextField,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport { Add as AddIcon } from '@material-ui/icons';\nimport { Pagination } from '@material-ui/lab';\nimport { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport routes from '../../router/constants/routes';\nimport useDebouncedValue from '../../common/hooks/use-debounced-value';\nimport useIsMobile from '../../common/hooks/use-is-mobile';\nimport useUniqueId from '../../common/hooks/use-unique-id';\nimport Deck from '../../deck/interfaces/deck';\nimport { FindAllDecksParams } from '../../deck/interfaces/find-all-decks-params';\nimport { decksService } from '../../deck/services/decks.service';\nimport AppBar from '../components/app-bar';\nimport DeckInfoTile from '../components/deck-info-tile';\nimport useStyles from './dashboard.page.styles';\nimport { deckView } from '../../router/utils/route.utils';\nimport CredentialsContext from '../../auth/contexts/credentials.context';\nimport DeleteDeckDialog from '../components/delete-deck-dialog';\nimport { downloadBlob } from '../../common/utils/download.utils';\nimport { autoHideDuration } from '../../common/constants/snackbar';\n\ninterface DashboardPageProps {\n  pageSize?: number;\n}\n\nexport default function DashboardPage({ pageSize = 10 }: DashboardPageProps) {\n  const theme = useTheme();\n  const isMobile = useIsMobile();\n\n  const { id: userId } = useContext(CredentialsContext) ?? {};\n\n  if (!userId) {\n    throw new Error('Unexpected nullish value: userId');\n  }\n\n  const [loadedDecks, setLoadedDecks] = useState<Deck[]>([]);\n  const [totalDecks, setTotalDecks] = useState(0);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const classes = useStyles();\n  const id = useUniqueId();\n  const [search, setSearch] = useState('');\n  const searchValue = useDebouncedValue(\n    search,\n    theme.transitions.duration.short\n  );\n\n  const exportDeck = (deck: Deck) => {\n    const deckJSON = JSON.stringify(deck, undefined, 2);\n    downloadBlob(new Blob([deckJSON], { type: 'application/json' }));\n  };\n\n  const findDecks = (params: FindAllDecksParams) => {\n    setLoading(true);\n    decksService\n      .findAll({\n        ...params,\n      })\n      .then((res) => {\n        setLoadedDecks(res.decks);\n        setTotalDecks(res.count);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    findDecks({\n      authorId: [userId],\n      orderTitleBy: 'asc',\n      take: pageSize,\n      skip: (page - 1) * pageSize,\n      caseInsensitive: true,\n      titleContains: searchValue ? searchValue : undefined,\n    });\n  }, [page, pageSize, searchValue, userId]);\n\n  const [showDialog, setShowDialog] = useState(false);\n  const [deckToDelete, setDeckToDelete] = useState<Deck | null>(null);\n\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  return (\n    <div>\n      <DeleteDeckDialog\n        deckTitle={deckToDelete?.title ?? ''}\n        open={showDialog}\n        onBackDropClick={() => setShowDialog(false)}\n        onExited={() => setDeckToDelete(null)}\n        onCancel={() => setShowDialog(false)}\n        onDelete={() => {\n          decksService\n            .remove(deckToDelete?.id ?? '')\n            .then(() =>\n              findDecks({\n                authorId: [userId],\n                orderTitleBy: 'asc',\n                take: pageSize,\n                skip: (page - 1) * pageSize,\n                caseInsensitive: true,\n                titleContains: searchValue ? searchValue : undefined,\n              })\n            )\n            .finally(() => setShowDialog(false));\n        }}\n      />\n      <AppBar />\n      <div className={classes.content}>\n        <Typography variant=\"h2\">Your decks</Typography>\n\n        <div className={classes.sortAndSearchContainer}>\n          <div>\n            <InputLabel id={id}>Sort by</InputLabel>\n            <Select labelId={id} value=\"title\">\n              <MenuItem value=\"title\">Title</MenuItem>\n            </Select>\n          </div>\n          <TextField\n            label=\"Search\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n\n          <div className={classes.buttonBox}>\n            <label>\n              <Button color=\"primary\" component=\"span\">\n                Import\n              </Button>\n              <input\n                type=\"file\"\n                accept=\"application/json\"\n                hidden\n                onChange={(changeEvent) => {\n                  setLoading(true);\n                  const reader = new FileReader();\n                  const file = changeEvent.target.files?.[0];\n                  if (!file) {\n                    return;\n                  }\n                  reader.onload = (e) => {\n                    const { result } = e.target ?? {};\n                    if (!result) {\n                      return;\n                    }\n                    const deck: Deck = JSON.parse(result as string);\n                    decksService\n                      .create(deck)\n                      .then(() =>\n                        findDecks({\n                          authorId: [userId],\n                          orderTitleBy: 'asc',\n                          take: pageSize,\n                          skip: (page - 1) * pageSize,\n                          caseInsensitive: true,\n                          titleContains: searchValue ? searchValue : undefined,\n                        })\n                      )\n                      .then(() => {\n                        setSnackbarMessage('Deck successfully imported');\n                        setShowSnackbar(true);\n                      })\n                      .catch(() => {\n                        setSnackbarMessage('Failed to import deck.');\n                        setShowSnackbar(true);\n                      })\n                      .finally(() => {\n                        changeEvent.target.value = '';\n                        setLoading(false);\n                      });\n                  };\n                  reader.readAsText(file);\n                }}\n              />\n            </label>\n            {!isMobile && (\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                component={Link}\n                to={routes.deckAdd}\n              >\n                Create\n              </Button>\n            )}\n          </div>\n        </div>\n        <div className={classes.paginationContainer}>\n          <div className={classes.deckList}>\n            {loadedDecks.map((deck) => (\n              <DeckInfoTile\n                key={deck.id}\n                deckId={deck.id ?? ''}\n                title={deck.title}\n                numberOfCards={deck.cards.length}\n                onClick={() => history.push(deckView(deck.id ?? ''))}\n                onDelete={() => {\n                  setDeckToDelete(deck);\n                  setShowDialog(true);\n                }}\n                onExport={() => exportDeck(deck)}\n                onEdit={() => history.push(`${routes.decks}/${deck.id}/edit`)}\n              />\n            ))}\n          </div>\n          {/* Only show pagination controls if there is more than one page */}\n          {totalDecks / pageSize > 1 && (\n            <div className={classes.paginationControls}>\n              <Pagination\n                count={Math.ceil(totalDecks / pageSize)}\n                page={page}\n                onChange={(_e, value) => setPage(value)}\n                disabled={loading}\n              />\n            </div>\n          )}\n        </div>\n        {isMobile && (\n          <Fab\n            className={classes.fab}\n            color=\"primary\"\n            component={Link}\n            to={routes.deckAdd}\n          >\n            <AddIcon />\n          </Fab>\n        )}\n        <Snackbar\n          className={classes.snackbar}\n          open={showSnackbar}\n          message={snackbarMessage}\n          autoHideDuration={autoHideDuration}\n          onClose={() => setShowSnackbar(false)}\n        />\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\n\nexport default function useDebouncedValue<T>(value: T, timeout: number): T {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  const lastFired = useRef(Date.now());\n\n  useEffect(() => {\n    const handle = setTimeout(() => {\n      setDebouncedValue(value);\n      lastFired.current = Date.now();\n    }, timeout - (Date.now() - lastFired.current));\n    return () => clearTimeout(handle);\n  }, [value, timeout]);\n\n  return debouncedValue;\n}\n","export function downloadBlob(blob: Blob) {\n  const blobLink = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = blobLink;\n  a.download = '';\n  a.click();\n  window.URL.revokeObjectURL(blobLink);\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\nexport default useStyles;\n","import { CircularProgress } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ReactNode } from 'react';\nimport useStyles from './loadable-component.styles';\n\ninterface LoadableComponentProps {\n  loading?: boolean;\n  children: ReactNode;\n  className?: string;\n}\n\nexport default function LoadableComponent({\n  loading,\n  children,\n  className,\n}: LoadableComponentProps) {\n  const classes = useStyles();\n\n  return loading ? (\n    <div className={clsx(classes.root, className)}>\n      <CircularProgress />\n    </div>\n  ) : (\n    <>{children}</>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  topSection: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    gap: theme.spacing(2),\n  },\n  buttonBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  exampleDecksContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  exampleDecksSection: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Typography } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport Deck from '../../deck/interfaces/deck';\nimport { decksService } from '../../deck/services/decks.service';\nimport AppBar from '../components/app-bar';\nimport DeckInfoTile from '../components/deck-info-tile';\nimport useStyles from './home.page.styles';\nimport { deckView } from '../../router/utils/route.utils';\n\nexport default function HomePage() {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(true);\n\n  const [exampleDecks, setExampleDecks] = useState<Deck[]>([]);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    decksService\n      .findAll({ orderTitleBy: 'asc', take: 3 })\n      .then(({ decks }) => setExampleDecks(decks))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div>\n      <AppBar />\n      <main>\n        <div className={classes.topSection}>\n          <Typography variant=\"h1\">\n            Create, search for, and review decks.\n          </Typography>\n        </div>\n        <div className={classes.exampleDecksSection}>\n          <Typography variant=\"h2\">Example decks</Typography>\n          <LoadableComponent loading={loading}>\n            <div className={classes.exampleDecksContainer}>\n              {exampleDecks.map((deck) => (\n                <DeckInfoTile\n                  key={deck.id}\n                  deckId={deck.id ?? ''}\n                  title={deck.title}\n                  numberOfCards={deck.cards.length}\n                  author={deck.authorId ?? ''}\n                  onClick={() => history.push(deckView(deck.id ?? ''))}\n                />\n              ))}\n            </div>\n          </LoadableComponent>\n        </div>\n      </main>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldContainer: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: theme.spacing(2),\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    margin: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\nexport default useStyles;\n","import { Card, IconButton, TextField, Typography } from '@material-ui/core';\nimport { ArrowDownward, ArrowUpward, Delete } from '@material-ui/icons';\nimport { useState } from 'react';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useStyles from './edit-card-tile.styles';\n\ninterface EditCardTileProps {\n  cardNumber: number;\n  frontText: string;\n  backText: string;\n  forceValidate?: boolean;\n  onFrontTextChange: (value: string) => void;\n  onBackTextChange: (value: string) => void;\n  onDelete?: () => void;\n  onMoveUp?: () => void;\n  onMoveDown?: () => void;\n}\n\nexport default function EditCardTile({\n  cardNumber,\n  frontText,\n  backText,\n  forceValidate,\n  onFrontTextChange,\n  onBackTextChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n}: EditCardTileProps) {\n  const classes = useStyles();\n\n  const [validateFrontText, setValidateFrontText] = useState(false);\n  const frontTextValid = frontText.length > 0;\n  const frontTextError =\n    (forceValidate || validateFrontText) && !frontTextValid;\n\n  const [validateBackText, setValidateBackText] = useState(false);\n  const backTextValid = backText.length > 0;\n  const backTextError = (forceValidate || validateBackText) && !backTextValid;\n\n  return (\n    <Card>\n      <div className={classes.cardContent}>\n        <Typography variant=\"h5\">{`Card ${cardNumber}`}</Typography>\n        <div className={classes.textFieldContainer}>\n          <TextField\n            label=\"Term\"\n            required\n            variant=\"outlined\"\n            multiline\n            value={frontText}\n            error={frontTextError}\n            helperText={\n              frontTextError ? missingRequiredFieldErrorMessage : undefined\n            }\n            onChange={(e) => {\n              setValidateFrontText(true);\n              onFrontTextChange(e.target.value);\n            }}\n          />\n          <TextField\n            label=\"Definition\"\n            required\n            variant=\"outlined\"\n            multiline\n            value={backText}\n            error={backTextError}\n            helperText={\n              backTextError ? missingRequiredFieldErrorMessage : undefined\n            }\n            onChange={(e) => {\n              setValidateBackText(true);\n              onBackTextChange(e.target.value);\n            }}\n          />\n        </div>\n        <div className={classes.actionArea}>\n          <IconButton onClick={onDelete} disabled={!onDelete}>\n            <Delete />\n          </IconButton>\n          <IconButton onClick={onMoveUp} disabled={!onMoveUp}>\n            <ArrowUpward />\n          </IconButton>\n          <IconButton onClick={onMoveDown} disabled={!onMoveDown}>\n            <ArrowDownward />\n          </IconButton>\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  generalInfoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  cardList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  saveButtonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default useStyles;\n","import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useState } from 'react';\nimport Card from '../../card/interfaces/card';\nimport useUniqueId from '../../common/hooks/use-unique-id';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport EditCardTile from './edit-card-tile';\nimport useStyles from './edit-deck-form.styles';\n\ninterface EditDeckFormProps {\n  title: string;\n  description: string;\n  visibility: DeckVisibility;\n  cards: Card[];\n  onTitleChange: (value: string) => void;\n  onDescriptionChange: (value: string) => void;\n  onChangeVisibility: (value: DeckVisibility) => void;\n  onCardsChange: (value: Card[]) => void;\n  onSubmit: () => void;\n}\n\nexport default function EditDeckForm({\n  title,\n  description,\n  visibility,\n  cards,\n  onTitleChange,\n  onDescriptionChange,\n  onChangeVisibility,\n  onCardsChange,\n  onSubmit,\n}: EditDeckFormProps) {\n  const classes = useStyles();\n  const visibilityId = useUniqueId();\n\n  const [validateTitle, setValidateTitle] = useState(false);\n  const [forceValidate, setForceValidate] = useState(false);\n  const showTitleError = (forceValidate || validateTitle) && title.length === 0;\n\n  const changeCardSideText = (\n    cardIndex: number,\n    side: number,\n    value: string\n  ) => {\n    const newCards = [...cards];\n    const modifiedCard = { ...cards[cardIndex] };\n    modifiedCard.sides[side].text = value;\n    newCards[cardIndex] = modifiedCard;\n    onCardsChange(newCards);\n  };\n\n  const addCard = () => {\n    onCardsChange([...cards, { sides: [{ text: '' }, { text: '' }] }]);\n  };\n\n  const deleteCard = (index: number) => {\n    onCardsChange([...cards.slice(0, index), ...cards.slice(index + 1)]);\n  };\n\n  const moveCard = (currentIndex: number, targetIndex: number) => {\n    const newCards = [...cards];\n    newCards.splice(targetIndex, 0, newCards.splice(currentIndex, 1)[0]);\n    onCardsChange(newCards);\n  };\n\n  return (\n    <form\n      noValidate\n      className={classes.form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (\n          title.length === 0 ||\n          cards.some(({ sides }) =>\n            sides.some((side) => side.text.length === 0)\n          )\n        ) {\n          setForceValidate(true);\n          return;\n        }\n        onSubmit();\n      }}\n    >\n      <div className={classes.generalInfoContainer}>\n        <FormControl>\n          <TextField\n            required\n            variant=\"outlined\"\n            label=\"Title\"\n            fullWidth\n            error={showTitleError}\n            helperText={\n              showTitleError ? missingRequiredFieldErrorMessage : undefined\n            }\n            value={title}\n            onChange={(e) => {\n              setValidateTitle(true);\n              onTitleChange(e.target.value);\n            }}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            variant=\"outlined\"\n            label=\"Description\"\n            fullWidth\n            value={description}\n            onChange={(e) => onDescriptionChange(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <InputLabel id={visibilityId}>Visibility</InputLabel>\n          <Select\n            labelId={visibilityId}\n            variant=\"outlined\"\n            value={visibility}\n            onChange={(e) =>\n              onChangeVisibility(e.target.value as DeckVisibility)\n            }\n          >\n            <MenuItem value=\"PRIVATE\">Private</MenuItem>\n            <MenuItem value=\"PUBLIC\">Public</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n\n      <div className={classes.cardList}>\n        {cards.map(\n          ({ sides: [{ text: frontText }, { text: backText }] }, i) => (\n            <EditCardTile\n              key={i}\n              forceValidate={forceValidate}\n              cardNumber={i + 1}\n              frontText={frontText}\n              backText={backText}\n              onFrontTextChange={(value) => changeCardSideText(i, 0, value)}\n              onBackTextChange={(value) => changeCardSideText(i, 1, value)}\n              onDelete={cards.length > 1 ? () => deleteCard(i) : undefined}\n              onMoveUp={i !== 0 ? () => moveCard(i, i - 1) : undefined}\n              onMoveDown={\n                i !== cards.length - 1 ? () => moveCard(i, i + 1) : undefined\n              }\n            />\n          )\n        )}\n      </div>\n\n      <Button\n        variant=\"outlined\"\n        fullWidth\n        startIcon={<Add />}\n        onClick={addCard}\n      >\n        Add card\n      </Button>\n      <div className={classes.saveButtonContainer}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.appBar + 1,\n  },\n}));\n\nexport default useStyles;\n","import {\n  Backdrop,\n  CircularProgress,\n  Container,\n  Snackbar,\n} from '@material-ui/core';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Card from '../../card/interfaces/card';\nimport AppBarWithBackButton from '../../common/components/app-bar-with-back-button';\nimport { autoHideDuration } from '../../common/constants/snackbar';\nimport EditDeckForm from '../components/edit-deck-form';\nimport { decksService } from '../services/decks.service';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport useStyles from './add-deck.page.styles';\n\nexport default function AddDeckPage() {\n  const classes = useStyles();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [visibility, setVisibility] = useState<DeckVisibility>('PRIVATE');\n  const [cards, setCards] = useState<Card[]>([\n    { sides: [{ text: '' }, { text: '' }] },\n  ]);\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n\n  const [showSnackbar, setShowsSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  return (\n    <>\n      <Backdrop open={submitting} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <AppBarWithBackButton title=\"Add deck\" />\n      <Container>\n        <EditDeckForm\n          title={title}\n          description={description}\n          visibility={visibility}\n          cards={cards}\n          onTitleChange={setTitle}\n          onDescriptionChange={setDescription}\n          onChangeVisibility={setVisibility}\n          onCardsChange={setCards}\n          onSubmit={() => {\n            setSubmitting(true);\n            decksService\n              .create({ title, description, visibility, cards, tags: [] })\n              .then(() => history.goBack())\n              .catch(() => {\n                setSnackbarMessage('Failed to save deck.');\n                setShowsSnackbar(true);\n                setSubmitting(false);\n              });\n          }}\n        />\n      </Container>\n      <Snackbar\n        open={showSnackbar}\n        message={snackbarMessage}\n        autoHideDuration={autoHideDuration}\n        onClose={() => setShowsSnackbar(false)}\n      />\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '2fr auto 3fr',\n    columnGap: theme.spacing(2),\n    gap: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Divider, Typography } from '@material-ui/core';\nimport React from 'react';\nimport Card from '../../card/interfaces/card';\nimport useStyles from './card-list.styles';\n\ninterface CardListProps {\n  cards: Card[];\n}\n\nexport default function CardList({ cards }: CardListProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {cards.map((card) => (\n        <React.Fragment key={card.id ?? JSON.stringify(card)}>\n          <Typography>{card.sides[0].text}</Typography>\n          <Divider orientation=\"vertical\" />\n          <Typography>{card.sides[1].text}</Typography>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: theme.spacing(3),\n  },\n  typography: {\n    fontSize: theme.typography.h5.fontSize,\n  },\n}));\n\nexport default useStyles;\n","import { Card as MuiCard, CardContent, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './card-side.styles';\n\ninterface CardSideProps {\n  text: string;\n  className?: string;\n}\n\nexport default function CardSide({ text, className }: CardSideProps) {\n  const classes = useStyles();\n  return (\n    <MuiCard className={clsx(classes.root, className)}>\n      <CardContent className={classes.content}>\n        <Typography className={classes.typography}>{text}</Typography>\n      </CardContent>\n    </MuiCard>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    gridTemplateAreas: '\"main\"',\n    transformStyle: 'preserve-3d',\n  },\n  cardFlipTransition: {\n    transition: 'transform 0.3s',\n  },\n  flip: {\n    transform: 'rotateX(180deg)',\n  },\n  cardSide: {\n    gridArea: 'main',\n    backfaceVisibility: 'hidden',\n  },\n  cardBack: {\n    transform: 'rotateX(180deg)',\n  },\n});\n\nexport default useStyles;\n","import clsx from 'clsx';\nimport CardSide from './card-side';\nimport useStyles from './card.styles';\n\ninterface CardProps {\n  frontText: string;\n  backText: string;\n  showBack: boolean;\n  className?: string;\n  onFlip: () => void;\n}\n\nexport default function Card({\n  frontText,\n  backText,\n  showBack,\n  className,\n  onFlip,\n}: CardProps) {\n  const classes = useStyles();\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        classes.cardFlipTransition,\n        showBack && classes.flip,\n        className\n      )}\n      onClick={onFlip}\n    >\n      <CardSide className={classes.cardSide} text={frontText} />\n      <CardSide\n        className={clsx(classes.cardSide, classes.cardBack)}\n        text={backText}\n      />\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  card: {\n    height: '100%',\n    width: '100%',\n  },\n  hiddenCard: {\n    display: 'none',\n  },\n});\n\nexport default useStyles;\n","import { useLayoutEffect, useState } from 'react';\nimport CardComponent from '../../card/components/card';\nimport Card from '../../card/interfaces/card';\nimport useStyles from './deck-stack.styles';\n\ninterface DeckStackProps {\n  cards: Card[];\n  activeIndex: number;\n  showCardBack: boolean;\n  className?: string;\n  onFlipCard: () => void;\n}\n\nexport default function DeckStack({\n  cards,\n  activeIndex,\n  showCardBack,\n  className,\n  onFlipCard,\n}: DeckStackProps) {\n  const activeCard = cards[activeIndex];\n  const classes = useStyles();\n\n  // Unmount the Card component each time the active card changes\n  const [unmount, setUnmount] = useState(false);\n\n  useLayoutEffect(() => {\n    setUnmount(true);\n  }, [activeIndex]);\n\n  useLayoutEffect(() => {\n    if (unmount) {\n      setUnmount(false);\n    }\n  }, [unmount]);\n\n  if (!activeCard) {\n    return (\n      <div className={className}>\n        {!unmount && (\n          <CardComponent\n            className={classes.card}\n            frontText=\"\"\n            backText=\"\"\n            showBack={false}\n            onFlip={() => {}}\n          />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      {!unmount && (\n        <CardComponent\n          className={classes.card}\n          frontText={activeCard.sides[0].text}\n          backText={activeCard.sides[1].text}\n          showBack={showCardBack}\n          onFlip={onFlipCard}\n        />\n      )}\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  positionIndicator: {\n    width: '10ch',\n  },\n});\n\nexport default useStyles;\n","import { IconButton, Typography } from '@material-ui/core';\nimport { ArrowBack, ArrowForward } from '@material-ui/icons';\nimport useStyles from './deck-stack-controls.styles';\n\ninterface DeckStackControlsProps {\n  currentIndex: number;\n  numberOfCards: number;\n  onBack: () => void;\n  onForward: () => void;\n}\n\nexport default function DeckStackControls({\n  currentIndex,\n  numberOfCards,\n  onBack,\n  onForward,\n}: DeckStackControlsProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={onBack}\n        disabled={currentIndex === 0 || numberOfCards === 0}\n      >\n        <ArrowBack />\n      </IconButton>\n      <div>\n        <Typography\n          variant=\"subtitle2\"\n          align=\"center\"\n          className={classes.positionIndicator}\n        >{`${\n          numberOfCards > 0 ? currentIndex + 1 : 0\n        }/${numberOfCards}`}</Typography>\n      </div>\n\n      <IconButton\n        onClick={onForward}\n        disabled={currentIndex === numberOfCards - 1 || numberOfCards === 0}\n      >\n        <ArrowForward />\n      </IconButton>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  deckStack: {\n    height: 280,\n    width: '100%',\n    maxWidth: 397,\n  },\n  deckStackContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  section: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  progressBar: {\n    width: '100%',\n    maxWidth: 400,\n  },\n  tagList: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(0.5),\n  },\n}));\n\nexport default useStyles;\n","import { Chip, Slider, Typography } from '@material-ui/core';\nimport { useEffect, useLayoutEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Link from '../../common/components/link';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport AppBar from '../../dashboard/components/app-bar';\nimport CardList from '../components/card-list';\nimport DeckStack from '../components/deck-stack';\nimport DeckStackControls from '../components/deck-stack-controls';\nimport Deck from '../interfaces/deck';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './deck.page.styles';\n\nexport default function DeckPage() {\n  const classes = useStyles();\n  const [activeCardIndex, setActiveCardIndex] = useState(0);\n  const [showCardBack, setShowCardBack] = useState(false);\n  const { id: deckId } = useParams<{ id: string }>();\n  const [loading, setLoading] = useState(true);\n\n  const [deck, setDeck] = useState<Deck | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    decksService\n      .findOne(deckId)\n      .then((deck) => setDeck(deck))\n      .finally(() => setLoading(false));\n  }, [deckId]);\n\n  // Make sure the front of the card is showing when moving to another\n  useLayoutEffect(() => {\n    setShowCardBack(false);\n  }, [activeCardIndex]);\n\n  // Alphabetize deck tags\n  const sortedTags = useMemo(() => (deck?.tags ? [...deck.tags].sort() : []), [\n    deck?.tags,\n  ]);\n\n  return (\n    <div>\n      <AppBar />\n      <div className={classes.root}>\n        {/* Deck */}\n        <LoadableComponent loading={loading}>\n          {deck && (\n            <>\n              <section className={classes.section}>\n                <div>\n                  <Typography variant=\"h4\">{deck.title}</Typography>\n                  <Typography variant=\"subtitle1\">\n                    by{' '}\n                    <Link to={`/users/${deck.authorId}`} color=\"inherit\">\n                      {deck.authorId}\n                    </Link>\n                  </Typography>\n                </div>\n                <div className={classes.deckStackContainer}>\n                  <DeckStack\n                    className={classes.deckStack}\n                    cards={deck.cards}\n                    activeIndex={activeCardIndex}\n                    showCardBack={showCardBack}\n                    onFlipCard={() => setShowCardBack((state) => !state)}\n                  />\n                  <DeckStackControls\n                    currentIndex={activeCardIndex}\n                    numberOfCards={deck.cards.length}\n                    onBack={() => {\n                      setActiveCardIndex((state) => state - 1);\n                    }}\n                    onForward={() => {\n                      setActiveCardIndex((state) => state + 1);\n                    }}\n                  />\n                  <Slider\n                    className={classes.progressBar}\n                    value={activeCardIndex}\n                    max={deck.cards.length - 1}\n                    valueLabelFormat={(value) => value + 1}\n                    onChange={(_event, value) =>\n                      setActiveCardIndex(value as number)\n                    }\n                  />\n                </div>\n              </section>\n              {/* Tag list */}\n              <section className={classes.section}>\n                <Typography variant=\"h5\">Tags</Typography>\n                <div className={classes.tagList}>\n                  {sortedTags.map((tag) => (\n                    <Chip key={tag} label={tag} variant=\"outlined\" />\n                  ))}\n                </div>\n              </section>\n              {/* Term list */}\n              <section className={classes.section}>\n                <Typography variant=\"h5\">Terms</Typography>\n                <CardList cards={deck.cards} />\n              </section>\n            </>\n          )}\n        </LoadableComponent>\n      </div>\n    </div>\n  );\n}\n","import { Redirect, RouteProps } from 'react-router';\nimport { Route } from 'react-router-dom';\nimport { authService } from '../../auth/services/auth.service';\nimport routes from '../constants/routes';\n\ninterface ProtectedRouteProps extends RouteProps {\n  path: string;\n}\n\nexport default function ProtectedRoute(props: ProtectedRouteProps) {\n  return authService.isAuthenticated() ? (\n    <Route {...props} />\n  ) : (\n    <Redirect\n      to={{\n        pathname: routes.login,\n        search: `?continue=${encodeURIComponent(props.path)}`,\n      }}\n    />\n  );\n}\n","import {\n  Backdrop,\n  CircularProgress,\n  Container,\n  Snackbar,\n} from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport AppBarWithBackButton from '../../common/components/app-bar-with-back-button';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport { autoHideDuration } from '../../common/constants/snackbar';\nimport EditDeckForm from '../components/edit-deck-form';\nimport Deck from '../interfaces/deck';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './add-deck.page.styles';\n\nexport default function EditDeckPage() {\n  const classes = useStyles();\n  const { id: deckId } = useParams<{ id: string }>();\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n\n  const [deck, setDeck] = useState<Deck | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const [showSnackbar, setShowsSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    decksService\n      .findOne(deckId)\n      .then((deck) => setDeck(deck))\n      .finally(() => setLoading(false));\n  }, [deckId]);\n\n  return (\n    <>\n      <Backdrop open={submitting} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <AppBarWithBackButton title=\"Edit deck\" />\n      <LoadableComponent loading={loading}>\n        {deck && (\n          <Container>\n            <EditDeckForm\n              title={deck.title}\n              description={deck.description}\n              visibility={deck.visibility}\n              cards={deck.cards}\n              onTitleChange={(title) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, title };\n                })\n              }\n              onDescriptionChange={(description) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, description };\n                })\n              }\n              onChangeVisibility={(visibility) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, visibility };\n                })\n              }\n              onCardsChange={(cards) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, cards };\n                })\n              }\n              onSubmit={() => {\n                setSubmitting(true);\n                decksService\n                  .update({\n                    id: deck.id,\n                    title: deck.title,\n                    description: deck.description,\n                    visibility: deck.visibility,\n                    cards: deck.cards,\n                    tags: [],\n                  })\n                  .then(() => history.goBack())\n                  .catch(() => {\n                    setSnackbarMessage('Failed to update deck.');\n                    setShowsSnackbar(true);\n                    setSubmitting(false);\n                  });\n              }}\n            />\n          </Container>\n        )}\n      </LoadableComponent>\n      <Snackbar\n        open={showSnackbar}\n        message={snackbarMessage}\n        autoHideDuration={autoHideDuration}\n        onClose={() => setShowsSnackbar(false)}\n      />\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(3),\n  },\n  paginationContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  paginationControls: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  results: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","/**\n * Returns the result of constraining an inclusive range.\n *\n * @param min - The minimum value the result can be\n * @param max - The maximum value the result can be\n * @param value - The value to constrain\n * @returns The value of `value` if `min <= value <= max`, `min` if `value < min`, and `max` if `value > max`\n */\nexport function clamp(min: number, max: number, value: number): number {\n  return Math.max(min, Math.min(max, value));\n}\n","import { Pagination } from '@material-ui/lab';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport AppBar from '../../dashboard/components/app-bar';\nimport DeckInfoTile from '../../dashboard/components/deck-info-tile';\nimport routes from '../../router/constants/routes';\nimport { deckView } from '../../router/utils/route.utils';\nimport Deck from '../interfaces/deck';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './deck-search.page.styles';\nimport * as MathUtils from '../../common/utils/math.utils';\nimport useIsMobile from '../../common/hooks/use-is-mobile';\n\nexport default function DeckSearchPage() {\n  const classes = useStyles();\n\n  const isMobile = useIsMobile();\n\n  const [deckSlice, setDeckSlice] = useState<Deck[]>([]);\n  const [totalDecks, setTotalDecks] = useState(0);\n\n  const { search } = useLocation();\n  const qs = new URLSearchParams(search);\n\n  const term = qs.get('term') ?? '';\n\n  const pageSizeString = qs.get('pageSize');\n  const pageSize = MathUtils.clamp(\n    1,\n    50,\n    pageSizeString ? +pageSizeString : 10\n  );\n\n  const numberOfPages = Math.max(1, Math.ceil(totalDecks / pageSize));\n\n  const pageString = qs.get('page');\n  const page = MathUtils.clamp(1, numberOfPages, pageString ? +pageString : 1);\n\n  const from = qs.get('from');\n\n  const previousLocation = useRef(from ?? routes.home);\n\n  const [loading, setLoading] = useState(true);\n\n  const history = useHistory();\n\n  // Remove the from search param\n  useEffect(() => {\n    if (from) {\n      qs.delete('from');\n      history.replace({ search: qs.toString() });\n    }\n  });\n\n  const [searchBarValue, setSearchBarValue] = useState(term);\n\n  useEffect(() => {\n    // Do not send a request if the from param is being removed\n    if (from) {\n      return;\n    }\n    if (!term) {\n      setLoading(false);\n      setDeckSlice([]);\n      return;\n    }\n    decksService\n      .findAll({\n        titleContains: term,\n        caseInsensitive: true,\n        take: pageSize,\n        skip: (page - 1) * pageSize,\n      })\n      .then(({ decks, count }) => {\n        setDeckSlice(decks);\n        setTotalDecks(count);\n      })\n      .finally(() => setLoading(false));\n  }, [from, page, pageSize, term]);\n\n  return (\n    <div>\n      <AppBar\n        searchBarOpen\n        searchBarValue={searchBarValue}\n        onChangeSearchBarValue={setSearchBarValue}\n        onCloseSearchBar={\n          isMobile ? () => history.push(previousLocation.current) : undefined\n        }\n        onSearch={() =>\n          history.push({\n            pathname: routes.deckSearch,\n            search: `?term=${encodeURIComponent(searchBarValue)}`,\n          })\n        }\n      />\n      <div className={classes.content}>\n        <LoadableComponent loading={loading}>\n          <div className={classes.paginationContainer}>\n            <div className={classes.results}>\n              {deckSlice.map((deck) => (\n                <DeckInfoTile\n                  key={deck.id}\n                  deckId={deck.id ?? ''}\n                  title={deck.title}\n                  numberOfCards={deck.cards.length}\n                  author={deck.authorId ?? ''}\n                  onClick={() => history.push(deckView(deck.id ?? ''))}\n                />\n              ))}\n            </div>\n            {totalDecks / pageSize > 1 && (\n              <div className={classes.paginationControls}>\n                <Pagination\n                  count={numberOfPages}\n                  page={page}\n                  onChange={(_e, value) =>\n                    history.push({\n                      pathname: routes.deckSearch,\n                      search: `?term=${encodeURIComponent(\n                        term\n                      )}&page=${encodeURIComponent(\n                        value\n                      )}&pageSize=${encodeURIComponent(pageSize)}`,\n                    })\n                  }\n                  disabled={loading}\n                />\n              </div>\n            )}\n          </div>\n        </LoadableComponent>\n      </div>\n    </div>\n  );\n}\n","import { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport LoginPage from '../../auth/pages/login.page';\nimport RegistrationPage from '../../auth/pages/registration.page';\nimport routes from '../constants/routes';\nimport DashboardPage from '../../dashboard/pages/dashboard.page';\nimport HomePage from '../../dashboard/pages/home.page';\nimport AddDeckPage from '../../deck/pages/add-deck.page';\nimport DeckPage from '../../deck/pages/deck.page';\nimport ProtectedRoute from './protected-route';\nimport { useContext } from 'react';\nimport CredentialsContext from '../../auth/contexts/credentials.context';\nimport EditDeckPage from '../../deck/pages/edit-deck.page';\nimport DeckSearchPage from '../../deck/pages/deck-search.page';\n\nexport default function Router() {\n  const credentials = useContext(CredentialsContext);\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path={routes.home}>\n          {credentials ? <Redirect to={routes.dashboard} /> : <HomePage />}\n        </Route>\n        <ProtectedRoute path={routes.dashboard}>\n          <DashboardPage />\n        </ProtectedRoute>\n        <Route exact path={routes.deckView}>\n          <DeckPage />\n        </Route>\n        <ProtectedRoute path={routes.deckAdd}>\n          <AddDeckPage />\n        </ProtectedRoute>\n        <ProtectedRoute path={routes.deckEdit}>\n          <EditDeckPage />\n        </ProtectedRoute>\n        <Route path={routes.deckSearch}>\n          <DeckSearchPage />\n        </Route>\n        <Route path={routes.registration}>\n          <RegistrationPage />\n        </Route>\n        <Route path={routes.login}>\n          <LoginPage />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n","import { CssBaseline } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport CredentialsContext from './auth/contexts/credentials.context';\nimport Credentials from './auth/interfaces/credentials';\nimport { retrieve } from './auth/utils/credentials.utils';\nimport Router from './router/components/router';\n\nexport default function App() {\n  const [credentials, setCredentials] = useState<Credentials | null>(retrieve);\n\n  useEffect(() => {\n    const syncCredentials = () => {\n      setCredentials(retrieve);\n    };\n    document.addEventListener('localStorageServiceChange', syncCredentials);\n    return () =>\n      document.removeEventListener(\n        'localStorageServiceChange',\n        syncCredentials\n      );\n  }, []);\n\n  return (\n    <>\n      <CredentialsContext.Provider value={credentials}>\n        <CssBaseline />\n        <Router />\n      </CredentialsContext.Provider>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}