{"version":3,"sources":["common/hooks/use-unique-id.tsx","common/components/text-field.tsx","deck/services/decks.service.ts","common/components/loadable-component.styles.tsx","common/components/loadable-component.tsx","common/constants/snackbar.ts","common/components/link.tsx","router/utils/route.utils.ts","dashboard/components/deck-info-tile.styles.tsx","dashboard/components/deck-info-tile.tsx","dashboard/pages/dashboard.page.styles.tsx","dashboard/components/delete-deck-dialog.tsx","dashboard/pages/dashboard.page.tsx","common/hooks/use-debounced-value.tsx","common/utils/download.utils.ts"],"names":["uniqueIdNumber","useUniqueId","useRef","current","TextField","props","id","decksService","http","a","title","description","visibility","cards","this","post","authorId","authService","getCurrentUser","map","sides","frontText","text","backText","data","get","findOneDeckResponseToDeck","params","decks","count","put","cardId","delete","apiClient","card","tags","useStyles","makeStyles","root","display","justifyContent","LoadableComponent","loading","children","className","delay","classes","useState","showProgress","setShowProgress","useEffect","timeout","setTimeout","clearTimeout","clsx","CircularProgress","autoHideDuration","Link","to","color","component","RouterLink","deckView","theme","cursor","padding","spacing","backgroundColor","palette","action","hover","textOverflow","overflow","whiteSpace","buttonBox","deleteButton","error","main","DeckInfoTile","numberOfCards","deckId","author","onClick","onDelete","onExport","onEdit","Paper","Typography","variant","e","stopPropagation","Button","content","flexDirection","gap","paginationContainer","paginationControls","deckList","sortAndSearchContainer","fab","position","bottom","right","alignItems","marginLeft","uploadInput","snackbar","breakpoints","down","DeleteDeckDialog","deckTitle","open","onBackDropClick","onCancel","onExited","Dialog","onBackdropClick","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","DashboardPage","pageSize","useTheme","isMobile","useIsMobile","userId","useContext","CredentialsContext","Error","initialLoad","setInitialLoad","loadedDecks","setLoadedDecks","totalDecks","setTotalDecks","page","setPage","setLoading","history","useHistory","search","setSearch","searchValue","value","debouncedValue","setDebouncedValue","lastFired","Date","now","handle","useDebouncedValue","transitions","duration","short","exportDeck","deck","deckJSON","JSON","stringify","undefined","blob","blobLink","window","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","downloadBlob","Blob","type","findDecks","findAll","then","res","finally","orderTitleBy","take","skip","caseInsensitive","titleContains","showDialog","setShowDialog","deckToDelete","setDeckToDelete","showSnackbar","setShowSnackbar","snackbarMessage","setSnackbarMessage","remove","label","select","MenuItem","onChange","target","accept","hidden","changeEvent","reader","FileReader","file","files","onload","result","parse","create","catch","readAsText","routes","deckAdd","length","push","Pagination","Math","ceil","_e","disabled","Fab","aria-label","Add","Snackbar","message","onClose"],"mappings":"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","file":"static/js/8.5f0ad756.chunk.js","sourcesContent":["import { useRef } from 'react';\n\nlet uniqueIdNumber = 0;\n\nexport default function useUniqueId() {\n  const uniqueId = useRef(`unique-id-${uniqueIdNumber++}`);\n  return uniqueId.current;\n}\n","import {\n  TextField as MuiTextField,\n  TextFieldProps as MuiTextFieldProps,\n} from '@material-ui/core';\nimport useUniqueId from '../hooks/use-unique-id';\n\nexport interface TextFieldProps extends Omit<MuiTextFieldProps, 'label'> {\n  label?: string;\n}\n\nexport default function TextField(props: TextFieldProps) {\n  const id = useUniqueId();\n  return <MuiTextField id={id} {...props} />;\n}\n","import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\nexport default useStyles;\n","import { CircularProgress } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ReactNode, useEffect, useState } from 'react';\nimport useStyles from './loadable-component.styles';\n\ninterface LoadableComponentProps {\n  loading?: boolean;\n  children: ReactNode;\n  className?: string;\n  delay?: number;\n}\n\nexport default function LoadableComponent({\n  loading,\n  children,\n  className,\n  delay = 300,\n}: LoadableComponentProps) {\n  const classes = useStyles();\n\n  const [showProgress, setShowProgress] = useState(delay <= 0);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowProgress(true);\n    }, delay);\n    return () => clearTimeout(timeout);\n  }, [delay]);\n\n  return loading ? (\n    <div className={clsx(classes.root, className)}>\n      {showProgress && <CircularProgress />}\n    </div>\n  ) : (\n    <>{children}</>\n  );\n}\n","export const autoHideDuration = 6000;\n","import { Link as MuiLink, LinkProps as MuiLinkProps } from '@material-ui/core';\nimport { ReactNode } from 'react';\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\ninterface LinkProps {\n  to: RouterLinkProps['to'];\n  color?: MuiLinkProps['color'];\n  children?: ReactNode;\n}\n\nexport default function Link({ to, color, children }: LinkProps) {\n  return (\n    <MuiLink component={RouterLink} to={to} color={color}>\n      {children}\n    </MuiLink>\n  );\n}\n","export function deckEdit(id: string) {\n  return `/decks/${id}/edit`;\n}\n\nexport function deckView(id: string) {\n  return `/decks/${id}`;\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    cursor: 'pointer',\n    padding: theme.spacing(2),\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  title: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n  buttonBox: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  deleteButton: {\n    color: theme.palette.error.main,\n  },\n}));\n\nexport default useStyles;\n","import { Button, Paper, Typography } from '@material-ui/core';\nimport Link from '../../common/components/link';\nimport useStyles from './deck-info-tile.styles';\n\ninterface DeckInfoTileProps {\n  title: string;\n  deckId: string;\n  numberOfCards: number;\n  author?: string;\n  onClick?: () => void;\n  onDelete?: () => void;\n  onExport?: () => void;\n  onEdit?: () => void;\n}\n\nexport default function DeckInfoTile({\n  title,\n  deckId,\n  numberOfCards,\n  author,\n  onClick,\n  onDelete,\n  onExport,\n  onEdit,\n}: DeckInfoTileProps) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root} onClick={onClick}>\n      <Typography className={classes.title} variant=\"h5\" component=\"div\">\n        {title}\n      </Typography>\n      <Typography>{`${numberOfCards} cards`}</Typography>\n      {author && (\n        <Typography\n          onClick={(e: React.MouseEvent<HTMLSpanElement, MouseEvent>) =>\n            e.stopPropagation()\n          }\n          component=\"span\"\n        >\n          By <Link to={`/users/${author}`}>{author}</Link>\n        </Typography>\n      )}\n      {(onDelete || onExport || onEdit) && (\n        <div className={classes.buttonBox}>\n          {onDelete && (\n            <Button\n              className={classes.deleteButton}\n              onClick={(e) => {\n                e.stopPropagation();\n                onDelete();\n              }}\n            >\n              Delete\n            </Button>\n          )}\n          {onExport && (\n            <Button\n              onClick={(e) => {\n                e.stopPropagation();\n                onExport();\n              }}\n            >\n              Export\n            </Button>\n          )}\n          {onEdit && (\n            <Button\n              color=\"primary\"\n              onClick={(e: any) => {\n                e.stopPropagation();\n                onEdit();\n              }}\n            >\n              Edit\n            </Button>\n          )}\n        </div>\n      )}\n    </Paper>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  paginationContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  paginationControls: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  deckList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  sortAndSearchContainer: {\n    display: 'flex',\n    gap: theme.spacing(2),\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  buttonBox: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: theme.spacing(1),\n    marginLeft: 'auto',\n  },\n  uploadInput: {\n    display: 'none',\n  },\n  snackbar: {\n    [theme.breakpoints.down('xs')]: {\n      bottom: 90,\n    },\n  },\n}));\n\nexport default useStyles;\n","import {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  DialogProps,\n} from '@material-ui/core';\n\ninterface DeleteDeckDialogProps {\n  deckTitle: string;\n  open: DialogProps['open'];\n  onBackDropClick?: DialogProps['onBackdropClick'];\n  onCancel: () => void;\n  onDelete: () => void;\n  onExited: DialogProps['onExited'];\n}\n\nexport default function DeleteDeckDialog({\n  deckTitle,\n  open,\n  onBackDropClick,\n  onCancel,\n  onDelete,\n  onExited,\n}: DeleteDeckDialogProps) {\n  return (\n    <Dialog open={open} onBackdropClick={onBackDropClick} onExited={onExited}>\n      <DialogTitle>Delete deck?</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure you want to delete deck \"{deckTitle}\"? This action cannot\n          be undone.\n        </DialogContentText>\n        <DialogActions>\n          <Button color=\"primary\" autoFocus onClick={onCancel}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={onDelete}>\n            Delete\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import {\n  Button,\n  Fab,\n  MenuItem,\n  Snackbar,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport { Add as AddIcon } from '@material-ui/icons';\nimport { Pagination } from '@material-ui/lab';\nimport { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport routes from '../../router/constants/routes';\nimport useDebouncedValue from '../../common/hooks/use-debounced-value';\nimport useIsMobile from '../../common/hooks/use-is-mobile';\nimport Deck from '../../deck/interfaces/deck';\nimport { FindAllDecksParams } from '../../deck/interfaces/find-all-decks-params';\nimport { decksService } from '../../deck/services/decks.service';\nimport DeckInfoTile from '../components/deck-info-tile';\nimport useStyles from './dashboard.page.styles';\nimport { deckView } from '../../router/utils/route.utils';\nimport CredentialsContext from '../../auth/contexts/credentials.context';\nimport DeleteDeckDialog from '../components/delete-deck-dialog';\nimport { downloadBlob } from '../../common/utils/download.utils';\nimport { autoHideDuration } from '../../common/constants/snackbar';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport TextField from '../../common/components/text-field';\n\ninterface DashboardPageProps {\n  pageSize?: number;\n}\n\nexport default function DashboardPage({ pageSize = 10 }: DashboardPageProps) {\n  const theme = useTheme();\n  const isMobile = useIsMobile();\n\n  const { id: userId } = useContext(CredentialsContext) ?? {};\n\n  if (!userId) {\n    throw new Error('Unexpected nullish value: userId');\n  }\n\n  const [initialLoad, setInitialLoad] = useState(true);\n\n  const [loadedDecks, setLoadedDecks] = useState<Deck[]>([]);\n  const [totalDecks, setTotalDecks] = useState(0);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const classes = useStyles();\n  const [search, setSearch] = useState('');\n  const searchValue = useDebouncedValue(\n    search,\n    theme.transitions.duration.short\n  );\n\n  const exportDeck = (deck: Deck) => {\n    const deckJSON = JSON.stringify(deck, undefined, 2);\n    downloadBlob(new Blob([deckJSON], { type: 'application/json' }));\n  };\n\n  const findDecks = (params: FindAllDecksParams) => {\n    setLoading(true);\n    decksService\n      .findAll({\n        ...params,\n      })\n      .then((res) => {\n        setLoadedDecks(res.decks);\n        setTotalDecks(res.count);\n      })\n      .finally(() => {\n        setLoading(false);\n        setInitialLoad(false);\n      });\n  };\n\n  useEffect(() => {\n    findDecks({\n      authorId: [userId],\n      orderTitleBy: 'asc',\n      take: pageSize,\n      skip: (page - 1) * pageSize,\n      caseInsensitive: true,\n      titleContains: searchValue ? searchValue : undefined,\n    });\n  }, [page, pageSize, searchValue, userId]);\n\n  const [showDialog, setShowDialog] = useState(false);\n  const [deckToDelete, setDeckToDelete] = useState<Deck | null>(null);\n\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  return (\n    <main>\n      <DeleteDeckDialog\n        deckTitle={deckToDelete?.title ?? ''}\n        open={showDialog}\n        onBackDropClick={() => setShowDialog(false)}\n        onExited={() => setDeckToDelete(null)}\n        onCancel={() => setShowDialog(false)}\n        onDelete={() => {\n          decksService\n            .remove(deckToDelete?.id ?? '')\n            .then(() =>\n              findDecks({\n                authorId: [userId],\n                orderTitleBy: 'asc',\n                take: pageSize,\n                skip: (page - 1) * pageSize,\n                caseInsensitive: true,\n                titleContains: searchValue ? searchValue : undefined,\n              })\n            )\n            .finally(() => setShowDialog(false));\n        }}\n      />\n      <div className={classes.content}>\n        <Typography variant=\"h1\">Your decks</Typography>\n\n        <div className={classes.sortAndSearchContainer}>\n          <div>\n            <TextField label=\"Sort by\" variant=\"outlined\" select value=\"title\">\n              <MenuItem value=\"title\">Title</MenuItem>\n            </TextField>\n          </div>\n          <TextField\n            label=\"Search\"\n            variant=\"outlined\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n\n          <div className={classes.buttonBox}>\n            <label>\n              <Button color=\"primary\" component=\"span\">\n                Import\n              </Button>\n              <input\n                type=\"file\"\n                accept=\"application/json\"\n                hidden\n                onChange={(changeEvent) => {\n                  setLoading(true);\n                  const reader = new FileReader();\n                  const file = changeEvent.target.files?.[0];\n                  if (!file) {\n                    return;\n                  }\n                  reader.onload = (e) => {\n                    const { result } = e.target ?? {};\n                    if (!result) {\n                      return;\n                    }\n                    const deck: Deck = JSON.parse(result as string);\n                    decksService\n                      .create(deck)\n                      .then(() =>\n                        findDecks({\n                          authorId: [userId],\n                          orderTitleBy: 'asc',\n                          take: pageSize,\n                          skip: (page - 1) * pageSize,\n                          caseInsensitive: true,\n                          titleContains: searchValue ? searchValue : undefined,\n                        })\n                      )\n                      .then(() => {\n                        setSnackbarMessage('Deck successfully imported');\n                        setShowSnackbar(true);\n                      })\n                      .catch(() => {\n                        setSnackbarMessage('Failed to import deck.');\n                        setShowSnackbar(true);\n                      })\n                      .finally(() => {\n                        changeEvent.target.value = '';\n                        setLoading(false);\n                      });\n                  };\n                  reader.readAsText(file);\n                }}\n              />\n            </label>\n            {!isMobile && (\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                component={Link}\n                to={routes.deckAdd}\n              >\n                Create\n              </Button>\n            )}\n          </div>\n        </div>\n        <LoadableComponent loading={initialLoad}>\n          <div className={classes.paginationContainer}>\n            <div className={classes.deckList}>\n              {loadedDecks.map((deck) => (\n                <DeckInfoTile\n                  key={deck.id}\n                  deckId={deck.id ?? ''}\n                  title={deck.title}\n                  numberOfCards={deck.cards.length}\n                  onClick={() => history.push(deckView(deck.id ?? ''))}\n                  onDelete={() => {\n                    setDeckToDelete(deck);\n                    setShowDialog(true);\n                  }}\n                  onExport={() => exportDeck(deck)}\n                  onEdit={() => history.push(`${routes.decks}/${deck.id}/edit`)}\n                />\n              ))}\n            </div>\n            {/* Only show pagination controls if there is more than one page */}\n            {totalDecks / pageSize > 1 && (\n              <div className={classes.paginationControls}>\n                <Pagination\n                  count={Math.ceil(totalDecks / pageSize)}\n                  page={page}\n                  onChange={(_e, value) => setPage(value)}\n                  disabled={loading}\n                />\n              </div>\n            )}\n          </div>\n        </LoadableComponent>\n\n        {isMobile && (\n          <Fab\n            aria-label=\"create deck\"\n            className={classes.fab}\n            color=\"secondary\"\n            component={Link}\n            to={routes.deckAdd}\n          >\n            <AddIcon />\n          </Fab>\n        )}\n        <Snackbar\n          className={classes.snackbar}\n          open={showSnackbar}\n          message={snackbarMessage}\n          autoHideDuration={autoHideDuration}\n          onClose={() => setShowSnackbar(false)}\n        />\n      </div>\n    </main>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\n\nexport default function useDebouncedValue<T>(value: T, timeout: number): T {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  const lastFired = useRef(Date.now());\n\n  useEffect(() => {\n    const handle = setTimeout(() => {\n      setDebouncedValue(value);\n      lastFired.current = Date.now();\n    }, timeout - (Date.now() - lastFired.current));\n    return () => clearTimeout(handle);\n  }, [value, timeout]);\n\n  return debouncedValue;\n}\n","export function downloadBlob(blob: Blob) {\n  const blobLink = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = blobLink;\n  a.download = '';\n  a.click();\n  window.URL.revokeObjectURL(blobLink);\n}\n"],"sourceRoot":""}