{"version":3,"sources":["deck/services/decks.service.ts","common/constants/missing-required-field-error-message.tsx","common/hooks/use-unique-id.tsx","common/constants/snackbar.ts","deck/pages/add-deck.page.styles.tsx","deck/components/edit-card-tile.styles.tsx","deck/components/edit-card-tile.tsx","deck/components/edit-deck-form.styles.tsx","deck/components/edit-deck-form.tsx","common/utils/array.utils.ts","deck/reducers/edit-deck.reducer.ts","deck/hooks/use-edit-deck.tsx","deck/pages/add-deck.page.tsx"],"names":["decksService","http","a","title","description","visibility","cards","this","post","authorId","authService","getCurrentUser","map","sides","frontText","text","backText","data","id","get","findOneDeckResponseToDeck","params","decks","count","put","cardId","delete","apiClient","card","tags","missingRequiredFieldErrorMessage","uniqueIdNumber","useUniqueId","useRef","current","autoHideDuration","useStyles","makeStyles","theme","backdrop","zIndex","appBar","textFieldContainer","display","gridTemplateColumns","gap","spacing","cardContent","flexDirection","margin","actionArea","justifyContent","header","alignItems","EditCardTileInner","index","forceValidate","onCardSideChange","onDelete","onMoveUp","onMoveDown","classes","draggableId","useState","validateFrontText","setValidateFrontText","frontTextValid","length","frontTextError","validateBackText","setValidateBackText","backTextValid","backTextError","handleFrontTextChange","useCallback","e","target","value","handleBackTextChange","handleDelete","handleMoveUp","handleMoveDown","provided","Card","draggableProps","innerRef","className","Typography","variant","component","aria-label","dragHandleProps","style","height","DragHandle","TextField","label","required","multiline","error","helperText","undefined","onChange","inputProps","IconButton","onClick","disabled","Delete","ArrowUpward","ArrowDownward","EditCardTile","memo","form","marginTop","marginBottom","generalInfoContainer","cardList","saveButtonContainer","EditDeckForm","onTitleChange","onDescriptionChange","onChangeVisibility","onChangeCardSide","onAddCard","onDeleteCard","onMoveCard","onSubmit","droppableId","validateTitle","setValidateTitle","setForceValidate","showTitleError","moveCardUp","moveCardDown","handleDragEnd","source","destination","noValidate","preventDefault","some","side","fullWidth","select","MenuItem","onDragEnd","ref","droppableProps","i","placeholder","Button","startIcon","Add","type","color","reorder","array","sourceIndex","destinationIndex","result","splice","replace","slice","editDeckReducer","state","action","payload","ArrayUtils","useEditDeck","init","useReducer","deck","deckDispatch","setDeck","handleTitleChange","handleDescriptionChange","handleVisibilityChange","handleChangeCardSideText","cardIndex","handleAddCard","handleCardDelete","handleMoveCard","AddDeckPage","Error","submitting","setSubmitting","history","useHistory","showSnackbar","setShowsSnackbar","snackbarMessage","setSnackbarMessage","open","create","then","goBack","catch","message","onClose"],"mappings":"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","file":"static/js/11.f16624d3.chunk.js","sourcesContent":["import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","const missingRequiredFieldErrorMessage = 'This field is required.';\n\nexport default missingRequiredFieldErrorMessage;\n","import { useRef } from 'react';\n\nlet uniqueIdNumber = 0;\n\nexport default function useUniqueId() {\n  const uniqueId = useRef(`unique-id-${uniqueIdNumber++}`);\n  return uniqueId.current;\n}\n","export const autoHideDuration = 6000;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.appBar + 1,\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldContainer: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: theme.spacing(2),\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    margin: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\nexport default useStyles;\n","import { Card, IconButton, TextField, Typography } from '@material-ui/core';\nimport {\n  ArrowDownward,\n  ArrowUpward,\n  Delete,\n  DragHandle,\n} from '@material-ui/icons';\nimport { memo, useCallback, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useUniqueId from '../../common/hooks/use-unique-id';\nimport useStyles from './edit-card-tile.styles';\n\ninterface EditCardTileProps {\n  index: number;\n  frontText: string;\n  backText: string;\n  forceValidate?: boolean;\n  onCardSideChange: (index: number, side: number, value: string) => void;\n  onDelete?: (index: number) => void;\n  onMoveUp?: (index: number) => void;\n  onMoveDown?: (index: number) => void;\n}\n\nexport function EditCardTileInner({\n  index,\n  frontText,\n  backText,\n  forceValidate,\n  onCardSideChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n}: EditCardTileProps) {\n  const classes = useStyles();\n\n  const draggableId = useUniqueId();\n\n  const [validateFrontText, setValidateFrontText] = useState(false);\n  const frontTextValid = frontText.length > 0;\n  const frontTextError =\n    (forceValidate || validateFrontText) && !frontTextValid;\n\n  const [validateBackText, setValidateBackText] = useState(false);\n  const backTextValid = backText.length > 0;\n  const backTextError = (forceValidate || validateBackText) && !backTextValid;\n\n  const handleFrontTextChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n      setValidateBackText(true);\n      onCardSideChange(index, 0, e.target.value);\n    },\n    [index, onCardSideChange]\n  );\n\n  const handleBackTextChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n      setValidateFrontText(true);\n      onCardSideChange(index, 1, e.target.value);\n    },\n    [index, onCardSideChange]\n  );\n\n  const handleDelete = useCallback(() => {\n    onDelete?.(index);\n  }, [index, onDelete]);\n\n  const handleMoveUp = useCallback(() => {\n    onMoveUp?.(index);\n  }, [index, onMoveUp]);\n\n  const handleMoveDown = useCallback(() => {\n    onMoveDown?.(index);\n  }, [index, onMoveDown]);\n\n  return (\n    <Draggable draggableId={draggableId} index={index}>\n      {(provided) => (\n        <Card {...provided.draggableProps} innerRef={provided.innerRef}>\n          <div className={classes.cardContent}>\n            <div className={classes.header}>\n              <Typography variant=\"h5\" component=\"div\">{`Card ${\n                index + 1\n              }`}</Typography>\n              <div\n                aria-label=\"card reorder drag handle\"\n                {...provided.dragHandleProps}\n                style={{ height: '24px' }}\n              >\n                <DragHandle />\n              </div>\n            </div>\n\n            <div className={classes.textFieldContainer}>\n              <TextField\n                label=\"Term\"\n                required\n                variant=\"outlined\"\n                multiline\n                value={frontText}\n                error={frontTextError}\n                helperText={\n                  frontTextError ? missingRequiredFieldErrorMessage : undefined\n                }\n                onChange={handleFrontTextChange}\n                inputProps={{ 'aria-label': 'term' }}\n              />\n              <TextField\n                label=\"Definition\"\n                required\n                variant=\"outlined\"\n                multiline\n                value={backText}\n                error={backTextError}\n                helperText={\n                  backTextError ? missingRequiredFieldErrorMessage : undefined\n                }\n                onChange={handleBackTextChange}\n                inputProps={{ 'aria-label': 'definition' }}\n              />\n            </div>\n            <div className={classes.actionArea}>\n              <IconButton\n                aria-label=\"delete\"\n                onClick={handleDelete}\n                disabled={!onDelete}\n              >\n                <Delete />\n              </IconButton>\n              <IconButton\n                aria-label=\"move up\"\n                onClick={handleMoveUp}\n                disabled={!onMoveUp}\n              >\n                <ArrowUpward />\n              </IconButton>\n              <IconButton\n                aria-label=\"move down\"\n                onClick={handleMoveDown}\n                disabled={!onMoveDown}\n              >\n                <ArrowDownward />\n              </IconButton>\n            </div>\n          </div>\n        </Card>\n      )}\n    </Draggable>\n  );\n}\n\nconst EditCardTile = memo(EditCardTileInner);\nexport default EditCardTile;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  generalInfoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  cardList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  saveButtonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default useStyles;\n","import { Button, MenuItem, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useCallback, useState } from 'react';\nimport Card from '../../card/interfaces/card';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport EditCardTile from './edit-card-tile';\nimport useStyles from './edit-deck-form.styles';\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\nimport useUniqueId from '../../common/hooks/use-unique-id';\n\ninterface EditDeckFormProps {\n  title: string;\n  description: string;\n  visibility: DeckVisibility;\n  cards: Card[];\n  onTitleChange: (value: string) => void;\n  onDescriptionChange: (value: string) => void;\n  onChangeVisibility: (value: DeckVisibility) => void;\n  onAddCard: () => void;\n  onChangeCardSide: (cardIndex: number, side: number, value: string) => void;\n  onDeleteCard: (index: number) => void;\n  onMoveCard: (source: number, destination: number) => void;\n  onSubmit: () => void;\n}\n\nexport default function EditDeckForm({\n  title,\n  description,\n  visibility,\n  cards,\n  onTitleChange,\n  onDescriptionChange,\n  onChangeVisibility,\n  onChangeCardSide,\n  onAddCard,\n  onDeleteCard,\n  onMoveCard,\n  onSubmit,\n}: EditDeckFormProps) {\n  const classes = useStyles();\n\n  const droppableId = useUniqueId();\n\n  const [validateTitle, setValidateTitle] = useState(false);\n  const [forceValidate, setForceValidate] = useState(false);\n  const showTitleError = (forceValidate || validateTitle) && title.length === 0;\n\n  const moveCardUp = useCallback(\n    (index: number) => onMoveCard(index, index - 1),\n    [onMoveCard]\n  );\n\n  const moveCardDown = useCallback(\n    (index: number) => onMoveCard(index, index + 1),\n    [onMoveCard]\n  );\n\n  const handleDragEnd = useCallback(\n    ({ source, destination }: DropResult) => {\n      if (\n        !destination ||\n        (destination.droppableId === source.droppableId &&\n          destination.index === source.index)\n      ) {\n        return;\n      }\n      onMoveCard(source.index, destination.index);\n    },\n    [onMoveCard]\n  );\n\n  return (\n    <form\n      noValidate\n      className={classes.form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (\n          title.length === 0 ||\n          cards.some(({ sides }) =>\n            sides.some((side) => side.text.length === 0)\n          )\n        ) {\n          setForceValidate(true);\n          return;\n        }\n        onSubmit();\n      }}\n    >\n      <div className={classes.generalInfoContainer}>\n        <TextField\n          required\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          error={showTitleError}\n          helperText={\n            showTitleError ? missingRequiredFieldErrorMessage : undefined\n          }\n          value={title}\n          onChange={(e) => {\n            setValidateTitle(true);\n            onTitleChange(e.target.value);\n          }}\n          inputProps={{ 'aria-label': 'title' }}\n        />\n        <TextField\n          variant=\"outlined\"\n          label=\"Description\"\n          fullWidth\n          value={description}\n          onChange={(e) => onDescriptionChange(e.target.value)}\n          inputProps={{ 'aria-label': 'description' }}\n        />\n        <TextField\n          variant=\"outlined\"\n          value={visibility}\n          onChange={(e) => onChangeVisibility(e.target.value as DeckVisibility)}\n          select\n          label=\"Visibility\"\n          inputProps={{ 'aria-label': 'visibility' }}\n        >\n          <MenuItem value=\"PRIVATE\">Private</MenuItem>\n          <MenuItem value=\"PUBLIC\">Public</MenuItem>\n        </TextField>\n      </div>\n\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId={droppableId}>\n          {(provided) => (\n            <div\n              className={classes.cardList}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {cards.map(\n                ({ sides: [{ text: frontText }, { text: backText }] }, i) => (\n                  <EditCardTile\n                    key={i}\n                    forceValidate={forceValidate}\n                    index={i}\n                    frontText={frontText}\n                    backText={backText}\n                    onCardSideChange={onChangeCardSide}\n                    onDelete={cards.length > 1 ? onDeleteCard : undefined}\n                    onMoveUp={i !== 0 ? moveCardUp : undefined}\n                    onMoveDown={\n                      i !== cards.length - 1 ? moveCardDown : undefined\n                    }\n                  />\n                )\n              )}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Button\n        variant=\"outlined\"\n        fullWidth\n        startIcon={<Add />}\n        onClick={onAddCard}\n      >\n        Add card\n      </Button>\n      <div className={classes.saveButtonContainer}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n}\n","export function reorder<T>(\n  array: Array<T>,\n  sourceIndex: number,\n  destinationIndex: number\n): Array<T> {\n  const result = [...array];\n  result.splice(destinationIndex, 0, result.splice(sourceIndex, 1)[0]);\n  return result;\n}\n\nexport function replace<T>(array: Array<T>, index: number, value: T): Array<T> {\n  return [...array.slice(0, index), value, ...array.slice(index + 1)];\n}\n","import Deck from '../interfaces/deck';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport * as ArrayUtils from '../../common/utils/array.utils';\nimport Card from '../../card/interfaces/card';\n\nexport type State = Deck | null;\n\nexport type Action =\n  | { type: 'set'; payload: State }\n  | { type: 'addCard' }\n  | { type: 'deleteCard'; payload: number }\n  | { type: 'moveCard'; payload: { source: number; destination: number } }\n  | { type: 'changeCard'; payload: { index: number; value: Card } }\n  | {\n      type: 'changeCardSideText';\n      payload: { index: number; side: number; value: string };\n    }\n  | { type: 'changeTitle' | 'changeDescription'; payload: string }\n  | { type: 'changeVisibility'; payload: DeckVisibility };\n\nexport function editDeckReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'set':\n      return action.payload;\n    case 'addCard':\n      if (!state) {\n        return state;\n      }\n      return {\n        ...state,\n        cards: [...state.cards, { sides: [{ text: '' }, { text: '' }] }],\n      };\n    case 'deleteCard':\n      if (!state) {\n        return state;\n      }\n      return {\n        ...state,\n        cards: [\n          ...state.cards.slice(0, action.payload),\n          ...state.cards.slice(action.payload + 1),\n        ],\n      };\n    case 'moveCard':\n      if (!state) {\n        return state;\n      }\n      return {\n        ...state,\n        cards: ArrayUtils.reorder(\n          state.cards,\n          action.payload.source,\n          action.payload.destination\n        ),\n      };\n    case 'changeCard':\n      if (!state) {\n        return null;\n      }\n      return {\n        ...state,\n        cards: ArrayUtils.replace(\n          state.cards,\n          action.payload.index,\n          action.payload.value\n        ),\n      };\n    case 'changeCardSideText': {\n      if (!state) {\n        return state;\n      }\n      const card = { ...state.cards[action.payload.index] };\n      card.sides[action.payload.side] = { text: action.payload.value };\n      return {\n        ...state,\n        cards: ArrayUtils.replace(state.cards, action.payload.index, card),\n      };\n    }\n    case 'changeDescription':\n      if (!state) {\n        return state;\n      }\n      return { ...state, description: action.payload };\n    case 'changeTitle':\n      if (!state) {\n        return state;\n      }\n      return { ...state, title: action.payload };\n    case 'changeVisibility':\n      if (!state) {\n        return state;\n      }\n      return { ...state, visibility: action.payload };\n  }\n}\n","import { useReducer, useCallback } from 'react';\nimport Deck from '../interfaces/deck';\nimport { editDeckReducer, State } from '../reducers/edit-deck.reducer';\nimport { DeckVisibility } from '../types/deck-visibility';\n\nexport default function useEditDeck(init: State) {\n  const [deck, deckDispatch] = useReducer(editDeckReducer, null);\n  const setDeck = useCallback(\n    (value: Deck | null) => deckDispatch({ type: 'set', payload: value }),\n    []\n  );\n  const handleTitleChange = useCallback(\n    (value: string) => deckDispatch({ type: 'changeTitle', payload: value }),\n    []\n  );\n\n  const handleDescriptionChange = useCallback(\n    (value: string) =>\n      deckDispatch({ type: 'changeDescription', payload: value }),\n    []\n  );\n\n  const handleVisibilityChange = useCallback(\n    (value: DeckVisibility) =>\n      deckDispatch({ type: 'changeVisibility', payload: value }),\n\n    []\n  );\n\n  const handleChangeCardSideText = useCallback(\n    (cardIndex: number, side: number, value: string) =>\n      deckDispatch({\n        type: 'changeCardSideText',\n        payload: { index: cardIndex, side, value },\n      }),\n    []\n  );\n\n  const handleAddCard = useCallback(\n    () => deckDispatch({ type: 'addCard' }),\n    []\n  );\n\n  const handleCardDelete = useCallback(\n    (index: number) => deckDispatch({ type: 'deleteCard', payload: index }),\n    []\n  );\n\n  const handleMoveCard = useCallback(\n    (source: number, destination: number) =>\n      deckDispatch({ type: 'moveCard', payload: { source, destination } }),\n    []\n  );\n\n  return {\n    deck,\n    deckDispatch,\n    setDeck,\n    handleTitleChange,\n    handleDescriptionChange,\n    handleVisibilityChange,\n    handleChangeCardSideText,\n    handleAddCard,\n    handleCardDelete,\n    handleMoveCard,\n  };\n}\n","import {\n  Backdrop,\n  CircularProgress,\n  Container,\n  Snackbar,\n} from '@material-ui/core';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { autoHideDuration } from '../../common/constants/snackbar';\nimport EditDeckForm from '../components/edit-deck-form';\nimport useEditDeck from '../hooks/use-edit-deck';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './add-deck.page.styles';\n\nexport default function AddDeckPage() {\n  const classes = useStyles();\n  const {\n    deck,\n    handleTitleChange,\n    handleDescriptionChange,\n    handleVisibilityChange,\n    handleChangeCardSideText,\n    handleAddCard,\n    handleCardDelete,\n    handleMoveCard,\n  } = useEditDeck({\n    title: '',\n    description: '',\n    visibility: 'PRIVATE',\n    cards: [{ sides: [{ text: '' }, { text: '' }] }],\n    tags: [],\n  });\n\n  if (!deck) {\n    throw new Error();\n  }\n\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n\n  const [showSnackbar, setShowsSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  return (\n    <>\n      <Backdrop open={submitting} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Container>\n        <EditDeckForm\n          title={deck.title}\n          description={deck.description}\n          visibility={deck.visibility}\n          cards={deck.cards}\n          onTitleChange={handleTitleChange}\n          onDescriptionChange={handleDescriptionChange}\n          onChangeVisibility={handleVisibilityChange}\n          onChangeCardSide={handleChangeCardSideText}\n          onAddCard={handleAddCard}\n          onDeleteCard={handleCardDelete}\n          onMoveCard={handleMoveCard}\n          onSubmit={() => {\n            setSubmitting(true);\n            decksService\n              .create({\n                title: deck.title,\n                description: deck.description,\n                visibility: deck.visibility,\n                cards: deck.cards,\n                tags: deck.tags,\n              })\n              .then(() => history.goBack())\n              .catch(() => {\n                setSnackbarMessage('Failed to save deck.');\n                setShowsSnackbar(true);\n                setSubmitting(false);\n              });\n          }}\n        />\n        {/* <EditDeckForm\n          title={title}\n          description={description}\n          visibility={visibility}\n          cards={cards}\n          onTitleChange={setTitle}\n          onDescriptionChange={setDescription}\n          onChangeVisibility={setVisibility}\n          onSubmit={() => {\n            setSubmitting(true);\n            decksService\n              .create({ title, description, visibility, cards, tags: [] })\n              .then(() => history.goBack())\n              .catch(() => {\n                setSnackbarMessage('Failed to save deck.');\n                setShowsSnackbar(true);\n                setSubmitting(false);\n              });\n          }}\n        /> */}\n      </Container>\n      <Snackbar\n        open={showSnackbar}\n        message={snackbarMessage}\n        autoHideDuration={autoHideDuration}\n        onClose={() => setShowsSnackbar(false)}\n      />\n    </>\n  );\n}\n"],"sourceRoot":""}