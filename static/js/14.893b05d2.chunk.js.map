{"version":3,"sources":["common/hooks/use-unique-id.tsx","common/components/text-field.tsx","auth/components/form.styles.tsx","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","auth/components/login-form.tsx","auth/pages/login.page.styles.tsx","auth/pages/login.page.tsx"],"names":["uniqueIdNumber","useUniqueId","useRef","current","TextField","props","id","useStyles","makeStyles","theme","form","display","flexDirection","gap","spacing","submitOrAltRow","justifyContent","alignItems","Container","React","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","createSvgIcon","d","defaultIconMapping","success","SuccessOutlinedIcon","fontSize","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","Alert","action","children","_props$closeText","closeText","color","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","_props$variant","variant","Paper","square","elevation","message","IconButton","size","title","onClick","getColor","palette","type","darken","lighten","getBackgroundColor","typography","body2","borderRadius","shape","backgroundColor","padding","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","opacity","schema","yup","username","label","required","password","LoginForm","onSubmit","useForm","resolver","yupResolver","errors","formState","register","handleSubmit","inputProps","undefined","helperText","Button","Link","to","routes","registration","content","LoginPage","credentials","useContext","CredentialsContext","useState","serverError","setServerError","search","useLocation","redirectURL","URLSearchParams","get","dashboard","authService","logIn","catch","e","response","data"],"mappings":"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","file":"static/js/14.893b05d2.chunk.js","sourcesContent":["import { useRef } from 'react';\n\nlet uniqueIdNumber = 0;\n\nexport default function useUniqueId() {\n  const uniqueId = useRef(`unique-id-${uniqueIdNumber++}`);\n  return uniqueId.current;\n}\n","import {\n  TextField as MuiTextField,\n  TextFieldProps as MuiTextFieldProps,\n} from '@material-ui/core';\nimport useUniqueId from '../hooks/use-unique-id';\n\nexport interface TextFieldProps extends Omit<MuiTextFieldProps, 'label'> {\n  label?: string;\n}\n\nexport default function TextField(props: TextFieldProps) {\n  const id = useUniqueId();\n  return <MuiTextField id={id} {...props} />;\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  submitOrAltRow: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nexport default useStyles;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import useStyles from './form.styles';\nimport { Button } from '@material-ui/core';\nimport routes from '../../router/constants/routes';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport TextField, { TextFieldProps } from '../../common/components/text-field';\n\nexport type FormValues = {\n  username: string;\n  password: string;\n};\n\nconst schema = yup.object().shape({\n  username: yup.string().label('Username').required(),\n  password: yup.string().label('Password').required(),\n});\ninterface LoginFormProps {\n  variant?: TextFieldProps['variant'];\n  onSubmit: (value: FormValues) => void;\n}\n\nexport default function LoginForm({ variant, onSubmit }: LoginFormProps) {\n  const classes = useStyles();\n\n  const {\n    formState: { errors },\n    register,\n    handleSubmit,\n  } = useForm<FormValues>({ resolver: yupResolver(schema) });\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n      <TextField\n        label=\"Username\"\n        variant={variant}\n        inputProps={register('username', { required: true })}\n        error={errors.username !== undefined}\n        helperText={errors.username?.message}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        variant={variant}\n        inputProps={register('password', { required: true })}\n        error={errors.password !== undefined}\n        helperText={errors.password?.message}\n      />\n      <div className={classes.submitOrAltRow}>\n        <Button component={Link} to={routes.registration} color=\"primary\">\n          Create account\n        </Button>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Log in\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Container } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useContext, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport routes from '../../router/constants/routes';\nimport LoginForm from '../components/login-form';\nimport { authService } from '../services/auth.service';\nimport useStyles from './login.page.styles';\nimport CredentialsContext from '../contexts/credentials.context';\n\nexport default function LoginPage() {\n  const credentials = useContext(CredentialsContext);\n  const classes = useStyles();\n\n  const [serverError, setServerError] = useState('');\n\n  const { search } = useLocation();\n  const redirectURL =\n    new URLSearchParams(search).get('continue') ?? routes.dashboard;\n\n  if (credentials) {\n    return <Redirect to={redirectURL} />;\n  }\n\n  return (\n    <div>\n      <Container className={classes.content}>\n        {serverError && <Alert severity=\"error\">{serverError}</Alert>}\n        <LoginForm\n          variant=\"outlined\"\n          onSubmit={(value) => {\n            authService.logIn(value.username, value.password).catch((e) => {\n              if (e.response) {\n                setServerError(e.response?.data?.message);\n              } else {\n                setServerError('An error has occurred.');\n              }\n            });\n          }}\n        />\n      </Container>\n    </div>\n  );\n}\n"],"sourceRoot":""}