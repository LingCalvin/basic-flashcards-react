{"version":3,"sources":["deck/services/decks.service.ts","common/constants/missing-required-field-error-message.tsx","common/components/loadable-component.styles.tsx","common/components/loadable-component.tsx","common/hooks/use-unique-id.tsx","common/constants/snackbar.ts","deck/pages/add-deck.page.styles.tsx","deck/components/edit-card-tile.styles.tsx","deck/components/edit-card-tile.tsx","deck/components/edit-deck-form.styles.tsx","deck/components/edit-deck-form.tsx","common/utils/array.utils.ts","deck/reducers/edit-deck.reducer.ts","deck/hooks/use-edit-deck.tsx","deck/pages/edit-deck.page.tsx"],"names":["decksService","http","a","title","description","visibility","cards","this","post","authorId","authService","getCurrentUser","map","sides","frontText","text","backText","data","id","get","findOneDeckResponseToDeck","params","decks","count","put","cardId","delete","apiClient","card","tags","missingRequiredFieldErrorMessage","useStyles","makeStyles","root","display","justifyContent","LoadableComponent","loading","children","className","delay","classes","useState","showProgress","setShowProgress","useEffect","timeout","setTimeout","clearTimeout","clsx","CircularProgress","uniqueIdNumber","useUniqueId","useRef","current","autoHideDuration","theme","backdrop","zIndex","appBar","textFieldContainer","gridTemplateColumns","gap","spacing","cardContent","flexDirection","margin","actionArea","header","alignItems","EditCardTileInner","index","forceValidate","onCardSideChange","onDelete","onMoveUp","onMoveDown","draggableId","validateFrontText","setValidateFrontText","frontTextValid","length","frontTextError","validateBackText","setValidateBackText","backTextValid","backTextError","handleFrontTextChange","useCallback","e","target","value","handleBackTextChange","handleDelete","handleMoveUp","handleMoveDown","provided","Card","draggableProps","innerRef","Typography","variant","component","aria-label","dragHandleProps","style","height","DragHandle","TextField","label","required","multiline","error","helperText","undefined","onChange","inputProps","IconButton","onClick","disabled","Delete","ArrowUpward","ArrowDownward","EditCardTile","memo","form","marginTop","marginBottom","generalInfoContainer","cardList","saveButtonContainer","EditDeckForm","onTitleChange","onDescriptionChange","onChangeVisibility","onChangeCardSide","onAddCard","onDeleteCard","onMoveCard","onSubmit","droppableId","validateTitle","setValidateTitle","setForceValidate","showTitleError","moveCardUp","moveCardDown","handleDragEnd","source","destination","noValidate","preventDefault","some","side","fullWidth","select","MenuItem","onDragEnd","ref","droppableProps","i","placeholder","Button","startIcon","Add","type","color","reorder","array","sourceIndex","destinationIndex","result","splice","replace","slice","editDeckReducer","state","action","payload","ArrayUtils","useEditDeck","init","useReducer","deck","deckDispatch","setDeck","handleTitleChange","handleDescriptionChange","handleVisibilityChange","handleChangeCardSideText","cardIndex","handleAddCard","handleCardDelete","handleMoveCard","EditDeckPage","deckId","useParams","submitting","setSubmitting","history","useHistory","setLoading","showSnackbar","setShowsSnackbar","snackbarMessage","setSnackbarMessage","findOne","then","finally","open","update","goBack","catch","message","onClose"],"mappings":"+OAmEaA,EAAe,IA3D5B,WACE,WAAoBC,GAAsB,yBAAtBA,OADtB,iFAGE,uCAAAC,EAAA,6DAAeC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,YAAaC,EAAnC,EAAmCA,WAAYC,EAA/C,EAA+CA,MAA/C,SACyBC,KAAKN,KAAKO,KAAK,SAAU,CAC9CC,SAAUC,IAAYC,iBACtBR,QACAC,cACAC,aACAC,MAAOA,EAAMM,KACX,gCAAGC,MAAH,SAA2D,CACzDC,UADF,KAAaC,KAEXC,SAFF,KAAkCD,WAPxC,uBACUE,EADV,EACUA,KADV,kBAaSA,GAbT,gDAHF,mHAmBE,WAAcC,GAAd,iBAAAhB,EAAA,sEACyBK,KAAKN,KAAKkB,IAAV,iBAA6CD,IADtE,uBACUD,EADV,EACUA,KADV,kBAESG,EAA0BH,IAFnC,gDAnBF,mHAwBE,WACEI,GADF,iBAAAnB,EAAA,sEAGyBK,KAAKN,KAAKkB,IAAV,SAA8C,CACnEE,WAJJ,uBAGUJ,EAHV,EAGUA,KAHV,kBAOS,CACLK,MAAOL,EAAKK,MAAMV,IAAIQ,GACtBG,MAAON,EAAKM,QAThB,gDAxBF,kHAqCE,yCAAArB,EAAA,6DAAegB,EAAf,EAAeA,GAAIf,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WAAYC,EAAnD,EAAmDA,MAAnD,SACyBC,KAAKN,KAAKuB,IAAV,iBAAwBN,GAAM,CACnDT,SAAUC,IAAYC,iBACtBR,QACAC,cACAC,aACAC,MAAOA,EAAMM,KACX,gBAAOa,EAAP,EAAGP,GAAH,gBAAeL,MAAf,SAAuE,CACrEK,GAAIO,EACJX,UAFF,KAAyBC,KAGvBC,SAHF,KAA8CD,WAPpD,uBACUE,EADV,EACUA,KADV,kBAcSA,GAdT,gDArCF,kHAsDE,WAAaC,GAAb,SAAAhB,EAAA,+EACSK,KAAKN,KAAKyB,OAAV,iBAA2BR,KADpC,gDAtDF,8DA2D4B,CAAiBS,KAE7C,SAASP,EAA0BH,GAEjC,MAAO,CACLC,GAFuDD,EAAjDC,GAGNT,SAHuDQ,EAA7CR,SAIVN,MAJuDc,EAAnCd,MAKpBC,YALuDa,EAA5Bb,YAM3BC,WANuDY,EAAfZ,WAOxCC,MAAOW,EAAKX,MAAMM,KAAI,SAACgB,GAAD,MAAW,CAC/BV,GAAIU,EAAKV,GACTL,MAAO,CAAC,CAAEE,KAAMa,EAAKd,WAAa,CAAEC,KAAMa,EAAKZ,eAEjDa,KAAM,M,iCC/EKC,IAF0B,2B,+GCS1BC,EAPGC,YAAW,CAC3BC,KAAM,CACJC,QAAS,OACTC,eAAgB,Y,OCOL,SAASC,EAAT,GAKa,IAJ1BC,EAIyB,EAJzBA,QACAC,EAGyB,EAHzBA,SACAC,EAEyB,EAFzBA,UAEyB,IADzBC,aACyB,MADjB,IACiB,EACnBC,EAAUV,IAEhB,EAAwCW,mBAASF,GAAS,GAA1D,mBAAOG,EAAP,KAAqBC,EAArB,KASA,OAPAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,GAAgB,KACfJ,GACH,OAAO,kBAAMQ,aAAaF,MACzB,CAACN,IAEGH,EACL,qBAAKE,UAAWU,YAAKR,EAAQR,KAAMM,GAAnC,SACGI,GAAgB,cAACO,EAAA,EAAD,MAGnB,mCAAGZ,M,iCClCP,6CAEIa,EAAiB,EAEN,SAASC,IAEtB,OADiBC,iBAAO,aAAD,OAAcF,MACrBG,U,iCCNlB,kCAAO,IAAMC,EAAmB,K,iCCAhC,aAEMxB,EAAYC,aAAW,SAACwB,GAAD,MAAY,CACvCC,SAAU,CACRC,OAAQF,EAAME,OAAOC,OAAS,OAInB5B,O,qOCgBAA,EAtBGC,aAAW,SAACwB,GAAD,MAAY,CACvCI,mBAAoB,CAClB1B,QAAS,OACT2B,oBAAqB,UACrBC,IAAKN,EAAMO,QAAQ,IAErBC,YAAa,CACX9B,QAAS,OACT+B,cAAe,SACfH,IAAKN,EAAMO,QAAQ,GACnBG,OAAQV,EAAMO,QAAQ,IAExBI,WAAY,CACVjC,QAAS,OACTC,eAAgB,YAElBiC,OAAQ,CACNlC,QAAS,OACTC,eAAgB,gBAChBkC,WAAY,c,OCGT,SAASC,EAAT,GASgB,IARrBC,EAQoB,EARpBA,MACAzD,EAOoB,EAPpBA,UACAE,EAMoB,EANpBA,SACAwD,EAKoB,EALpBA,cACAC,EAIoB,EAJpBA,iBACAC,EAGoB,EAHpBA,SACAC,EAEoB,EAFpBA,SACAC,EACoB,EADpBA,WAEMnC,EAAUV,IAEV8C,EAAczB,cAEpB,EAAkDV,oBAAS,GAA3D,mBAAOoC,EAAP,KAA0BC,EAA1B,KACMC,EAAiBlE,EAAUmE,OAAS,EACpCC,GACHV,GAAiBM,KAAuBE,EAE3C,EAAgDtC,oBAAS,GAAzD,mBAAOyC,EAAP,KAAyBC,EAAzB,KACMC,EAAgBrE,EAASiE,OAAS,EAClCK,GAAiBd,GAAiBW,KAAsBE,EAExDE,EAAwBC,uBAC5B,SAACC,GACCL,GAAoB,GACpBX,EAAiBF,EAAO,EAAGkB,EAAEC,OAAOC,SAEtC,CAACpB,EAAOE,IAGJmB,EAAuBJ,uBAC3B,SAACC,GACCV,GAAqB,GACrBN,EAAiBF,EAAO,EAAGkB,EAAEC,OAAOC,SAEtC,CAACpB,EAAOE,IAGJoB,EAAeL,uBAAY,WACvB,OAARd,QAAQ,IAARA,KAAWH,KACV,CAACA,EAAOG,IAELoB,EAAeN,uBAAY,WACvB,OAARb,QAAQ,IAARA,KAAWJ,KACV,CAACA,EAAOI,IAELoB,EAAiBP,uBAAY,WACvB,OAAVZ,QAAU,IAAVA,KAAaL,KACZ,CAACA,EAAOK,IAEX,OACE,cAAC,IAAD,CAAWC,YAAaA,EAAaN,MAAOA,EAA5C,SACG,SAACyB,GAAD,OACC,cAACC,EAAA,EAAD,2BAAUD,EAASE,gBAAnB,IAAmCC,SAAUH,EAASG,SAAtD,SACE,sBAAK5D,UAAWE,EAAQuB,YAAxB,UACE,sBAAKzB,UAAWE,EAAQ2B,OAAxB,UACE,cAACgC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,wBACE/B,EAAQ,KAEV,6CACEgC,aAAW,4BACPP,EAASQ,iBAFf,IAGEC,MAAO,CAAEC,OAAQ,QAHnB,SAKE,cAACC,EAAA,EAAD,UAIJ,sBAAKpE,UAAWE,EAAQmB,mBAAxB,UACE,cAACgD,EAAA,EAAD,CACEC,MAAM,OACNC,UAAQ,EACRT,QAAQ,WACRU,WAAS,EACTpB,MAAO7E,EACPkG,MAAO9B,EACP+B,WACE/B,EAAiBpD,SAAmCoF,EAEtDC,SAAU5B,EACV6B,WAAY,CAAE,aAAc,UAE9B,cAACR,EAAA,EAAD,CACEC,MAAM,aACNC,UAAQ,EACRT,QAAQ,WACRU,WAAS,EACTpB,MAAO3E,EACPgG,MAAO1B,EACP2B,WACE3B,EAAgBxD,SAAmCoF,EAErDC,SAAUvB,EACVwB,WAAY,CAAE,aAAc,mBAGhC,sBAAK7E,UAAWE,EAAQ0B,WAAxB,UACE,cAACkD,EAAA,EAAD,CACEd,aAAW,SACXe,QAASzB,EACT0B,UAAW7C,EAHb,SAKE,cAAC8C,EAAA,EAAD,MAEF,cAACH,EAAA,EAAD,CACEd,aAAW,UACXe,QAASxB,EACTyB,UAAW5C,EAHb,SAKE,cAAC8C,EAAA,EAAD,MAEF,cAACJ,EAAA,EAAD,CACEd,aAAW,YACXe,QAASvB,EACTwB,UAAW3C,EAHb,SAKE,cAAC8C,EAAA,EAAD,kBAUhB,IACeC,EADMC,eAAKtD,GC7HXvC,EAxBGC,aAAW,SAACwB,GAAD,MAAY,CACvCqE,KAAM,CACJ3F,QAAS,OACT+B,cAAe,SACfH,IAAKN,EAAMO,QAAQ,GACnB+D,UAAWtE,EAAMO,QAAQ,GACzBgE,aAAcvE,EAAMO,QAAQ,IAE9BiE,qBAAsB,CACpB9F,QAAS,OACT+B,cAAe,SACfH,IAAKN,EAAMO,QAAQ,IAErBkE,SAAU,CACR/F,QAAS,OACT+B,cAAe,SACfH,IAAKN,EAAMO,QAAQ,IAErBmE,oBAAqB,CACnBhG,QAAS,OACTC,eAAgB,gBCIL,SAASgG,EAAT,GAaQ,IAZrBhI,EAYoB,EAZpBA,MACAC,EAWoB,EAXpBA,YACAC,EAUoB,EAVpBA,WACAC,EASoB,EATpBA,MACA8H,EAQoB,EARpBA,cACAC,EAOoB,EAPpBA,oBACAC,EAMoB,EANpBA,mBACAC,EAKoB,EALpBA,iBACAC,EAIoB,EAJpBA,UACAC,EAGoB,EAHpBA,aACAC,EAEoB,EAFpBA,WACAC,EACoB,EADpBA,SAEMlG,EAAUV,IAEV6G,EAAcxF,cAEpB,EAA0CV,oBAAS,GAAnD,mBAAOmG,EAAP,KAAsBC,EAAtB,KACA,EAA0CpG,oBAAS,GAAnD,mBAAO8B,EAAP,KAAsBuE,EAAtB,KACMC,GAAkBxE,GAAiBqE,IAAmC,IAAjB1I,EAAM8E,OAE3DgE,EAAazD,uBACjB,SAACjB,GAAD,OAAmBmE,EAAWnE,EAAOA,EAAQ,KAC7C,CAACmE,IAGGQ,EAAe1D,uBACnB,SAACjB,GAAD,OAAmBmE,EAAWnE,EAAOA,EAAQ,KAC7C,CAACmE,IAGGS,EAAgB3D,uBACpB,YAA0C,IAAvC4D,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,aAENA,GACAA,EAAYT,cAAgBQ,EAAOR,aAClCS,EAAY9E,QAAU6E,EAAO7E,OAIjCmE,EAAWU,EAAO7E,MAAO8E,EAAY9E,SAEvC,CAACmE,IAGH,OACE,uBACEY,YAAU,EACV/G,UAAWE,EAAQoF,KACnBc,SAAU,SAAClD,GACTA,EAAE8D,iBAEiB,IAAjBpJ,EAAM8E,QACN3E,EAAMkJ,MAAK,qBAAG3I,MACN2I,MAAK,SAACC,GAAD,OAA+B,IAArBA,EAAK1I,KAAKkE,aAGjC8D,GAAiB,GAGnBJ,KAdJ,UAiBE,sBAAKpG,UAAWE,EAAQuF,qBAAxB,UACE,cAACpB,EAAA,EAAD,CACEE,UAAQ,EACRT,QAAQ,WACRQ,MAAM,QACN6C,WAAS,EACT1C,MAAOgC,EACP/B,WACE+B,EAAiBlH,SAAmCoF,EAEtDvB,MAAOxF,EACPgH,SAAU,SAAC1B,GACTqD,GAAiB,GACjBV,EAAc3C,EAAEC,OAAOC,QAEzByB,WAAY,CAAE,aAAc,WAE9B,cAACR,EAAA,EAAD,CACEP,QAAQ,WACRQ,MAAM,cACN6C,WAAS,EACT/D,MAAOvF,EACP+G,SAAU,SAAC1B,GAAD,OAAO4C,EAAoB5C,EAAEC,OAAOC,QAC9CyB,WAAY,CAAE,aAAc,iBAE9B,eAACR,EAAA,EAAD,CACEP,QAAQ,WACRV,MAAOtF,EACP8G,SAAU,SAAC1B,GAAD,OAAO6C,EAAmB7C,EAAEC,OAAOC,QAC7CgE,QAAM,EACN9C,MAAM,aACNO,WAAY,CAAE,aAAc,cAN9B,UAQE,cAACwC,EAAA,EAAD,CAAUjE,MAAM,UAAhB,qBACA,cAACiE,EAAA,EAAD,CAAUjE,MAAM,SAAhB,0BAIJ,cAAC,IAAD,CAAiBkE,UAAWV,EAA5B,SACE,cAAC,IAAD,CAAWP,YAAaA,EAAxB,SACG,SAAC5C,GAAD,OACC,8CACEzD,UAAWE,EAAQwF,SACnB6B,IAAK9D,EAASG,UACVH,EAAS+D,gBAHf,cAKGzJ,EAAMM,KACL,WAAuDoJ,GAAvD,oBAAGnJ,MAAH,GAAmBC,EAAnB,KAAaC,KAA2BC,EAAxC,KAAkCD,KAAlC,OACE,cAAC,EAAD,CAEEyD,cAAeA,EACfD,MAAOyF,EACPlJ,UAAWA,EACXE,SAAUA,EACVyD,iBAAkB8D,EAClB7D,SAAUpE,EAAM2E,OAAS,EAAIwD,OAAevB,EAC5CvC,SAAgB,IAANqF,EAAUf,OAAa/B,EACjCtC,WACEoF,IAAM1J,EAAM2E,OAAS,EAAIiE,OAAehC,GATrC8C,MAcVhE,EAASiE,qBAKlB,cAACC,EAAA,EAAD,CACE7D,QAAQ,WACRqD,WAAS,EACTS,UAAW,cAACC,EAAA,EAAD,IACX9C,QAASkB,EAJX,sBAQA,qBAAKjG,UAAWE,EAAQyF,oBAAxB,SACE,cAACgC,EAAA,EAAD,CAAQG,KAAK,SAAShE,QAAQ,YAAYiE,MAAM,UAAhD,yB,uGCvKD,SAASC,EACdC,EACAC,EACAC,GAEA,IAAMC,EAAM,YAAOH,GAEnB,OADAG,EAAOC,OAAOF,EAAkB,EAAGC,EAAOC,OAAOH,EAAa,GAAG,IAC1DE,EAGF,SAASE,EAAWL,EAAiBjG,EAAeoB,GACzD,MAAM,GAAN,mBAAW6E,EAAMM,MAAM,EAAGvG,IAA1B,CAAkCoB,GAAlC,YAA4C6E,EAAMM,MAAMvG,EAAQ,KCS3D,SAASwG,EAAgBC,EAAcC,GAC5C,OAAQA,EAAOZ,MACb,IAAK,MACH,OAAOY,EAAOC,QAChB,IAAK,UACH,OAAKF,EAGE,2BACFA,GADL,IAEE1K,MAAM,GAAD,mBAAM0K,EAAM1K,OAAZ,CAAmB,CAAEO,MAAO,CAAC,CAAEE,KAAM,IAAM,CAAEA,KAAM,UAJjDiK,EAMX,IAAK,aACH,OAAKA,EAGE,2BACFA,GADL,IAEE1K,MAAM,GAAD,mBACA0K,EAAM1K,MAAMwK,MAAM,EAAGG,EAAOC,UAD5B,YAEAF,EAAM1K,MAAMwK,MAAMG,EAAOC,QAAU,OANjCF,EASX,IAAK,WACH,OAAKA,EAGE,2BACFA,GADL,IAEE1K,MAAO6K,EACLH,EAAM1K,MACN2K,EAAOC,QAAQ9B,OACf6B,EAAOC,QAAQ7B,eAPV2B,EAUX,IAAK,aACH,OAAKA,EAGE,2BACFA,GADL,IAEE1K,MAAO6K,EACLH,EAAM1K,MACN2K,EAAOC,QAAQ3G,MACf0G,EAAOC,QAAQvF,SAPV,KAUX,IAAK,qBACH,IAAKqF,EACH,OAAOA,EAET,IAAMpJ,EAAI,eAAQoJ,EAAM1K,MAAM2K,EAAOC,QAAQ3G,QAE7C,OADA3C,EAAKf,MAAMoK,EAAOC,QAAQzB,MAAQ,CAAE1I,KAAMkK,EAAOC,QAAQvF,OAClD,2BACFqF,GADL,IAEE1K,MAAO6K,EAAmBH,EAAM1K,MAAO2K,EAAOC,QAAQ3G,MAAO3C,KAGjE,IAAK,oBACH,OAAKoJ,EAGE,2BAAKA,GAAZ,IAAmB5K,YAAa6K,EAAOC,UAF9BF,EAGX,IAAK,cACH,OAAKA,EAGE,2BAAKA,GAAZ,IAAmB7K,MAAO8K,EAAOC,UAFxBF,EAGX,IAAK,mBACH,OAAKA,EAGE,2BAAKA,GAAZ,IAAmB3K,WAAY4K,EAAOC,UAF7BF,GCrFA,SAASI,EAAYC,GAClC,MAA6BC,qBAAWP,EAAiB,MAAzD,mBAAOQ,EAAP,KAAaC,EAAb,KACMC,EAAUjG,uBACd,SAACG,GAAD,OAAwB6F,EAAa,CAAEnB,KAAM,MAAOa,QAASvF,MAC7D,IAEI+F,EAAoBlG,uBACxB,SAACG,GAAD,OAAmB6F,EAAa,CAAEnB,KAAM,cAAea,QAASvF,MAChE,IAGIgG,EAA0BnG,uBAC9B,SAACG,GAAD,OACE6F,EAAa,CAAEnB,KAAM,oBAAqBa,QAASvF,MACrD,IAGIiG,EAAyBpG,uBAC7B,SAACG,GAAD,OACE6F,EAAa,CAAEnB,KAAM,mBAAoBa,QAASvF,MAEpD,IAGIkG,EAA2BrG,uBAC/B,SAACsG,EAAmBrC,EAAc9D,GAAlC,OACE6F,EAAa,CACXnB,KAAM,qBACNa,QAAS,CAAE3G,MAAOuH,EAAWrC,OAAM9D,aAEvC,IAGIoG,EAAgBvG,uBACpB,kBAAMgG,EAAa,CAAEnB,KAAM,cAC3B,IAGI2B,EAAmBxG,uBACvB,SAACjB,GAAD,OAAmBiH,EAAa,CAAEnB,KAAM,aAAca,QAAS3G,MAC/D,IAGI0H,EAAiBzG,uBACrB,SAAC4D,EAAgBC,GAAjB,OACEmC,EAAa,CAAEnB,KAAM,WAAYa,QAAS,CAAE9B,SAAQC,mBACtD,IAGF,MAAO,CACLkC,OACAC,eACAC,UACAC,oBACAC,0BACAC,yBACAC,2BACAE,gBACAC,mBACAC,oB,2MChDW,SAASC,IACtB,IAAMzJ,EAAUV,cACJoK,EAAWC,cAAflL,GACR,EAAoCwB,oBAAS,GAA7C,mBAAO2J,EAAP,KAAmBC,EAAnB,KACMC,EAAUC,cAEhB,EAUIpB,YAAY,MATdG,EADF,EACEA,KACAE,EAFF,EAEEA,QACAC,EAHF,EAGEA,kBACAC,EAJF,EAIEA,wBACAC,EALF,EAKEA,uBACAC,EANF,EAMEA,yBACAE,EAPF,EAOEA,cACAC,EARF,EAQEA,iBACAC,EATF,EASEA,eAGF,EAA8BvJ,oBAAS,GAAvC,mBAAOL,EAAP,KAAgBoK,EAAhB,KAEA,EAAyC/J,oBAAS,GAAlD,mBAAOgK,EAAP,KAAqBC,EAArB,KACA,EAA8CjK,mBAAS,IAAvD,mBAAOkK,EAAP,KAAwBC,EAAxB,KAUA,OARAhK,qBAAU,WACR4J,GAAW,GACXzM,IACG8M,QAAQX,GACRY,MAAK,SAACxB,GAAD,OAAUE,EAAQF,MACvByB,SAAQ,kBAAMP,GAAW,QAC3B,CAACN,EAAQV,IAGV,qCACE,cAAC,IAAD,CAAUwB,KAAMZ,EAAY9J,UAAWE,EAAQgB,SAA/C,SACE,cAAC,IAAD,CAAkB6G,MAAM,cAE1B,cAAC,IAAD,CAAmBjI,QAASA,EAA5B,SACGkJ,GACC,cAAC,IAAD,UACE,cAAC,IAAD,CACEpL,MAAOoL,EAAKpL,MACZC,YAAamL,EAAKnL,YAClBC,WAAYkL,EAAKlL,WACjBC,MAAOiL,EAAKjL,MACZ8H,cAAesD,EACfrD,oBAAqBsD,EACrBrD,mBAAoBsD,EACpBrD,iBAAkBsD,EAClBrD,UAAWuD,EACXtD,aAAcuD,EACdtD,WAAYuD,EACZtD,SAAU,WACR2D,GAAc,GACdtM,IACGkN,OAAO,CACNhM,GAAIqK,EAAKrK,GACTf,MAAOoL,EAAKpL,MACZC,YAAamL,EAAKnL,YAClBC,WAAYkL,EAAKlL,WACjBC,MAAOiL,EAAKjL,MACZuB,KAAM,KAEPkL,MAAK,kBAAMR,EAAQY,YACnBC,OAAM,WACLP,EAAmB,0BACnBF,GAAiB,GACjBL,GAAc,aAO5B,cAAC,IAAD,CACEW,KAAMP,EACNW,QAAST,EACTrJ,iBAAkBA,IAClB+J,QAAS,kBAAMX,GAAiB","file":"static/js/8.d2b7f3db.chunk.js","sourcesContent":["import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","const missingRequiredFieldErrorMessage = 'This field is required.';\n\nexport default missingRequiredFieldErrorMessage;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\nexport default useStyles;\n","import { CircularProgress } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ReactNode, useEffect, useState } from 'react';\nimport useStyles from './loadable-component.styles';\n\ninterface LoadableComponentProps {\n  loading?: boolean;\n  children: ReactNode;\n  className?: string;\n  delay?: number;\n}\n\nexport default function LoadableComponent({\n  loading,\n  children,\n  className,\n  delay = 300,\n}: LoadableComponentProps) {\n  const classes = useStyles();\n\n  const [showProgress, setShowProgress] = useState(delay <= 0);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowProgress(true);\n    }, delay);\n    return () => clearTimeout(timeout);\n  }, [delay]);\n\n  return loading ? (\n    <div className={clsx(classes.root, className)}>\n      {showProgress && <CircularProgress />}\n    </div>\n  ) : (\n    <>{children}</>\n  );\n}\n","import { useRef } from 'react';\n\nlet uniqueIdNumber = 0;\n\nexport default function useUniqueId() {\n  const uniqueId = useRef(`unique-id-${uniqueIdNumber++}`);\n  return uniqueId.current;\n}\n","export const autoHideDuration = 6000;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.appBar + 1,\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldContainer: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: theme.spacing(2),\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    margin: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\nexport default useStyles;\n","import { Card, IconButton, TextField, Typography } from '@material-ui/core';\nimport {\n  ArrowDownward,\n  ArrowUpward,\n  Delete,\n  DragHandle,\n} from '@material-ui/icons';\nimport { memo, useCallback, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useUniqueId from '../../common/hooks/use-unique-id';\nimport useStyles from './edit-card-tile.styles';\n\ninterface EditCardTileProps {\n  index: number;\n  frontText: string;\n  backText: string;\n  forceValidate?: boolean;\n  onCardSideChange: (index: number, side: number, value: string) => void;\n  onDelete?: (index: number) => void;\n  onMoveUp?: (index: number) => void;\n  onMoveDown?: (index: number) => void;\n}\n\nexport function EditCardTileInner({\n  index,\n  frontText,\n  backText,\n  forceValidate,\n  onCardSideChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n}: EditCardTileProps) {\n  const classes = useStyles();\n\n  const draggableId = useUniqueId();\n\n  const [validateFrontText, setValidateFrontText] = useState(false);\n  const frontTextValid = frontText.length > 0;\n  const frontTextError =\n    (forceValidate || validateFrontText) && !frontTextValid;\n\n  const [validateBackText, setValidateBackText] = useState(false);\n  const backTextValid = backText.length > 0;\n  const backTextError = (forceValidate || validateBackText) && !backTextValid;\n\n  const handleFrontTextChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n      setValidateBackText(true);\n      onCardSideChange(index, 0, e.target.value);\n    },\n    [index, onCardSideChange]\n  );\n\n  const handleBackTextChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n      setValidateFrontText(true);\n      onCardSideChange(index, 1, e.target.value);\n    },\n    [index, onCardSideChange]\n  );\n\n  const handleDelete = useCallback(() => {\n    onDelete?.(index);\n  }, [index, onDelete]);\n\n  const handleMoveUp = useCallback(() => {\n    onMoveUp?.(index);\n  }, [index, onMoveUp]);\n\n  const handleMoveDown = useCallback(() => {\n    onMoveDown?.(index);\n  }, [index, onMoveDown]);\n\n  return (\n    <Draggable draggableId={draggableId} index={index}>\n      {(provided) => (\n        <Card {...provided.draggableProps} innerRef={provided.innerRef}>\n          <div className={classes.cardContent}>\n            <div className={classes.header}>\n              <Typography variant=\"h5\" component=\"div\">{`Card ${\n                index + 1\n              }`}</Typography>\n              <div\n                aria-label=\"card reorder drag handle\"\n                {...provided.dragHandleProps}\n                style={{ height: '24px' }}\n              >\n                <DragHandle />\n              </div>\n            </div>\n\n            <div className={classes.textFieldContainer}>\n              <TextField\n                label=\"Term\"\n                required\n                variant=\"outlined\"\n                multiline\n                value={frontText}\n                error={frontTextError}\n                helperText={\n                  frontTextError ? missingRequiredFieldErrorMessage : undefined\n                }\n                onChange={handleFrontTextChange}\n                inputProps={{ 'aria-label': 'term' }}\n              />\n              <TextField\n                label=\"Definition\"\n                required\n                variant=\"outlined\"\n                multiline\n                value={backText}\n                error={backTextError}\n                helperText={\n                  backTextError ? missingRequiredFieldErrorMessage : undefined\n                }\n                onChange={handleBackTextChange}\n                inputProps={{ 'aria-label': 'definition' }}\n              />\n            </div>\n            <div className={classes.actionArea}>\n              <IconButton\n                aria-label=\"delete\"\n                onClick={handleDelete}\n                disabled={!onDelete}\n              >\n                <Delete />\n              </IconButton>\n              <IconButton\n                aria-label=\"move up\"\n                onClick={handleMoveUp}\n                disabled={!onMoveUp}\n              >\n                <ArrowUpward />\n              </IconButton>\n              <IconButton\n                aria-label=\"move down\"\n                onClick={handleMoveDown}\n                disabled={!onMoveDown}\n              >\n                <ArrowDownward />\n              </IconButton>\n            </div>\n          </div>\n        </Card>\n      )}\n    </Draggable>\n  );\n}\n\nconst EditCardTile = memo(EditCardTileInner);\nexport default EditCardTile;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  generalInfoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  cardList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  saveButtonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default useStyles;\n","import { Button, MenuItem, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useCallback, useState } from 'react';\nimport Card from '../../card/interfaces/card';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport EditCardTile from './edit-card-tile';\nimport useStyles from './edit-deck-form.styles';\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\nimport useUniqueId from '../../common/hooks/use-unique-id';\n\ninterface EditDeckFormProps {\n  title: string;\n  description: string;\n  visibility: DeckVisibility;\n  cards: Card[];\n  onTitleChange: (value: string) => void;\n  onDescriptionChange: (value: string) => void;\n  onChangeVisibility: (value: DeckVisibility) => void;\n  onAddCard: () => void;\n  onChangeCardSide: (cardIndex: number, side: number, value: string) => void;\n  onDeleteCard: (index: number) => void;\n  onMoveCard: (source: number, destination: number) => void;\n  onSubmit: () => void;\n}\n\nexport default function EditDeckForm({\n  title,\n  description,\n  visibility,\n  cards,\n  onTitleChange,\n  onDescriptionChange,\n  onChangeVisibility,\n  onChangeCardSide,\n  onAddCard,\n  onDeleteCard,\n  onMoveCard,\n  onSubmit,\n}: EditDeckFormProps) {\n  const classes = useStyles();\n\n  const droppableId = useUniqueId();\n\n  const [validateTitle, setValidateTitle] = useState(false);\n  const [forceValidate, setForceValidate] = useState(false);\n  const showTitleError = (forceValidate || validateTitle) && title.length === 0;\n\n  const moveCardUp = useCallback(\n    (index: number) => onMoveCard(index, index - 1),\n    [onMoveCard]\n  );\n\n  const moveCardDown = useCallback(\n    (index: number) => onMoveCard(index, index + 1),\n    [onMoveCard]\n  );\n\n  const handleDragEnd = useCallback(\n    ({ source, destination }: DropResult) => {\n      if (\n        !destination ||\n        (destination.droppableId === source.droppableId &&\n          destination.index === source.index)\n      ) {\n        return;\n      }\n      onMoveCard(source.index, destination.index);\n    },\n    [onMoveCard]\n  );\n\n  return (\n    <form\n      noValidate\n      className={classes.form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (\n          title.length === 0 ||\n          cards.some(({ sides }) =>\n            sides.some((side) => side.text.length === 0)\n          )\n        ) {\n          setForceValidate(true);\n          return;\n        }\n        onSubmit();\n      }}\n    >\n      <div className={classes.generalInfoContainer}>\n        <TextField\n          required\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          error={showTitleError}\n          helperText={\n            showTitleError ? missingRequiredFieldErrorMessage : undefined\n          }\n          value={title}\n          onChange={(e) => {\n            setValidateTitle(true);\n            onTitleChange(e.target.value);\n          }}\n          inputProps={{ 'aria-label': 'title' }}\n        />\n        <TextField\n          variant=\"outlined\"\n          label=\"Description\"\n          fullWidth\n          value={description}\n          onChange={(e) => onDescriptionChange(e.target.value)}\n          inputProps={{ 'aria-label': 'description' }}\n        />\n        <TextField\n          variant=\"outlined\"\n          value={visibility}\n          onChange={(e) => onChangeVisibility(e.target.value as DeckVisibility)}\n          select\n          label=\"Visibility\"\n          inputProps={{ 'aria-label': 'visibility' }}\n        >\n          <MenuItem value=\"PRIVATE\">Private</MenuItem>\n          <MenuItem value=\"PUBLIC\">Public</MenuItem>\n        </TextField>\n      </div>\n\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId={droppableId}>\n          {(provided) => (\n            <div\n              className={classes.cardList}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {cards.map(\n                ({ sides: [{ text: frontText }, { text: backText }] }, i) => (\n                  <EditCardTile\n                    key={i}\n                    forceValidate={forceValidate}\n                    index={i}\n                    frontText={frontText}\n                    backText={backText}\n                    onCardSideChange={onChangeCardSide}\n                    onDelete={cards.length > 1 ? onDeleteCard : undefined}\n                    onMoveUp={i !== 0 ? moveCardUp : undefined}\n                    onMoveDown={\n                      i !== cards.length - 1 ? moveCardDown : undefined\n                    }\n                  />\n                )\n              )}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Button\n        variant=\"outlined\"\n        fullWidth\n        startIcon={<Add />}\n        onClick={onAddCard}\n      >\n        Add card\n      </Button>\n      <div className={classes.saveButtonContainer}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n}\n","export function reorder<T>(\n  array: Array<T>,\n  sourceIndex: number,\n  destinationIndex: number\n): Array<T> {\n  const result = [...array];\n  result.splice(destinationIndex, 0, result.splice(sourceIndex, 1)[0]);\n  return result;\n}\n\nexport function replace<T>(array: Array<T>, index: number, value: T): Array<T> {\n  return [...array.slice(0, index), value, ...array.slice(index + 1)];\n}\n","import Deck from '../interfaces/deck';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport * as ArrayUtils from '../../common/utils/array.utils';\nimport Card from '../../card/interfaces/card';\n\nexport type State = Deck | null;\n\nexport type Action =\n  | { type: 'set'; payload: State }\n  | { type: 'addCard' }\n  | { type: 'deleteCard'; payload: number }\n  | { type: 'moveCard'; payload: { source: number; destination: number } }\n  | { type: 'changeCard'; payload: { index: number; value: Card } }\n  | {\n      type: 'changeCardSideText';\n      payload: { index: number; side: number; value: string };\n    }\n  | { type: 'changeTitle' | 'changeDescription'; payload: string }\n  | { type: 'changeVisibility'; payload: DeckVisibility };\n\nexport function editDeckReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'set':\n      return action.payload;\n    case 'addCard':\n      if (!state) {\n        return state;\n      }\n      return {\n        ...state,\n        cards: [...state.cards, { sides: [{ text: '' }, { text: '' }] }],\n      };\n    case 'deleteCard':\n      if (!state) {\n        return state;\n      }\n      return {\n        ...state,\n        cards: [\n          ...state.cards.slice(0, action.payload),\n          ...state.cards.slice(action.payload + 1),\n        ],\n      };\n    case 'moveCard':\n      if (!state) {\n        return state;\n      }\n      return {\n        ...state,\n        cards: ArrayUtils.reorder(\n          state.cards,\n          action.payload.source,\n          action.payload.destination\n        ),\n      };\n    case 'changeCard':\n      if (!state) {\n        return null;\n      }\n      return {\n        ...state,\n        cards: ArrayUtils.replace(\n          state.cards,\n          action.payload.index,\n          action.payload.value\n        ),\n      };\n    case 'changeCardSideText': {\n      if (!state) {\n        return state;\n      }\n      const card = { ...state.cards[action.payload.index] };\n      card.sides[action.payload.side] = { text: action.payload.value };\n      return {\n        ...state,\n        cards: ArrayUtils.replace(state.cards, action.payload.index, card),\n      };\n    }\n    case 'changeDescription':\n      if (!state) {\n        return state;\n      }\n      return { ...state, description: action.payload };\n    case 'changeTitle':\n      if (!state) {\n        return state;\n      }\n      return { ...state, title: action.payload };\n    case 'changeVisibility':\n      if (!state) {\n        return state;\n      }\n      return { ...state, visibility: action.payload };\n  }\n}\n","import { useReducer, useCallback } from 'react';\nimport Deck from '../interfaces/deck';\nimport { editDeckReducer, State } from '../reducers/edit-deck.reducer';\nimport { DeckVisibility } from '../types/deck-visibility';\n\nexport default function useEditDeck(init: State) {\n  const [deck, deckDispatch] = useReducer(editDeckReducer, null);\n  const setDeck = useCallback(\n    (value: Deck | null) => deckDispatch({ type: 'set', payload: value }),\n    []\n  );\n  const handleTitleChange = useCallback(\n    (value: string) => deckDispatch({ type: 'changeTitle', payload: value }),\n    []\n  );\n\n  const handleDescriptionChange = useCallback(\n    (value: string) =>\n      deckDispatch({ type: 'changeDescription', payload: value }),\n    []\n  );\n\n  const handleVisibilityChange = useCallback(\n    (value: DeckVisibility) =>\n      deckDispatch({ type: 'changeVisibility', payload: value }),\n\n    []\n  );\n\n  const handleChangeCardSideText = useCallback(\n    (cardIndex: number, side: number, value: string) =>\n      deckDispatch({\n        type: 'changeCardSideText',\n        payload: { index: cardIndex, side, value },\n      }),\n    []\n  );\n\n  const handleAddCard = useCallback(\n    () => deckDispatch({ type: 'addCard' }),\n    []\n  );\n\n  const handleCardDelete = useCallback(\n    (index: number) => deckDispatch({ type: 'deleteCard', payload: index }),\n    []\n  );\n\n  const handleMoveCard = useCallback(\n    (source: number, destination: number) =>\n      deckDispatch({ type: 'moveCard', payload: { source, destination } }),\n    []\n  );\n\n  return {\n    deck,\n    deckDispatch,\n    setDeck,\n    handleTitleChange,\n    handleDescriptionChange,\n    handleVisibilityChange,\n    handleChangeCardSideText,\n    handleAddCard,\n    handleCardDelete,\n    handleMoveCard,\n  };\n}\n","import {\n  Backdrop,\n  CircularProgress,\n  Container,\n  Snackbar,\n} from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport { autoHideDuration } from '../../common/constants/snackbar';\nimport EditDeckForm from '../components/edit-deck-form';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './add-deck.page.styles';\nimport useEditDeck from '../hooks/use-edit-deck';\n\nexport default function EditDeckPage() {\n  const classes = useStyles();\n  const { id: deckId } = useParams<{ id: string }>();\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n\n  const {\n    deck,\n    setDeck,\n    handleTitleChange,\n    handleDescriptionChange,\n    handleVisibilityChange,\n    handleChangeCardSideText,\n    handleAddCard,\n    handleCardDelete,\n    handleMoveCard,\n  } = useEditDeck(null);\n\n  const [loading, setLoading] = useState(true);\n\n  const [showSnackbar, setShowsSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    decksService\n      .findOne(deckId)\n      .then((deck) => setDeck(deck))\n      .finally(() => setLoading(false));\n  }, [deckId, setDeck]);\n\n  return (\n    <>\n      <Backdrop open={submitting} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <LoadableComponent loading={loading}>\n        {deck && (\n          <Container>\n            <EditDeckForm\n              title={deck.title}\n              description={deck.description}\n              visibility={deck.visibility}\n              cards={deck.cards}\n              onTitleChange={handleTitleChange}\n              onDescriptionChange={handleDescriptionChange}\n              onChangeVisibility={handleVisibilityChange}\n              onChangeCardSide={handleChangeCardSideText}\n              onAddCard={handleAddCard}\n              onDeleteCard={handleCardDelete}\n              onMoveCard={handleMoveCard}\n              onSubmit={() => {\n                setSubmitting(true);\n                decksService\n                  .update({\n                    id: deck.id,\n                    title: deck.title,\n                    description: deck.description,\n                    visibility: deck.visibility,\n                    cards: deck.cards,\n                    tags: [],\n                  })\n                  .then(() => history.goBack())\n                  .catch(() => {\n                    setSnackbarMessage('Failed to update deck.');\n                    setShowsSnackbar(true);\n                    setSubmitting(false);\n                  });\n              }}\n            />\n          </Container>\n        )}\n      </LoadableComponent>\n      <Snackbar\n        open={showSnackbar}\n        message={snackbarMessage}\n        autoHideDuration={autoHideDuration}\n        onClose={() => setShowsSnackbar(false)}\n      />\n    </>\n  );\n}\n"],"sourceRoot":""}