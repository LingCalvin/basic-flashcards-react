{"version":3,"sources":["deck/services/decks.service.ts","common/constants/snackbar.ts","deck/pages/add-deck.page.styles.tsx","deck/components/edit-card-tile.styles.tsx","deck/components/edit-card-tile.tsx","deck/components/edit-deck-form.styles.tsx","deck/components/edit-deck-form.tsx","deck/pages/add-deck.page.tsx"],"names":["decksService","http","a","title","description","visibility","cards","this","post","authorId","authService","getCurrentUser","map","sides","frontText","text","backText","data","id","get","findOneDeckResponseToDeck","params","decks","count","put","cardId","delete","apiClient","card","tags","autoHideDuration","useStyles","makeStyles","theme","backdrop","zIndex","appBar","root","display","flexDirection","gap","spacing","padding","textFieldContainer","gridTemplateColumns","actionArea","justifyContent","EditCardTileInner","index","variant","removeDisabled","moveUpDisabled","moveDownDisabled","onRemove","onMove","classes","useFormContext","cardErrors","formState","errors","getValues","register","defaultTerm","defaultDefinition","handleRemove","useCallback","handleMoveUp","handleMoveDown","Paper","className","Typography","component","TextField","label","required","multiline","defaultValue","inputProps","error","undefined","helperText","message","IconButton","aria-label","onClick","disabled","Delete","ArrowUpward","ArrowDownward","EditCardTile","memo","form","marginTop","marginBottom","generalInfoContainer","cardList","saveButtonContainer","editCardTileContainer","paddingTop","schema","yup","shape","max","oneOf","of","WrappedCardTile","editCardTileProps","EditDeckForm","defaultValues","onSubmit","formMethods","useForm","resolver","yupResolver","control","handleSubmit","useFieldArray","name","keyName","append","fields","move","remove","noValidate","window","scrollTo","top","Object","values","length","Alert","severity","AlertTitle","List","dense","ListItem","ListItemText","select","MenuItem","value","useWindowScroll","computeItemKey","key","itemContent","Button","fullWidth","startIcon","Add","type","color","AddDeckPage","useState","submitting","setSubmitting","history","useHistory","showSnackbar","setShowsSnackbar","snackbarMessage","setSnackbarMessage","open","create","then","goBack","catch","onClose"],"mappings":"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","file":"static/js/13.49f99cac.chunk.js","sourcesContent":["import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","export const autoHideDuration = 6000;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.appBar + 1,\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  textFieldContainer: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\nexport default useStyles;\n","import {\n  IconButton,\n  Paper,\n  TextField,\n  TextFieldProps,\n  Typography,\n} from '@material-ui/core';\nimport { ArrowDownward, ArrowUpward, Delete } from '@material-ui/icons';\nimport { memo, useCallback } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport useStyles from './edit-card-tile.styles';\nimport { FormValues } from './edit-deck-form';\n\nexport interface EditCardTileProps {\n  index: number;\n  variant?: TextFieldProps['variant'];\n  removeDisabled?: boolean;\n  moveUpDisabled?: boolean;\n  moveDownDisabled?: boolean;\n  onRemove: (index: number) => void;\n  onMove: (source: number, destination: number) => void;\n}\n\nexport function EditCardTileInner({\n  index,\n  variant,\n  removeDisabled,\n  moveUpDisabled,\n  moveDownDisabled,\n  onRemove,\n  onMove,\n}: EditCardTileProps) {\n  const classes = useStyles();\n\n  const {\n    formState: {\n      errors: { cards: cardErrors },\n    },\n    getValues,\n    register,\n  } = useFormContext<FormValues>();\n\n  const {\n    sides: [{ text: defaultTerm }, { text: defaultDefinition }],\n  } = getValues('cards')[index];\n\n  const handleRemove = useCallback(() => onRemove(index), [index, onRemove]);\n\n  const handleMoveUp = useCallback(\n    () => onMove(index, index - 1),\n    [index, onMove]\n  );\n\n  const handleMoveDown = useCallback(\n    () => onMove(index, index + 1),\n    [index, onMove]\n  );\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"h6\" component=\"div\">{`Card ${\n        index + 1\n      }`}</Typography>\n      <div className={classes.textFieldContainer}>\n        <TextField\n          label=\"Term\"\n          required\n          multiline\n          variant={variant}\n          defaultValue={defaultTerm}\n          inputProps={{\n            'aria-label': 'term',\n            ...register(`cards.${index}.sides.0.text` as const),\n          }}\n          error={cardErrors?.[index]?.sides?.[0]?.text !== undefined}\n          helperText={cardErrors?.[index]?.sides?.[0]?.text?.message}\n        />\n        <TextField\n          label=\"Definition\"\n          required\n          multiline\n          variant={variant}\n          defaultValue={defaultDefinition}\n          inputProps={{\n            'aria-label': 'definition',\n            ...register(`cards.${index}.sides.1.text` as const),\n          }}\n          error={cardErrors?.[index]?.sides?.[1]?.text !== undefined}\n          helperText={cardErrors?.[index]?.sides?.[1]?.text?.message}\n        />\n      </div>\n      <div className={classes.actionArea}>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={handleRemove}\n          disabled={removeDisabled}\n        >\n          <Delete />\n        </IconButton>\n        <IconButton\n          aria-label=\"move up\"\n          onClick={handleMoveUp}\n          disabled={moveUpDisabled}\n        >\n          <ArrowUpward />\n        </IconButton>\n        <IconButton\n          aria-label=\"move down\"\n          onClick={handleMoveDown}\n          disabled={moveDownDisabled}\n        >\n          <ArrowDownward />\n        </IconButton>\n      </div>\n    </Paper>\n  );\n}\n\nconst EditCardTile = memo(EditCardTileInner);\nexport default EditCardTile;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  generalInfoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  cardList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  saveButtonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  editCardTileContainer: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport {\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  TextField,\n  TextFieldProps,\n} from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Fragment, memo } from 'react';\nimport {\n  FormProvider,\n  SubmitErrorHandler,\n  useFieldArray,\n  useForm,\n} from 'react-hook-form';\nimport { Virtuoso } from 'react-virtuoso';\nimport * as yup from 'yup';\nimport Card from '../../card/interfaces/card';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport EditCardTile, { EditCardTileProps } from './edit-card-tile';\nimport useStyles from './edit-deck-form.styles';\n\nexport type FormValues = {\n  title: string;\n  description: string;\n  visibility: DeckVisibility;\n  cards: Card[];\n};\n\nconst schema = yup.object().shape({\n  title: yup.string().label('Title').required().max(255),\n  description: yup.string().label('Description').max(4096),\n  visibility: yup.string().label('Visibility').oneOf(['PRIVATE', 'PUBLIC']),\n  cards: yup.array().of(\n    yup.object().shape({\n      sides: yup.array().of(\n        yup.object().shape({\n          text: yup.string().required().max(4096),\n        })\n      ),\n    })\n  ),\n});\n\ninterface EditDeckFormProps {\n  defaultValues?: FormValues;\n  variant?: TextFieldProps['variant'];\n  onSubmit: (value: FormValues) => void;\n}\n\nconst WrappedCardTile = memo(\n  ({\n    className,\n    ...editCardTileProps\n  }: EditCardTileProps & { className?: string }) => (\n    <div className={className}>\n      <EditCardTile {...editCardTileProps} />\n    </div>\n  )\n);\n\nexport default function EditDeckForm({\n  defaultValues,\n  variant,\n  onSubmit,\n}: EditDeckFormProps) {\n  const classes = useStyles();\n\n  const formMethods = useForm<FormValues>({\n    defaultValues,\n    resolver: yupResolver(schema),\n  });\n  const {\n    control,\n    formState: { errors },\n    handleSubmit,\n    register,\n  } = formMethods;\n  const { append, fields, move, remove } = useFieldArray({\n    control,\n    name: 'cards',\n    keyName: 'key', // A Card already has an id field\n  });\n  const onInvalid: SubmitErrorHandler<FormValues> = (errors) => {\n    if (\n      !errors.title &&\n      !errors.description &&\n      !errors.visibility &&\n      errors.cards !== undefined\n    ) {\n      window.scrollTo({ top: 0 });\n    }\n  };\n\n  return (\n    <form\n      className={classes.form}\n      noValidate\n      onSubmit={handleSubmit(onSubmit, onInvalid)}\n    >\n      {Object.values(errors).length > 0 && (\n        <Alert severity=\"error\">\n          <AlertTitle>Please correct the following errors</AlertTitle>\n          <List dense>\n            {errors.title && (\n              <ListItem>\n                <ListItemText>{errors.title.message}</ListItemText>\n              </ListItem>\n            )}\n            {errors.description && (\n              <ListItem>\n                <ListItemText>{errors.description.message}</ListItemText>\n              </ListItem>\n            )}\n            {errors.cards &&\n              errors.cards.map((cardErrors, index) => (\n                <Fragment key={index}>\n                  {cardErrors?.sides?.[0]?.text && (\n                    <ListItem>\n                      <ListItemText>\n                        {cardErrors.sides[0].text.message}\n                      </ListItemText>\n                    </ListItem>\n                  )}\n                  {cardErrors?.sides?.[1]?.text && (\n                    <ListItem>\n                      <ListItemText>\n                        {cardErrors.sides[1].text.message}\n                      </ListItemText>\n                    </ListItem>\n                  )}\n                </Fragment>\n              ))}\n          </List>\n        </Alert>\n      )}\n      <div className={classes.generalInfoContainer}>\n        <TextField\n          label=\"Title\"\n          required\n          variant={variant}\n          defaultValue=\"\"\n          inputProps={{ 'aria-label': 'title', ...register('title') }}\n          error={errors.title !== undefined}\n          helperText={errors.title?.message}\n        />\n        <TextField\n          label=\"Description\"\n          variant={variant}\n          defaultValue=\"\"\n          inputProps={{\n            'aria-label': 'description',\n            ...register('description'),\n          }}\n          error={errors.description !== undefined}\n          helperText={errors.description?.message}\n        />\n        <TextField\n          label=\"Visibility\"\n          select\n          variant={variant}\n          defaultValue={defaultValues?.visibility ?? 'PRIVATE'}\n          inputProps={{ 'aria-label': 'visibility', ...register('visibility') }}\n          error={errors.visibility !== undefined}\n          helperText={errors.visibility?.message}\n        >\n          <MenuItem value=\"PRIVATE\">Private</MenuItem>\n          <MenuItem value=\"PUBLIC\">Public</MenuItem>\n        </TextField>\n      </div>\n\n      <FormProvider {...formMethods}>\n        <Virtuoso\n          useWindowScroll\n          data={fields}\n          computeItemKey={(index) => fields[index].key}\n          itemContent={(index) => (\n            <WrappedCardTile\n              // Ideally, spacing would be handled by the gap CSS property.\n              // However, react-virtuoso does not support this.\n              className={index > 0 ? classes.editCardTileContainer : undefined}\n              index={index}\n              variant=\"outlined\"\n              removeDisabled={fields.length <= 1}\n              moveUpDisabled={index <= 0}\n              moveDownDisabled={index >= fields.length - 1}\n              onRemove={remove}\n              onMove={move}\n            />\n          )}\n        />\n      </FormProvider>\n\n      <Button\n        variant=\"outlined\"\n        fullWidth\n        startIcon={<Add />}\n        onClick={() => append({ sides: [{ text: '' }, { text: '' }] })}\n      >\n        Add card\n      </Button>\n      <div className={classes.saveButtonContainer}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import {\n  Backdrop,\n  CircularProgress,\n  Container,\n  Snackbar,\n} from '@material-ui/core';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { autoHideDuration } from '../../common/constants/snackbar';\nimport EditDeckForm from '../components/edit-deck-form';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './add-deck.page.styles';\n\nexport default function AddDeckPage() {\n  const classes = useStyles();\n\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n\n  const [showSnackbar, setShowsSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  return (\n    <>\n      <Backdrop open={submitting} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Container>\n        <EditDeckForm\n          variant=\"outlined\"\n          defaultValues={{\n            title: '',\n            description: '',\n            visibility: 'PRIVATE',\n            cards: [{ sides: [{ text: '' }, { text: '' }] }],\n          }}\n          onSubmit={(value) => {\n            setSubmitting(true);\n            decksService\n              .create({ tags: [], ...value })\n              .then(() => history.goBack())\n              .catch(() => {\n                setSnackbarMessage('Failed to save deck.');\n                setShowsSnackbar(true);\n                setSubmitting(false);\n              });\n          }}\n        />\n      </Container>\n      <Snackbar\n        open={showSnackbar}\n        message={snackbarMessage}\n        autoHideDuration={autoHideDuration}\n        onClose={() => setShowsSnackbar(false)}\n      />\n    </>\n  );\n}\n"],"sourceRoot":""}