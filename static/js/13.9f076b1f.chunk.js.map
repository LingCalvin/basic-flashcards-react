{"version":3,"sources":["common/hooks/use-unique-id.tsx","common/components/text-field.tsx","common/constants/snackbar.ts","auth/components/form.styles.tsx","../node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","auth/components/change-password-form.tsx","auth/pages/account-settings.page.styles.tsx","auth/pages/account-settings.page.tsx"],"names":["uniqueIdNumber","useUniqueId","useRef","current","TextField","props","id","autoHideDuration","useStyles","makeStyles","theme","form","display","flexDirection","gap","spacing","submitOrAltRow","justifyContent","alignItems","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","children","_props$disableReactTr","disableReactTree","_props$mouseEvent","mouseEvent","onClickAway","_props$touchEvent","touchEvent","movedRef","React","nodeRef","activatedRef","syntheticEventRef","setTimeout","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","ref","handleClickAway","useEventCallback","event","insideReactTree","document","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","indexOf","ownerDocument","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","doc","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","SnackbarContent","action","classes","className","message","_props$role","role","other","_objectWithoutProperties","Paper","_extends","square","elevation","clsx","root","withStyles","emphasis","palette","type","backgroundColor","emphasize","background","default","typography","body2","_defineProperty","color","getContrastText","flexWrap","padding","borderRadius","shape","flexGrow","breakpoints","up","minWidth","marginLeft","paddingLeft","marginRight","name","Snackbar","_props$anchorOrigin","anchorOrigin","vertical","horizontal","_props$autoHideDurati","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","enter","duration","enteringScreen","exit","leavingScreen","TransitionProps","timerAutoHide","_React$useState","exited","setExited","handleClose","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","handlePause","handleResume","window","concat","capitalize","appear","in","createChainedFunction","timeout","direction","top1","top","bottom1","bottom","right","left","top3","bottom3","right3","left3","center","transform","zIndex","snackbar","position","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip","schema","yup","currentPassword","label","required","newPassword","min","confirmNewPassword","oneOf","ChangePasswordForm","variant","onSubmit","useForm","resolver","yupResolver","errors","formState","handleSubmit","register","noValidate","inputProps","error","undefined","helperText","style","Button","avatar","height","width","avatarText","fontSize","generalInfo","section","subsection","AccountSettings","credentials","useContext","CredentialsContext","useState","showSnackbar","setShowSnackbar","snackbarMessage","setSnackbarMessage","Typography","typographyClassName","username","component","toLocaleUpperCase","value","authService","changePassword","catch","e","response","status"],"mappings":"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","file":"static/js/13.9f076b1f.chunk.js","sourcesContent":["import { useRef } from 'react';\n\nlet uniqueIdNumber = 0;\n\nexport default function useUniqueId() {\n  const uniqueId = useRef(`unique-id-${uniqueIdNumber++}`);\n  return uniqueId.current;\n}\n","import {\n  TextField as MuiTextField,\n  TextFieldProps as MuiTextFieldProps,\n} from '@material-ui/core';\nimport useUniqueId from '../hooks/use-unique-id';\n\nexport interface TextFieldProps extends Omit<MuiTextFieldProps, 'label'> {\n  label?: string;\n}\n\nexport default function TextField(props: TextFieldProps) {\n  const id = useUniqueId();\n  return <MuiTextField id={id} {...props} />;\n}\n","export const autoHideDuration = 6000;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  submitOrAltRow: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nexport default useStyles;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event) {\n  return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$disableReactTr = props.disableReactTree,\n      disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      onClickAway = props.onClickAway,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var activatedRef = React.useRef(false);\n  var syntheticEventRef = React.useRef(false);\n  React.useEffect(function () {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(function () {\n      activatedRef.current = true;\n    }, 0);\n    return function () {\n      activatedRef.current = false;\n    };\n  }, []); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviours like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  var handleClickAway = useEventCallback(function (event) {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    var insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!activatedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.\n      var doc = ownerDocument(nodeRef.current);\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  var createHandleSynthetic = function createHandleSynthetic(handlerName) {\n    return function (event) {\n      syntheticEventRef.current = true;\n      var childrenPropsHandler = children.props[handlerName];\n\n      if (childrenPropsHandler) {\n        childrenPropsHandler(event);\n      }\n    };\n  };\n\n  var childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      var doc = ownerDocument(nodeRef.current);\n\n      var handleTouchMove = function handleTouchMove() {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Button } from '@material-ui/core';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport TextField, { TextFieldProps } from '../../common/components/text-field';\nimport useStyles from './form.styles';\n\nexport type FormValues = {\n  currentPassword: string;\n  newPassword: string;\n  confirmNewPassword: string;\n};\n\nconst schema = yup.object().shape({\n  currentPassword: yup.string().label('Current password').required(),\n  newPassword: yup.string().label('New password').required().min(8),\n  confirmNewPassword: yup\n    .string()\n    .label('Confirm password')\n    .required()\n    .oneOf(\n      [yup.ref('newPassword'), null],\n      'Confirm new password must match new password must match'\n    ),\n});\n\ninterface ChangePasswordFormProps {\n  variant?: TextFieldProps['variant'];\n  onSubmit: SubmitHandler<FormValues>;\n}\n\nexport default function ChangePasswordForm({\n  variant,\n  onSubmit,\n}: ChangePasswordFormProps) {\n  const classes = useStyles();\n  const {\n    formState: { errors },\n    handleSubmit,\n    register,\n  } = useForm<FormValues>({ resolver: yupResolver(schema) });\n\n  return (\n    <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\n      <TextField\n        label=\"Current password\"\n        type=\"password\"\n        variant={variant}\n        inputProps={{ ...register('currentPassword') }}\n        error={errors.currentPassword !== undefined}\n        helperText={errors.currentPassword?.message}\n      />\n      <TextField\n        label=\"New password\"\n        type=\"password\"\n        variant={variant}\n        inputProps={{ ...register('newPassword') }}\n        error={errors.newPassword !== undefined}\n        helperText={errors.newPassword?.message}\n      />\n      <TextField\n        label=\"Confirm new password\"\n        type=\"password\"\n        variant={variant}\n        inputProps={{ ...register('confirmNewPassword') }}\n        error={errors.confirmNewPassword !== undefined}\n        helperText={errors.confirmNewPassword?.message}\n      />\n      <div style={{ marginLeft: 'auto' }}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  avatar: {\n    height: theme.spacing(16),\n    width: theme.spacing(16),\n  },\n  avatarText: {\n    fontSize: '6rem',\n  },\n  generalInfo: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  section: {\n    padding: theme.spacing(2),\n  },\n  subsection: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import { Paper, Snackbar, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useContext, useState } from 'react';\nimport Avatar from '../../common/components/avatar';\nimport { autoHideDuration } from '../../common/constants/snackbar';\nimport ChangePasswordForm from '../components/change-password-form';\nimport CredentialsContext from '../contexts/credentials.context';\nimport { authService } from '../services/auth.service';\nimport useStyles from './account-settings.page.styles';\n\nexport default function AccountSettings() {\n  const classes = useStyles();\n  const credentials = useContext(CredentialsContext);\n\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  return (\n    <main className={classes.root}>\n      <Typography variant=\"h1\">Account Settings</Typography>\n      <Paper className={clsx(classes.section, classes.generalInfo)}>\n        <Avatar\n          className={classes.avatar}\n          typographyClassName={classes.avatarText}\n          username={credentials?.username}\n        />\n        <Typography variant=\"h2\" component=\"div\">\n          {credentials?.username.toLocaleUpperCase()}\n        </Typography>\n      </Paper>\n      <Paper component=\"section\" className={classes.section}>\n        <Typography variant=\"h2\">Security</Typography>\n        <section className={classes.subsection}>\n          <Typography variant=\"h3\">Change password</Typography>\n          <ChangePasswordForm\n            variant=\"outlined\"\n            onSubmit={(value) =>\n              authService\n                .changePassword(value.currentPassword, value.newPassword)\n                .catch((e) => {\n                  if (e?.response?.status === 403) {\n                    setSnackbarMessage(\n                      'Failed to change password. Incorrect password.'\n                    );\n                  } else {\n                    setSnackbarMessage(\n                      'An error has occurred. Failed to change password.'\n                    );\n                  }\n                  setShowSnackbar(true);\n                })\n            }\n          />\n        </section>\n      </Paper>\n      <Snackbar\n        open={showSnackbar}\n        message={snackbarMessage}\n        autoHideDuration={autoHideDuration}\n        onClose={() => setShowSnackbar(false)}\n      />\n    </main>\n  );\n}\n"],"sourceRoot":""}