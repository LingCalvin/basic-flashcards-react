{"version":3,"sources":["deck/pages/add-deck.page.tsx"],"names":["AddDeckPage","classes","useStyles","useState","title","setTitle","description","setDescription","visibility","setVisibility","sides","text","cards","setCards","submitting","setSubmitting","history","useHistory","showSnackbar","setShowsSnackbar","snackbarMessage","setSnackbarMessage","open","className","backdrop","color","onTitleChange","onDescriptionChange","onChangeVisibility","onCardsChange","onSubmit","decksService","create","tags","then","goBack","catch","message","autoHideDuration","onClose"],"mappings":"iSAee,SAASA,IACtB,IAAMC,EAAUC,cAChB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAoCJ,mBAAyB,WAA7D,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAiB,CACzC,CAAEO,MAAO,CAAC,CAAEC,KAAM,IAAM,CAAEA,KAAM,QADlC,mBAAOC,EAAP,KAAcC,EAAd,KAGA,EAAoCV,oBAAS,GAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACMC,EAAUC,cAEhB,EAAyCd,oBAAS,GAAlD,mBAAOe,EAAP,KAAqBC,EAArB,KACA,EAA8ChB,mBAAS,IAAvD,mBAAOiB,EAAP,KAAwBC,EAAxB,KAEA,OACE,qCACE,cAAC,IAAD,CAAUC,KAAMR,EAAYS,UAAWtB,EAAQuB,SAA/C,SACE,cAAC,IAAD,CAAkBC,MAAM,cAE1B,cAAC,IAAD,UACE,cAAC,IAAD,CACErB,MAAOA,EACPE,YAAaA,EACbE,WAAYA,EACZI,MAAOA,EACPc,cAAerB,EACfsB,oBAAqBpB,EACrBqB,mBAAoBnB,EACpBoB,cAAehB,EACfiB,SAAU,WACRf,GAAc,GACdgB,IACGC,OAAO,CAAE5B,QAAOE,cAAaE,aAAYI,QAAOqB,KAAM,KACtDC,MAAK,kBAAMlB,EAAQmB,YACnBC,OAAM,WACLf,EAAmB,wBACnBF,GAAiB,GACjBJ,GAAc,WAKxB,cAAC,IAAD,CACEO,KAAMJ,EACNmB,QAASjB,EACTkB,iBAAkBA,IAClBC,QAAS,kBAAMpB,GAAiB","file":"static/js/17.1bb60eae.chunk.js","sourcesContent":["import {\n  Backdrop,\n  CircularProgress,\n  Container,\n  Snackbar,\n} from '@material-ui/core';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Card from '../../card/interfaces/card';\nimport { autoHideDuration } from '../../common/constants/snackbar';\nimport EditDeckForm from '../components/edit-deck-form';\nimport { decksService } from '../services/decks.service';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport useStyles from './add-deck.page.styles';\n\nexport default function AddDeckPage() {\n  const classes = useStyles();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [visibility, setVisibility] = useState<DeckVisibility>('PRIVATE');\n  const [cards, setCards] = useState<Card[]>([\n    { sides: [{ text: '' }, { text: '' }] },\n  ]);\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n\n  const [showSnackbar, setShowsSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  return (\n    <>\n      <Backdrop open={submitting} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Container>\n        <EditDeckForm\n          title={title}\n          description={description}\n          visibility={visibility}\n          cards={cards}\n          onTitleChange={setTitle}\n          onDescriptionChange={setDescription}\n          onChangeVisibility={setVisibility}\n          onCardsChange={setCards}\n          onSubmit={() => {\n            setSubmitting(true);\n            decksService\n              .create({ title, description, visibility, cards, tags: [] })\n              .then(() => history.goBack())\n              .catch(() => {\n                setSnackbarMessage('Failed to save deck.');\n                setShowsSnackbar(true);\n                setSubmitting(false);\n              });\n          }}\n        />\n      </Container>\n      <Snackbar\n        open={showSnackbar}\n        message={snackbarMessage}\n        autoHideDuration={autoHideDuration}\n        onClose={() => setShowsSnackbar(false)}\n      />\n    </>\n  );\n}\n"],"sourceRoot":""}