{"version":3,"sources":["deck/services/decks.service.ts","common/components/loadable-component.styles.tsx","common/components/loadable-component.tsx","common/components/link.tsx","deck/components/card-list.styles.tsx","deck/components/card-list.tsx","card/components/card-side.styles.tsx","card/components/card-side.tsx","card/components/card.styles.tsx","card/components/card.tsx","deck/components/deck-stack.styles.tsx","deck/components/deck-stack.tsx","deck/components/deck-stack-controls.styles.tsx","deck/components/deck-stack-controls.tsx","deck/pages/deck.page.styles.tsx","deck/pages/deck.page.tsx"],"names":["decksService","http","a","title","description","visibility","cards","this","post","authorId","authService","getCurrentUser","map","sides","frontText","text","backText","data","id","get","findOneDeckResponseToDeck","params","decks","count","put","cardId","delete","apiClient","card","tags","useStyles","makeStyles","root","display","justifyContent","LoadableComponent","loading","children","className","delay","classes","useState","showProgress","setShowProgress","useEffect","timeout","setTimeout","clearTimeout","clsx","CircularProgress","Link","to","color","component","RouterLink","theme","gridTemplateColumns","columnGap","spacing","gap","CardList","Fragment","Typography","Divider","orientation","JSON","stringify","flexDirection","content","textAlign","padding","typography","fontSize","h5","CardSide","CardContent","gridTemplateAreas","transformStyle","cardFlipTransition","transition","flip","transform","cardSide","gridArea","backfaceVisibility","cardBack","Card","showBack","onFlip","onClick","height","width","hiddenCard","DeckStack","activeIndex","showCardBack","onFlipCard","activeCard","unmount","setUnmount","useLayoutEffect","alignItems","positionIndicator","DeckStackControls","currentIndex","numberOfCards","onBack","onForward","IconButton","aria-label","disabled","ArrowBack","variant","align","ArrowForward","deckStack","maxWidth","deckStackContainer","section","progressBar","tagList","flexWrap","DeckPage","activeCardIndex","setActiveCardIndex","setShowCardBack","deckId","useParams","setLoading","deck","setDeck","findOne","then","finally","sortedTags","useMemo","sort","state","length","Slider","value","max","valueLabelFormat","onChange","_event","undefined","tag","Chip","label"],"mappings":"gPAmEaA,EAAe,IA3D5B,WACE,WAAoBC,GAAsB,yBAAtBA,OADtB,iFAGE,uCAAAC,EAAA,6DAAeC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,YAAaC,EAAnC,EAAmCA,WAAYC,EAA/C,EAA+CA,MAA/C,SACyBC,KAAKN,KAAKO,KAAK,SAAU,CAC9CC,SAAUC,IAAYC,iBACtBR,QACAC,cACAC,aACAC,MAAOA,EAAMM,KACX,gCAAGC,MAAH,SAA2D,CACzDC,UADF,KAAaC,KAEXC,SAFF,KAAkCD,WAPxC,uBACUE,EADV,EACUA,KADV,kBAaSA,GAbT,gDAHF,mHAmBE,WAAcC,GAAd,iBAAAhB,EAAA,sEACyBK,KAAKN,KAAKkB,IAAV,iBAA6CD,IADtE,uBACUD,EADV,EACUA,KADV,kBAESG,EAA0BH,IAFnC,gDAnBF,mHAwBE,WACEI,GADF,iBAAAnB,EAAA,sEAGyBK,KAAKN,KAAKkB,IAAV,SAA8C,CACnEE,WAJJ,uBAGUJ,EAHV,EAGUA,KAHV,kBAOS,CACLK,MAAOL,EAAKK,MAAMV,IAAIQ,GACtBG,MAAON,EAAKM,QAThB,gDAxBF,kHAqCE,yCAAArB,EAAA,6DAAegB,EAAf,EAAeA,GAAIf,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WAAYC,EAAnD,EAAmDA,MAAnD,SACyBC,KAAKN,KAAKuB,IAAV,iBAAwBN,GAAM,CACnDT,SAAUC,IAAYC,iBACtBR,QACAC,cACAC,aACAC,MAAOA,EAAMM,KACX,gBAAOa,EAAP,EAAGP,GAAH,gBAAeL,MAAf,SAAuE,CACrEK,GAAIO,EACJX,UAFF,KAAyBC,KAGvBC,SAHF,KAA8CD,WAPpD,uBACUE,EADV,EACUA,KADV,kBAcSA,GAdT,gDArCF,kHAsDE,WAAaC,GAAb,SAAAhB,EAAA,+EACSK,KAAKN,KAAKyB,OAAV,iBAA2BR,KADpC,gDAtDF,8DA2D4B,CAAiBS,KAE7C,SAASP,EAA0BH,GAEjC,MAAO,CACLC,GAFuDD,EAAjDC,GAGNT,SAHuDQ,EAA7CR,SAIVN,MAJuDc,EAAnCd,MAKpBC,YALuDa,EAA5Bb,YAM3BC,WANuDY,EAAfZ,WAOxCC,MAAOW,EAAKX,MAAMM,KAAI,SAACgB,GAAD,MAAW,CAC/BV,GAAIU,EAAKV,GACTL,MAAO,CAAC,CAAEE,KAAMa,EAAKd,WAAa,CAAEC,KAAMa,EAAKZ,eAEjDa,KAAM,M,+GCxEKC,EAPGC,YAAW,CAC3BC,KAAM,CACJC,QAAS,OACTC,eAAgB,Y,OCOL,SAASC,EAAT,GAKa,IAJ1BC,EAIyB,EAJzBA,QACAC,EAGyB,EAHzBA,SACAC,EAEyB,EAFzBA,UAEyB,IADzBC,aACyB,MADjB,IACiB,EACnBC,EAAUV,IAEhB,EAAwCW,mBAASF,GAAS,GAA1D,mBAAOG,EAAP,KAAqBC,EAArB,KASA,OAPAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,GAAgB,KACfJ,GACH,OAAO,kBAAMQ,aAAaF,MACzB,CAACN,IAEGH,EACL,qBAAKE,UAAWU,YAAKR,EAAQR,KAAMM,GAAnC,SACGI,GAAgB,cAACO,EAAA,EAAD,MAGnB,mCAAGZ,M,iCClCP,8DAae,SAASa,EAAT,GAAmD,IAAnCC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,MAAOf,EAAuB,EAAvBA,SACxC,OACE,cAAC,IAAD,CAASgB,UAAWC,IAAYH,GAAIA,EAAIC,MAAOA,EAA/C,SACGf,M,2LCLQP,EATGC,aAAW,SAACwB,GAAD,MAAY,CACvCvB,KAAM,CACJC,QAAS,OACTuB,oBAAqB,eACrBC,UAAWF,EAAMG,QAAQ,GACzBC,IAAKJ,EAAMG,QAAQ,Q,OCER,SAASE,EAAT,GAA6C,IAAzBtD,EAAwB,EAAxBA,MAC3BkC,EAAUV,IAChB,OACE,qBAAKQ,UAAWE,EAAQR,KAAxB,SACG1B,EAAMM,KAAI,SAACgB,GAAD,aACT,eAAC,IAAMiC,SAAP,WACE,cAACC,EAAA,EAAD,UAAalC,EAAKf,MAAM,GAAGE,OAC3B,cAACgD,EAAA,EAAD,CAASC,YAAY,aACrB,cAACF,EAAA,EAAD,UAAalC,EAAKf,MAAM,GAAGE,SAH7B,UAAqBa,EAAKV,UAA1B,QAAgC+C,KAAKC,UAAUtC,S,6BCMxCE,EAlBGC,aAAW,SAACwB,GAAD,MAAY,CACvCvB,KAAM,CACJC,QAAS,OACTkC,cAAe,SACfjC,eAAgB,UAElBkC,QAAS,CACPnC,QAAS,OACTkC,cAAe,SACfjC,eAAgB,SAChBmC,UAAW,SACXC,QAASf,EAAMG,QAAQ,IAEzBa,WAAY,CACVC,SAAUjB,EAAMgB,WAAWE,GAAGD,cCPnB,SAASE,EAAT,GAAuD,IAAnC3D,EAAkC,EAAlCA,KAAMuB,EAA4B,EAA5BA,UACjCE,EAAUV,IAChB,OACE,cAAC,IAAD,CAASQ,UAAWU,YAAKR,EAAQR,KAAMM,GAAvC,SACE,cAACqC,EAAA,EAAD,CAAarC,UAAWE,EAAQ4B,QAAhC,SACE,cAACN,EAAA,EAAD,CAAYxB,UAAWE,EAAQ+B,WAA/B,SAA4CxD,QCZpD,IAqBee,EArBGC,YAAW,CAC3BC,KAAM,CACJC,QAAS,OACT2C,kBAAmB,SACnBC,eAAgB,eAElBC,mBAAoB,CAClBC,WAAY,kBAEdC,KAAM,CACJC,UAAW,mBAEbC,SAAU,CACRC,SAAU,OACVC,mBAAoB,UAEtBC,SAAU,CACRJ,UAAW,qBCPA,SAASK,EAAT,GAMA,IALbxE,EAKY,EALZA,UACAE,EAIY,EAJZA,SACAuE,EAGY,EAHZA,SACAjD,EAEY,EAFZA,UACAkD,EACY,EADZA,OAEMhD,EAAUV,IAChB,OACE,sBACEQ,UAAWU,YACTR,EAAQR,KACRQ,EAAQsC,mBACRS,GAAY/C,EAAQwC,KACpB1C,GAEFmD,QAASD,EAPX,UASE,cAACd,EAAD,CAAUpC,UAAWE,EAAQ0C,SAAUnE,KAAMD,IAC7C,cAAC4D,EAAD,CACEpC,UAAWU,YAAKR,EAAQ0C,SAAU1C,EAAQ6C,UAC1CtE,KAAMC,OC/Bd,IAUec,EAVGC,YAAW,CAC3BH,KAAM,CACJ8D,OAAQ,OACRC,MAAO,QAETC,WAAY,CACV3D,QAAS,UCKE,SAAS4D,EAAT,GAMK,IALlBvF,EAKiB,EALjBA,MACAwF,EAIiB,EAJjBA,YACAC,EAGiB,EAHjBA,aACAzD,EAEiB,EAFjBA,UACA0D,EACiB,EADjBA,WAEMC,EAAa3F,EAAMwF,GACnBtD,EAAUV,IAGhB,EAA8BW,oBAAS,GAAvC,mBAAOyD,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,2BAAgB,WACdD,GAAW,KACV,CAACL,IAEJM,2BAAgB,WACVF,GACFC,GAAW,KAEZ,CAACD,IAECD,EAiBH,qBAAK3D,UAAWA,EAAhB,UACI4D,GACA,cAAC,EAAD,CACE5D,UAAWE,EAAQZ,KACnBd,UAAWmF,EAAWpF,MAAM,GAAGE,KAC/BC,SAAUiF,EAAWpF,MAAM,GAAGE,KAC9BwE,SAAUQ,EACVP,OAAQQ,MAtBZ,qBAAK1D,UAAWA,EAAhB,UACI4D,GACA,cAAC,EAAD,CACE5D,UAAWE,EAAQZ,KACnBd,UAAU,GACVE,SAAS,GACTuE,UAAU,EACVC,OAAQ,iB,+BCjCL1D,EAVGC,YAAW,CAC3BC,KAAM,CACJC,QAAS,OACToE,WAAY,UAEdC,kBAAmB,CACjBX,MAAO,UCGI,SAASY,EAAT,GAKa,IAJ1BC,EAIyB,EAJzBA,aACAC,EAGyB,EAHzBA,cACAC,EAEyB,EAFzBA,OACAC,EACyB,EADzBA,UAEMnE,EAAUV,IAChB,OACE,sBAAKQ,UAAWE,EAAQR,KAAxB,UACE,cAAC4E,EAAA,EAAD,CACEC,aAAW,gBACXpB,QAASiB,EACTI,SAA2B,IAAjBN,GAAwC,IAAlBC,EAHlC,SAKE,cAACM,EAAA,EAAD,MAEF,8BACE,cAACjD,EAAA,EAAD,CACEkD,QAAQ,YACR3D,UAAU,OACV4D,MAAM,SACN3E,UAAWE,EAAQ8D,kBAJrB,mBAMEG,EAAgB,EAAID,EAAe,EAAI,EANzC,YAOIC,OAGN,cAACG,EAAA,EAAD,CACEC,aAAW,YACXpB,QAASkB,EACTG,SAAUN,IAAiBC,EAAgB,GAAuB,IAAlBA,EAHlD,SAKE,cAACS,EAAA,EAAD,S,aCROpF,EAjCGC,aAAW,SAACwB,GAAD,MAAY,CACvCvB,KAAM,CACJC,QAAS,OACTkC,cAAe,SACfR,IAAKJ,EAAMG,QAAQ,GACnBY,QAASf,EAAMG,QAAQ,IAEzByD,UAAW,CACTzB,OAAQ,IACRC,MAAO,OACPyB,SAAU,KAEZC,mBAAoB,CAClBpF,QAAS,OACTkC,cAAe,SACfkC,WAAY,UAEdiB,QAAS,CACPrF,QAAS,OACTkC,cAAe,SACfR,IAAKJ,EAAMG,QAAQ,IAErB6D,YAAa,CACX5B,MAAO,OACPyB,SAAU,KAEZI,QAAS,CACPvF,QAAS,OACTwF,SAAU,OACV9D,IAAKJ,EAAMG,QAAQ,SCnBR,SAASgE,IACtB,IAAMlF,EAAUV,IAChB,EAA8CW,mBAAS,GAAvD,mBAAOkF,EAAP,KAAwBC,EAAxB,KACA,EAAwCnF,oBAAS,GAAjD,mBAAOsD,EAAP,KAAqB8B,EAArB,KACYC,EAAWC,cAAf7G,GACR,EAA8BuB,oBAAS,GAAvC,mBAAOL,EAAP,KAAgB4F,EAAhB,KAEA,EAAwBvF,mBAAsB,MAA9C,mBAAOwF,EAAP,KAAaC,EAAb,KAEAtF,qBAAU,WACRoF,GAAW,GACXhI,IACGmI,QAAQL,GACRM,MAAK,SAACH,GAAD,OAAUC,EAAQD,MACvBI,SAAQ,kBAAML,GAAW,QAC3B,CAACF,IAGJ1B,2BAAgB,WACdyB,GAAgB,KACf,CAACF,IAGJ,IAAMW,EAAaC,mBACjB,kBAAW,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMpG,MAAO,YAAIoG,EAAKpG,MAAM2G,OAAS,KAC5C,QAACP,QAAD,IAACA,OAAD,EAACA,EAAMpG,OAGT,OACE,8BACE,qBAAKS,UAAWE,EAAQR,KAAxB,SAEE,cAAC,IAAD,CAAmBI,QAASA,EAA5B,SACG6F,GACC,qCACE,gCACE,cAACnE,EAAA,EAAD,CAAYkD,QAAQ,KAApB,SAA0BiB,EAAK9H,QAC/B,eAAC2D,EAAA,EAAD,CAAYkD,QAAQ,YAAY3D,UAAU,MAA1C,eACK,IACH,cAAC,IAAD,CAAMF,GAAE,iBAAY8E,EAAKxH,UAAY2C,MAAM,UAA3C,SACG6E,EAAKxH,iBAIZ,yBAAS6B,UAAWE,EAAQ8E,QAA5B,SACE,sBAAKhF,UAAWE,EAAQ6E,mBAAxB,UACE,cAACxB,EAAD,CACEvD,UAAWE,EAAQ2E,UACnB7G,MAAO2H,EAAK3H,MACZwF,YAAa6B,EACb5B,aAAcA,EACdC,WAAY,kBAAM6B,GAAgB,SAACY,GAAD,OAAYA,QAEhD,cAAClC,EAAD,CACEC,aAAcmB,EACdlB,cAAewB,EAAK3H,MAAMoI,OAC1BhC,OAAQ,WACNkB,GAAmB,SAACa,GAAD,OAAWA,EAAQ,MAExC9B,UAAW,WACTiB,GAAmB,SAACa,GAAD,OAAWA,EAAQ,QAG1C,cAACE,EAAA,EAAD,CACE9B,aAAW,sBACXvE,UAAWE,EAAQ+E,YACnBqB,MAA6B,IAAtBX,EAAK3H,MAAMoI,OAAef,EAAkB,EACnDkB,IAA2B,IAAtBZ,EAAK3H,MAAMoI,OAAeT,EAAK3H,MAAMoI,OAAS,EAAI,EACvDI,iBAAkB,SAACF,GAAD,OAAWA,EAAQ,GACrCG,SACEd,EAAK3H,MAAMoI,OAAS,EAChB,SAACM,EAAQJ,GAAT,OAAmBhB,EAAmBgB,SACtCK,SAMZ,0BAAS3G,UAAWE,EAAQ8E,QAA5B,UACE,cAACxD,EAAA,EAAD,CAAYkD,QAAQ,KAApB,kBACA,qBAAK1E,UAAWE,EAAQgF,QAAxB,SACGc,EAAW1H,KAAI,SAACsI,GAAD,OACd,cAACC,EAAA,EAAD,CAAgBC,MAAOF,EAAKlC,QAAQ,YAAzBkC,WAKjB,0BAAS5G,UAAWE,EAAQ8E,QAA5B,UACE,cAACxD,EAAA,EAAD,CAAYkD,QAAQ,KAApB,mBACA,cAACpD,EAAD,CAAUtD,MAAO2H,EAAK3H","file":"static/js/17.af7ce483.chunk.js","sourcesContent":["import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\nexport default useStyles;\n","import { CircularProgress } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ReactNode, useEffect, useState } from 'react';\nimport useStyles from './loadable-component.styles';\n\ninterface LoadableComponentProps {\n  loading?: boolean;\n  children: ReactNode;\n  className?: string;\n  delay?: number;\n}\n\nexport default function LoadableComponent({\n  loading,\n  children,\n  className,\n  delay = 300,\n}: LoadableComponentProps) {\n  const classes = useStyles();\n\n  const [showProgress, setShowProgress] = useState(delay <= 0);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowProgress(true);\n    }, delay);\n    return () => clearTimeout(timeout);\n  }, [delay]);\n\n  return loading ? (\n    <div className={clsx(classes.root, className)}>\n      {showProgress && <CircularProgress />}\n    </div>\n  ) : (\n    <>{children}</>\n  );\n}\n","import { Link as MuiLink, LinkProps as MuiLinkProps } from '@material-ui/core';\nimport { ReactNode } from 'react';\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\ninterface LinkProps {\n  to: RouterLinkProps['to'];\n  color?: MuiLinkProps['color'];\n  children?: ReactNode;\n}\n\nexport default function Link({ to, color, children }: LinkProps) {\n  return (\n    <MuiLink component={RouterLink} to={to} color={color}>\n      {children}\n    </MuiLink>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '2fr auto 3fr',\n    columnGap: theme.spacing(2),\n    gap: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Divider, Typography } from '@material-ui/core';\nimport React from 'react';\nimport Card from '../../card/interfaces/card';\nimport useStyles from './card-list.styles';\n\ninterface CardListProps {\n  cards: Card[];\n}\n\nexport default function CardList({ cards }: CardListProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {cards.map((card) => (\n        <React.Fragment key={card.id ?? JSON.stringify(card)}>\n          <Typography>{card.sides[0].text}</Typography>\n          <Divider orientation=\"vertical\" />\n          <Typography>{card.sides[1].text}</Typography>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: theme.spacing(3),\n  },\n  typography: {\n    fontSize: theme.typography.h5.fontSize,\n  },\n}));\n\nexport default useStyles;\n","import { Card as MuiCard, CardContent, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './card-side.styles';\n\ninterface CardSideProps {\n  text: string;\n  className?: string;\n}\n\nexport default function CardSide({ text, className }: CardSideProps) {\n  const classes = useStyles();\n  return (\n    <MuiCard className={clsx(classes.root, className)}>\n      <CardContent className={classes.content}>\n        <Typography className={classes.typography}>{text}</Typography>\n      </CardContent>\n    </MuiCard>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    gridTemplateAreas: '\"main\"',\n    transformStyle: 'preserve-3d',\n  },\n  cardFlipTransition: {\n    transition: 'transform 0.3s',\n  },\n  flip: {\n    transform: 'rotateX(180deg)',\n  },\n  cardSide: {\n    gridArea: 'main',\n    backfaceVisibility: 'hidden',\n  },\n  cardBack: {\n    transform: 'rotateX(180deg)',\n  },\n});\n\nexport default useStyles;\n","import clsx from 'clsx';\nimport CardSide from './card-side';\nimport useStyles from './card.styles';\n\ninterface CardProps {\n  frontText: string;\n  backText: string;\n  showBack: boolean;\n  className?: string;\n  onFlip: () => void;\n}\n\nexport default function Card({\n  frontText,\n  backText,\n  showBack,\n  className,\n  onFlip,\n}: CardProps) {\n  const classes = useStyles();\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        classes.cardFlipTransition,\n        showBack && classes.flip,\n        className\n      )}\n      onClick={onFlip}\n    >\n      <CardSide className={classes.cardSide} text={frontText} />\n      <CardSide\n        className={clsx(classes.cardSide, classes.cardBack)}\n        text={backText}\n      />\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  card: {\n    height: '100%',\n    width: '100%',\n  },\n  hiddenCard: {\n    display: 'none',\n  },\n});\n\nexport default useStyles;\n","import { useLayoutEffect, useState } from 'react';\nimport CardComponent from '../../card/components/card';\nimport Card from '../../card/interfaces/card';\nimport useStyles from './deck-stack.styles';\n\ninterface DeckStackProps {\n  cards: Card[];\n  activeIndex: number;\n  showCardBack: boolean;\n  className?: string;\n  onFlipCard: () => void;\n}\n\nexport default function DeckStack({\n  cards,\n  activeIndex,\n  showCardBack,\n  className,\n  onFlipCard,\n}: DeckStackProps) {\n  const activeCard = cards[activeIndex];\n  const classes = useStyles();\n\n  // Unmount the Card component each time the active card changes\n  const [unmount, setUnmount] = useState(false);\n\n  useLayoutEffect(() => {\n    setUnmount(true);\n  }, [activeIndex]);\n\n  useLayoutEffect(() => {\n    if (unmount) {\n      setUnmount(false);\n    }\n  }, [unmount]);\n\n  if (!activeCard) {\n    return (\n      <div className={className}>\n        {!unmount && (\n          <CardComponent\n            className={classes.card}\n            frontText=\"\"\n            backText=\"\"\n            showBack={false}\n            onFlip={() => {}}\n          />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      {!unmount && (\n        <CardComponent\n          className={classes.card}\n          frontText={activeCard.sides[0].text}\n          backText={activeCard.sides[1].text}\n          showBack={showCardBack}\n          onFlip={onFlipCard}\n        />\n      )}\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  positionIndicator: {\n    width: '10ch',\n  },\n});\n\nexport default useStyles;\n","import { IconButton, Typography } from '@material-ui/core';\nimport { ArrowBack, ArrowForward } from '@material-ui/icons';\nimport useStyles from './deck-stack-controls.styles';\n\ninterface DeckStackControlsProps {\n  currentIndex: number;\n  numberOfCards: number;\n  onBack: () => void;\n  onForward: () => void;\n}\n\nexport default function DeckStackControls({\n  currentIndex,\n  numberOfCards,\n  onBack,\n  onForward,\n}: DeckStackControlsProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <IconButton\n        aria-label=\"previous card\"\n        onClick={onBack}\n        disabled={currentIndex === 0 || numberOfCards === 0}\n      >\n        <ArrowBack />\n      </IconButton>\n      <div>\n        <Typography\n          variant=\"subtitle2\"\n          component=\"span\"\n          align=\"center\"\n          className={classes.positionIndicator}\n        >{`${\n          numberOfCards > 0 ? currentIndex + 1 : 0\n        }/${numberOfCards}`}</Typography>\n      </div>\n\n      <IconButton\n        aria-label=\"next card\"\n        onClick={onForward}\n        disabled={currentIndex === numberOfCards - 1 || numberOfCards === 0}\n      >\n        <ArrowForward />\n      </IconButton>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  deckStack: {\n    height: 280,\n    width: '100%',\n    maxWidth: 397,\n  },\n  deckStackContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  section: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  progressBar: {\n    width: '100%',\n    maxWidth: 400,\n  },\n  tagList: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(0.5),\n  },\n}));\n\nexport default useStyles;\n","import { Chip, Slider, Typography } from '@material-ui/core';\nimport { useEffect, useLayoutEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Link from '../../common/components/link';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport CardList from '../components/card-list';\nimport DeckStack from '../components/deck-stack';\nimport DeckStackControls from '../components/deck-stack-controls';\nimport Deck from '../interfaces/deck';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './deck.page.styles';\n\nexport default function DeckPage() {\n  const classes = useStyles();\n  const [activeCardIndex, setActiveCardIndex] = useState(0);\n  const [showCardBack, setShowCardBack] = useState(false);\n  const { id: deckId } = useParams<{ id: string }>();\n  const [loading, setLoading] = useState(true);\n\n  const [deck, setDeck] = useState<Deck | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    decksService\n      .findOne(deckId)\n      .then((deck) => setDeck(deck))\n      .finally(() => setLoading(false));\n  }, [deckId]);\n\n  // Make sure the front of the card is showing when moving to another\n  useLayoutEffect(() => {\n    setShowCardBack(false);\n  }, [activeCardIndex]);\n\n  // Alphabetize deck tags\n  const sortedTags = useMemo(\n    () => (deck?.tags ? [...deck.tags].sort() : []),\n    [deck?.tags]\n  );\n\n  return (\n    <div>\n      <div className={classes.root}>\n        {/* Deck */}\n        <LoadableComponent loading={loading}>\n          {deck && (\n            <>\n              <div>\n                <Typography variant=\"h1\">{deck.title}</Typography>\n                <Typography variant=\"subtitle1\" component=\"div\">\n                  by{' '}\n                  <Link to={`/users/${deck.authorId}`} color=\"inherit\">\n                    {deck.authorId}\n                  </Link>\n                </Typography>\n              </div>\n              <section className={classes.section}>\n                <div className={classes.deckStackContainer}>\n                  <DeckStack\n                    className={classes.deckStack}\n                    cards={deck.cards}\n                    activeIndex={activeCardIndex}\n                    showCardBack={showCardBack}\n                    onFlipCard={() => setShowCardBack((state) => !state)}\n                  />\n                  <DeckStackControls\n                    currentIndex={activeCardIndex}\n                    numberOfCards={deck.cards.length}\n                    onBack={() => {\n                      setActiveCardIndex((state) => state - 1);\n                    }}\n                    onForward={() => {\n                      setActiveCardIndex((state) => state + 1);\n                    }}\n                  />\n                  <Slider\n                    aria-label=\"current card slider\"\n                    className={classes.progressBar}\n                    value={deck.cards.length !== 1 ? activeCardIndex : 1}\n                    max={deck.cards.length !== 1 ? deck.cards.length - 1 : 1}\n                    valueLabelFormat={(value) => value + 1}\n                    onChange={\n                      deck.cards.length > 1\n                        ? (_event, value) => setActiveCardIndex(value as number)\n                        : undefined\n                    }\n                  />\n                </div>\n              </section>\n              {/* Tag list */}\n              <section className={classes.section}>\n                <Typography variant=\"h2\">Tags</Typography>\n                <div className={classes.tagList}>\n                  {sortedTags.map((tag) => (\n                    <Chip key={tag} label={tag} variant=\"outlined\" />\n                  ))}\n                </div>\n              </section>\n              {/* Term list */}\n              <section className={classes.section}>\n                <Typography variant=\"h2\">Terms</Typography>\n                <CardList cards={deck.cards} />\n              </section>\n            </>\n          )}\n        </LoadableComponent>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}