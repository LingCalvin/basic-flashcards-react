{"version":3,"sources":["auth/components/form.styles.tsx","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","auth/components/login-form.tsx","auth/pages/login.page.styles.tsx","auth/pages/login.page.tsx"],"names":["useStyles","makeStyles","theme","form","display","flexDirection","gap","spacing","submitOrAltRow","justifyContent","alignItems","createSvgIcon","React","d","defaultIconMapping","success","SuccessOutlinedIcon","fontSize","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","Alert","props","ref","action","children","classes","className","_props$closeText","closeText","color","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","_props$variant","variant","other","_objectWithoutProperties","Paper","_extends","square","elevation","clsx","root","concat","capitalize","message","IconButton","size","title","onClick","withStyles","getColor","palette","type","darken","lighten","getBackgroundColor","typography","body2","borderRadius","shape","backgroundColor","padding","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","marginLeft","paddingLeft","name","schema","yup","username","label","required","password","LoginForm","onSubmit","useForm","resolver","yupResolver","errors","formState","register","handleSubmit","TextField","inputProps","undefined","helperText","Button","component","Link","to","routes","registration","content","LoginPage","credentials","useContext","CredentialsContext","useState","serverError","setServerError","search","useLocation","redirectURL","URLSearchParams","get","dashboard","Container","value","authService","logIn","catch","e","response","data"],"mappings":"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","file":"static/js/15.3fe279d2.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  submitOrAltRow: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nexport default useStyles;\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import useStyles from './form.styles';\nimport { Button, TextField, TextFieldProps } from '@material-ui/core';\nimport routes from '../../router/constants/routes';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nexport type FormValues = {\n  username: string;\n  password: string;\n};\n\nconst schema = yup.object().shape({\n  username: yup.string().label('Username').required(),\n  password: yup.string().label('Password').required(),\n});\ninterface LoginFormProps {\n  variant?: TextFieldProps['variant'];\n  onSubmit: (value: FormValues) => void;\n}\n\nexport default function LoginForm({ variant, onSubmit }: LoginFormProps) {\n  const classes = useStyles();\n\n  const {\n    formState: { errors },\n    register,\n    handleSubmit,\n  } = useForm<FormValues>({ resolver: yupResolver(schema) });\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n      <TextField\n        label=\"Username\"\n        variant={variant}\n        inputProps={register('username', { required: true })}\n        error={errors.username !== undefined}\n        helperText={errors.username?.message}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        variant={variant}\n        inputProps={register('password', { required: true })}\n        error={errors.password !== undefined}\n        helperText={errors.password?.message}\n      />\n      <div className={classes.submitOrAltRow}>\n        <Button component={Link} to={routes.registration} color=\"primary\">\n          Create account\n        </Button>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Log in\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Container } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useContext, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport routes from '../../router/constants/routes';\nimport LoginForm from '../components/login-form';\nimport { authService } from '../services/auth.service';\nimport useStyles from './login.page.styles';\nimport CredentialsContext from '../contexts/credentials.context';\n\nexport default function LoginPage() {\n  const credentials = useContext(CredentialsContext);\n  const classes = useStyles();\n\n  const [serverError, setServerError] = useState('');\n\n  const { search } = useLocation();\n  const redirectURL =\n    new URLSearchParams(search).get('continue') ?? routes.dashboard;\n\n  if (credentials) {\n    return <Redirect to={redirectURL} />;\n  }\n\n  return (\n    <div>\n      <Container className={classes.content}>\n        {serverError && <Alert severity=\"error\">{serverError}</Alert>}\n        <LoginForm\n          variant=\"outlined\"\n          onSubmit={(value) => {\n            authService.logIn(value.username, value.password).catch((e) => {\n              if (e.response) {\n                setServerError(e.response?.data?.message);\n              } else {\n                setServerError('An error has occurred.');\n              }\n            });\n          }}\n        />\n      </Container>\n    </div>\n  );\n}\n"],"sourceRoot":""}