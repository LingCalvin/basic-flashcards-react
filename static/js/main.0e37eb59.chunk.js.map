{"version":3,"sources":["auth/contexts/credentials.context.tsx","common/services/local-storage.service.ts","common/constants/api-client.ts","user/services/user.service.ts","auth/utils/credentials.utils.ts","common/components/app-bar-with-back-button.tsx","router/constants/routes.ts","common/hooks/use-text-field-value.tsx","common/components/validated-text-field.tsx","common/constants/missing-required-field-error-message.tsx","auth/components/form.styles.tsx","auth/components/login-form.tsx","auth/services/auth.service.ts","auth/pages/login.page.styles.tsx","auth/pages/login.page.tsx","auth/components/registration-form.tsx","auth/pages/registration.page.styles.tsx","auth/pages/registration.page.tsx","common/hooks/use-unique-id.tsx","deck/services/decks.service.ts","dashboard/components/app-bar.styles.tsx","dashboard/components/app-bar.tsx","common/components/link.tsx","dashboard/components/deck-info-tile.styles.tsx","dashboard/components/deck-info-tile.tsx","dashboard/pages/dashboard.page.styles.tsx","router/utils/route.utils.ts","dashboard/pages/dashboard.page.tsx","common/hooks/use-is-mobile.tsx","common/hooks/use-debounced-value.tsx","common/components/loadable-component.styles.tsx","common/components/loadable-component.tsx","dashboard/pages/home.page.styles.tsx","dashboard/pages/home.page.tsx","deck/components/edit-card-tile.styles.tsx","deck/components/edit-card-tile.tsx","deck/components/edit-deck-form.styles.tsx","deck/components/edit-deck-form.tsx","deck/pages/add-deck.page.styles.tsx","deck/pages/add-deck.page.tsx","deck/components/card-list.styles.tsx","deck/components/card-list.tsx","card/components/card-side.styles.tsx","card/components/card-side.tsx","card/components/card.styles.tsx","card/components/card.tsx","deck/components/deck-stack.styles.tsx","deck/components/deck-stack.tsx","deck/components/deck-stack-controls.styles.tsx","deck/components/deck-stack-controls.tsx","deck/pages/deck.page.styles.tsx","deck/pages/deck.page.tsx","router/components/protected-route.tsx","router/components/router.tsx","app.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["CredentialsContext","createContext","localStorageService","key","localStorage","getItem","removeItem","document","dispatchEvent","Event","value","setItem","apiClient","axios","create","baseURL","process","withCredentials","interceptors","request","use","config","accessToken","headers","userService","http","params","this","post","raw","JSON","parse","retrieve","user","getCurrentUser","AppBarWithBackButton","title","onBack","history","useHistory","position","Toolbar","IconButton","edge","color","onClick","goBack","ArrowBack","Typography","variant","routes","home","dashboard","decks","deckSearch","deckAdd","deckEdit","deckView","login","registration","useTextFieldValue","useState","val","setVal","e","target","ValidatedTextField","forceValidate","onValidate","onChange","onBlur","rest","checkValid","setCheckValid","errorMessage","TextField","error","undefined","helperText","missingRequiredFieldErrorMessage","useStyles","makeStyles","theme","form","display","flexDirection","gap","spacing","submitOrAltRow","justifyContent","alignItems","LoginForm","username","password","onChangeUsername","onChangePassword","onSubmit","classes","setForceValidate","validateRequired","validator","isEmpty","className","noValidate","preventDefault","some","label","required","type","Button","component","Link","to","authService","a","data","decodedAccessToken","stringify","id","sub","token","get","accessTokenPayload","content","padding","LoginPage","credentials","useContext","serverError","setServerError","search","useLocation","redirectURL","URLSearchParams","Container","Alert","severity","logIn","catch","response","message","RegistrationForm","confirmPassword","onChangeConfirmPassword","textFieldVariant","validateConfirmPassword","RegistrationPage","then","push","uniqueIdNumber","useUniqueId","useRef","current","decksService","description","visibility","cards","authorId","map","sides","frontText","text","backText","findOneDeckResponseToDeck","count","delete","card","tags","homeLink","textTransform","titleContainer","flexGrow","avatarButton","menuUsername","textAlign","fontWeight","typography","fontWeightBold","AppBar","menuAnchor","setMenuAnchor","closeMenu","menu","Menu","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","onClose","toLocaleUpperCase","Divider","MenuItem","logOut","avatar","Avatar","substring","isAuthenticated","currentTarget","children","RouterLink","root","cursor","backgroundColor","palette","grey","textOverflow","overflow","whiteSpace","buttonBox","DeckInfoTile","numberOfCards","deckId","author","onDelete","onExport","onEdit","Paper","stopPropagation","paginationContainer","paginationControls","deckList","sortAndSearchContainer","addButton","marginLeft","fab","bottom","right","DashboardPage","pageSize","useTheme","isMobile","useMediaQuery","breakpoints","down","useIsMobile","userId","loadedDecks","setLoadedDecks","totalDecks","setTotalDecks","page","setPage","loading","setLoading","setSearch","searchValue","timeout","debouncedValue","setDebouncedValue","lastFired","Date","now","useEffect","handle","setTimeout","clearTimeout","useDebouncedValue","transitions","duration","short","findDecks","findAll","res","finally","Error","orderTitleBy","take","skip","caseInsensitive","titleContains","showDialog","setShowDialog","deckToDelete","setDeckToDelete","Dialog","onBackdropClick","onExited","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","remove","InputLabel","Select","labelId","deck","length","Pagination","Math","ceil","_e","disabled","Fab","Add","LoadableComponent","clsx","CircularProgress","topSection","primary","dark","contrastText","exampleDecksContainer","exampleDecksSection","marginRight","paddingBottom","HomePage","exampleDecks","setExampleDecks","textFieldContainer","gridTemplateColumns","cardContent","margin","actionArea","EditCardTile","cardNumber","onFrontTextChange","onBackTextChange","onMoveUp","onMoveDown","validateFrontText","setValidateFrontText","frontTextValid","frontTextError","validateBackText","setValidateBackText","backTextValid","backTextError","Card","multiline","Delete","ArrowUpward","ArrowDownward","marginTop","marginBottom","generalInfoContainer","cardList","saveButtonContainer","EditDeckForm","onTitleChange","onDescriptionChange","onChangeVisibility","onCardsChange","visibilityId","validateTitle","setValidateTitle","showTitleError","changeCardSideText","cardIndex","side","newCards","modifiedCard","moveCard","currentIndex","targetIndex","splice","FormControl","fullWidth","i","index","slice","startIcon","backdrop","zIndex","appBar","AddDeckPage","setTitle","setDescription","setVisibility","setCards","submitting","setSubmitting","Backdrop","columnGap","CardList","Fragment","orientation","fontSize","h5","CardSide","CardContent","gridTemplateAreas","transformStyle","cardFlipTransition","transition","flip","transform","cardSide","gridArea","backfaceVisibility","cardBack","showBack","onFlip","height","width","hiddenCard","DeckStack","activeIndex","showCardBack","onFlipCard","activeCard","unmount","setUnmount","useLayoutEffect","positionIndicator","DeckStackControls","onForward","align","ArrowForward","deckStack","maxWidth","deckStackContainer","section","progressBar","tagList","flexWrap","DeckPage","activeCardIndex","setActiveCardIndex","setShowCardBack","useParams","setDeck","findOne","sortedTags","useMemo","sort","state","Slider","max","valueLabelFormat","_event","tag","Chip","ProtectedRoute","props","pathname","encodeURIComponent","path","Router","exact","App","setCredentials","syncCredentials","addEventListener","removeEventListener","Provider","CssBaseline","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","navigator","serviceWorker","ready","unregister","console"],"mappings":"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","file":"static/js/main.0e37eb59.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport Credentials from '../interfaces/credentials';\n\nconst CredentialsContext = createContext<Credentials | null>(null);\nexport default CredentialsContext;\n","export class LocalStorageService {\n  getItem(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  removeItem(key: string): void {\n    localStorage.removeItem(key);\n    document.dispatchEvent(new Event('localStorageServiceChange'));\n  }\n\n  setItem(key: string, value: string) {\n    localStorage.setItem(key, value);\n    document.dispatchEvent(new Event('localStorageServiceChange'));\n  }\n}\n\nconst localStorageService = new LocalStorageService();\nexport default localStorageService;\n","import axios from 'axios';\nimport localStorageService from '../services/local-storage.service';\n\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true,\n});\n\n// Send the access token with requests if present\napiClient.interceptors.request.use((config) => {\n  const accessToken = localStorageService.getItem('accessToken');\n  if (accessToken) {\n    config.headers['Authorization'] = `Bearer ${accessToken}`;\n  }\n  return config;\n});\n\nexport default apiClient;\n","import { AxiosInstance } from 'axios';\nimport apiClient from '../../common/constants/api-client';\nimport localStorageService from '../../common/services/local-storage.service';\nimport CreateParams from '../interfaces/create-params';\nimport User from '../interfaces/user';\n\nexport class UserService {\n  constructor(private http: AxiosInstance) {}\n  create(params: CreateParams) {\n    return this.http.post('/users', params);\n  }\n\n  getCurrentUser(): User | null {\n    const raw = localStorageService.getItem('user');\n    if (!raw) {\n      return null;\n    }\n    return JSON.parse(raw);\n  }\n}\n\nconst userService = new UserService(apiClient);\nexport default userService;\n","import localStorageService from '../../common/services/local-storage.service';\nimport userService from '../../user/services/user.service';\n\nexport function retrieve() {\n  // TODO: check access token expiration\n  const user = userService.getCurrentUser();\n  const accessToken = localStorageService.getItem('accessToken');\n  if (!user || !accessToken) {\n    return null;\n  }\n  return { ...user, accessToken };\n}\n","import {\n  AppBar as MuiAppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\nimport { useHistory } from 'react-router';\n\ninterface AppBarWithBackButtonProps {\n  title: string;\n  onBack?: () => void;\n}\n\nexport default function AppBarWithBackButton({\n  title,\n  onBack,\n}: AppBarWithBackButtonProps) {\n  const history = useHistory();\n  return (\n    <MuiAppBar position=\"sticky\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={onBack ?? (() => history.goBack())}\n        >\n          <ArrowBack />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Toolbar>\n    </MuiAppBar>\n  );\n}\n","const routes = {\n  home: '/',\n  dashboard: '/dashboard',\n  decks: '/decks',\n  deckSearch: '/search-decks',\n  deckAdd: '/add-deck',\n  deckEdit: '/decks/:id/edit',\n  deckView: '/decks/:id',\n  login: '/auth/login',\n  registration: '/auth/register',\n};\n\nexport default routes;\n","import { useState } from 'react';\n\nexport default function useTextFieldValue(\n  value: string\n): [string, React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>] {\n  const [val, setVal] = useState(value);\n  return [\n    val,\n    (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) =>\n      setVal(e.target.value),\n  ];\n}\n","import { TextField, TextFieldProps } from '@material-ui/core';\nimport { useState } from 'react';\n\ntype ValidatedTextFieldProps = TextFieldProps & {\n  onValidate: (value: string) => string | undefined;\n  forceValidate?: boolean;\n  value: string;\n};\n\nexport default function ValidatedTextField({\n  forceValidate,\n  onValidate,\n  onChange,\n  onBlur,\n  ...rest\n}: ValidatedTextFieldProps) {\n  const [checkValid, setCheckValid] = useState(false);\n  const errorMessage = onValidate(rest.value);\n  return (\n    <TextField\n      error={(forceValidate || checkValid) && errorMessage !== undefined}\n      helperText={(forceValidate || checkValid) && errorMessage}\n      onChange={(e) => {\n        setCheckValid(true);\n        onChange?.(e);\n      }}\n      onBlur={(e) => {\n        setCheckValid(true);\n        onBlur?.(e);\n      }}\n      {...rest}\n    />\n  );\n}\n","const missingRequiredFieldErrorMessage = 'This field is required.';\n\nexport default missingRequiredFieldErrorMessage;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  submitOrAltRow: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nexport default useStyles;\n","import { useState } from 'react';\nimport ValidatedTextField from '../../common/components/validated-text-field';\nimport validator from 'validator';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useStyles from './form.styles';\nimport { Button, TextFieldProps } from '@material-ui/core';\nimport routes from '../../router/constants/routes';\nimport { Link } from 'react-router-dom';\n\ninterface LoginFormProps {\n  variant?: TextFieldProps['variant'];\n  username: string;\n  password: string;\n  onChangeUsername: React.ChangeEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onChangePassword: React.ChangeEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onSubmit: () => void;\n}\n\nexport default function LoginForm({\n  variant = 'outlined',\n  username,\n  password,\n  onChangeUsername,\n  onChangePassword,\n  onSubmit,\n}: LoginFormProps) {\n  const classes = useStyles();\n\n  const [forceValidate, setForceValidate] = useState(false);\n\n  const validateRequired = (value: string) =>\n    validator.isEmpty(value) ? missingRequiredFieldErrorMessage : undefined;\n\n  return (\n    <form\n      className={classes.form}\n      noValidate\n      onSubmit={(e) => {\n        e.preventDefault();\n        setForceValidate(true);\n        if ([username, password].some(validateRequired)) {\n          return;\n        }\n\n        onSubmit();\n      }}\n    >\n      <ValidatedTextField\n        label=\"Username\"\n        value={username}\n        onChange={onChangeUsername}\n        onValidate={validateRequired}\n        forceValidate={forceValidate}\n        variant={variant}\n        required\n      />\n      <ValidatedTextField\n        label=\"Password\"\n        value={password}\n        onChange={onChangePassword}\n        onValidate={validateRequired}\n        forceValidate={forceValidate}\n        variant={variant}\n        type=\"password\"\n        required\n      />\n      <div className={classes.submitOrAltRow}>\n        <Button component={Link} to={routes.registration} color=\"primary\">\n          Create account\n        </Button>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Log in\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import { AxiosInstance } from 'axios';\nimport apiClient from '../../common/constants/api-client';\nimport localStorageService from '../../common/services/local-storage.service';\nimport { LogInResponse } from '../interfaces/log-in-response';\n\nexport class AuthService {\n  constructor(private http: AxiosInstance) {}\n\n  async logIn(username: string, password: string) {\n    const {\n      data: { accessToken, decodedAccessToken },\n    } = await this.http.post<LogInResponse>('/auth/access-tokens', {\n      username,\n      password,\n    });\n    localStorageService.setItem('accessToken', accessToken);\n    localStorageService.setItem(\n      'accessTokenPayload',\n      JSON.stringify(decodedAccessToken)\n    );\n    localStorageService.setItem(\n      'user',\n      JSON.stringify({ id: decodedAccessToken.sub, username })\n    );\n    return decodedAccessToken;\n  }\n\n  async logOut() {\n    localStorageService.removeItem('accessToken');\n    localStorageService.removeItem('accessTokenPayload');\n    localStorageService.removeItem('user');\n    // TODO: Revoke token from server\n  }\n\n  async verifyAccessToken(token: string): Promise<boolean> {\n    try {\n      await this.http.get(`/auth/access-tokens/${token}`);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  isAuthenticated(): boolean {\n    return localStorageService.getItem('accessToken') !== null;\n  }\n\n  getCurrentUser(): string | null {\n    const accessTokenPayload = localStorageService.getItem(\n      'accessTokenPayload'\n    );\n    if (!accessTokenPayload) {\n      return null;\n    }\n    return JSON.parse(accessTokenPayload).sub;\n  }\n}\n\nexport const authService = new AuthService(apiClient);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Container } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useContext, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport AppBarWithBackButton from '../../common/components/app-bar-with-back-button';\nimport routes from '../../router/constants/routes';\nimport useTextFieldValue from '../../common/hooks/use-text-field-value';\nimport LoginForm from '../components/login-form';\nimport { authService } from '../services/auth.service';\nimport useStyles from './login.page.styles';\nimport CredentialsContext from '../contexts/credentials.context';\n\nexport default function LoginPage() {\n  const credentials = useContext(CredentialsContext);\n  const classes = useStyles();\n  const [username, onChangeUsername] = useTextFieldValue('');\n  const [password, onChangePassword] = useTextFieldValue('');\n\n  const [serverError, setServerError] = useState('');\n\n  const { search } = useLocation();\n  const redirectURL =\n    new URLSearchParams(search).get('continue') ?? routes.dashboard;\n\n  if (credentials) {\n    return <Redirect to={redirectURL} />;\n  }\n\n  return (\n    <div>\n      <AppBarWithBackButton title=\"Basic Flashcards\" />\n      <Container className={classes.content}>\n        {serverError && <Alert severity=\"error\">{serverError}</Alert>}\n        <LoginForm\n          variant=\"outlined\"\n          username={username}\n          password={password}\n          onChangeUsername={onChangeUsername}\n          onChangePassword={onChangePassword}\n          onSubmit={() => {\n            authService.logIn(username, password).catch((e) => {\n              if (e.response) {\n                setServerError(e.response?.data?.message);\n              } else {\n                setServerError('An error has occurred.');\n              }\n            });\n          }}\n        />\n      </Container>\n    </div>\n  );\n}\n","import { Button, TextFieldProps } from '@material-ui/core';\nimport { useState } from 'react';\nimport ValidatedTextField from '../../common/components/validated-text-field';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useStyles from './form.styles';\nimport validator from 'validator';\nimport routes from '../../router/constants/routes';\nimport { Link } from 'react-router-dom';\n\ninterface RegistrationFormProps {\n  username: string;\n  password: string;\n  confirmPassword: string;\n  onChangeUsername: React.ChangeEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n\n  onChangePassword: React.ChangeEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onChangeConfirmPassword: React.ChangeEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  textFieldVariant?: TextFieldProps['variant'];\n  onSubmit: () => void;\n}\n\nexport default function RegistrationForm({\n  username,\n  password,\n  confirmPassword,\n  onChangeUsername,\n  onChangePassword,\n  onChangeConfirmPassword,\n  textFieldVariant = 'outlined',\n  onSubmit,\n}: RegistrationFormProps) {\n  const classes = useStyles();\n\n  const [forceValidate, setForceValidate] = useState(false);\n\n  const validateRequired = (value: string) =>\n    validator.isEmpty(value) ? missingRequiredFieldErrorMessage : undefined;\n\n  const validateConfirmPassword = (value: string) =>\n    value !== password ? 'Passwords do not match.' : undefined;\n\n  return (\n    <form\n      className={classes.form}\n      noValidate\n      onSubmit={(e) => {\n        e.preventDefault();\n        setForceValidate(true);\n        if (\n          [username, password].some(validateRequired) ||\n          validateConfirmPassword(confirmPassword)\n        ) {\n          return;\n        }\n        onSubmit();\n      }}\n    >\n      <ValidatedTextField\n        variant={textFieldVariant}\n        label=\"Username\"\n        forceValidate={forceValidate}\n        onValidate={validateRequired}\n        required\n        value={username}\n        onChange={onChangeUsername}\n      />\n      <ValidatedTextField\n        variant={textFieldVariant}\n        label=\"Password\"\n        type=\"password\"\n        required\n        value={password}\n        onChange={onChangePassword}\n        forceValidate={forceValidate}\n        onValidate={validateRequired}\n      />\n      <ValidatedTextField\n        variant={textFieldVariant}\n        label=\"Confirm password\"\n        type=\"password\"\n        required\n        value={confirmPassword}\n        onChange={onChangeConfirmPassword}\n        forceValidate={forceValidate}\n        onValidate={validateConfirmPassword}\n      />\n      <div className={classes.submitOrAltRow}>\n        <Button component={Link} to={routes.login} color=\"primary\">\n          Log in\n        </Button>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Register\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Container } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport AppBarWithBackButton from '../../common/components/app-bar-with-back-button';\nimport routes from '../../router/constants/routes';\nimport useTextFieldValue from '../../common/hooks/use-text-field-value';\nimport userService from '../../user/services/user.service';\nimport RegistrationForm from '../components/registration-form';\nimport useStyles from './registration.page.styles';\n\nexport default function RegistrationPage() {\n  const classes = useStyles();\n  const [username, onChangeUsername] = useTextFieldValue('');\n  const [password, onChangePassword] = useTextFieldValue('');\n  const [confirmPassword, onChangeConfirmPassword] = useTextFieldValue('');\n  const [serverError, setServerError] = useState('');\n  const history = useHistory();\n  return (\n    <div>\n      <AppBarWithBackButton title=\"Basic Flashcards\" />\n      <Container className={classes.content}>\n        {serverError && <Alert severity=\"error\">{serverError}</Alert>}\n        <RegistrationForm\n          username={username}\n          password={password}\n          confirmPassword={confirmPassword}\n          onChangeUsername={onChangeUsername}\n          onChangePassword={onChangePassword}\n          onChangeConfirmPassword={onChangeConfirmPassword}\n          onSubmit={() => {\n            userService\n              .create({ username, password })\n              .then(() => history.push(routes.login))\n              .catch((e) => {\n                if (e.response) {\n                  setServerError(e.response?.data?.message);\n                } else {\n                  setServerError('An error has occurred.');\n                }\n              });\n          }}\n        />\n      </Container>\n    </div>\n  );\n}\n","import { useRef } from 'react';\n\nlet uniqueIdNumber = 0;\n\nexport default function useUniqueId() {\n  const uniqueId = useRef(`unique-id-${uniqueIdNumber++}`);\n  return uniqueId.current;\n}\n","import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  homeLink: {\n    textTransform: 'none',\n  },\n  titleContainer: {\n    flexGrow: 1,\n  },\n  avatarButton: {\n    padding: theme.spacing(0.5),\n  },\n  menuUsername: {\n    textAlign: 'center',\n    padding: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightBold,\n  },\n}));\n\nexport default useStyles;\n","import {\n  AppBar as MuiAppBar,\n  Avatar,\n  Button,\n  Divider,\n  IconButton,\n  Menu,\n  MenuItem,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { useContext, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport CredentialsContext from '../../auth/contexts/credentials.context';\nimport { authService } from '../../auth/services/auth.service';\nimport routes from '../../router/constants/routes';\nimport useStyles from './app-bar.styles';\n\nexport default function AppBar() {\n  const classes = useStyles();\n\n  const [menuAnchor, setMenuAnchor] = useState<null | HTMLElement>(null);\n\n  const credentials = useContext(CredentialsContext);\n\n  const closeMenu = () => setMenuAnchor(null);\n  const history = useHistory();\n\n  const menu = (\n    <Menu\n      open={menuAnchor !== null}\n      anchorEl={menuAnchor}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      getContentAnchorEl={undefined}\n      onClose={closeMenu}\n    >\n      <Typography className={classes.menuUsername}>\n        {credentials?.username.toLocaleUpperCase()}\n      </Typography>\n      <Divider />\n      <MenuItem onClick={closeMenu}>Manage account</MenuItem>\n      <MenuItem\n        onClick={() => {\n          authService.logOut().then(() => history.push(routes.home));\n        }}\n      >\n        Sign out\n      </MenuItem>\n    </Menu>\n  );\n\n  const avatar = (\n    <Avatar>{credentials?.username.substring(0, 1).toLocaleUpperCase()}</Avatar>\n  );\n\n  return (\n    <MuiAppBar position=\"sticky\">\n      {menu}\n      <Toolbar>\n        <div className={classes.titleContainer}>\n          <Button\n            color=\"inherit\"\n            component={Link}\n            to={routes.home}\n            className={classes.homeLink}\n          >\n            <Typography variant=\"h6\">Basic Flashcards</Typography>\n          </Button>\n        </div>\n        {authService.isAuthenticated() ? (\n          <IconButton\n            className={classes.avatarButton}\n            color=\"inherit\"\n            onClick={(e) => setMenuAnchor(e.currentTarget)}\n          >\n            {avatar}\n          </IconButton>\n        ) : (\n          <Button component={Link} to={routes.login} color=\"inherit\">\n            Log in\n          </Button>\n        )}\n      </Toolbar>\n    </MuiAppBar>\n  );\n}\n","import { Link as MuiLink, LinkProps as MuiLinkProps } from '@material-ui/core';\nimport { ReactNode } from 'react';\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\ninterface LinkProps {\n  to: RouterLinkProps['to'];\n  color?: MuiLinkProps['color'];\n  children?: ReactNode;\n}\n\nexport default function Link({ to, color, children }: LinkProps) {\n  return (\n    <MuiLink component={RouterLink} to={to} color={color}>\n      {children}\n    </MuiLink>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    cursor: 'pointer',\n    padding: theme.spacing(2),\n    '&:hover': {\n      backgroundColor: theme.palette.grey[50],\n    },\n  },\n  title: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n  buttonBox: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default useStyles;\n","import { Button, Paper, Typography } from '@material-ui/core';\nimport Link from '../../common/components/link';\nimport useStyles from './deck-info-tile.styles';\n\ninterface DeckInfoTileProps {\n  title: string;\n  deckId: string;\n  numberOfCards: number;\n  author?: string;\n  onClick?: () => void;\n  onDelete?: () => void;\n  onExport?: () => void;\n  onEdit?: () => void;\n}\n\nexport default function DeckInfoTile({\n  title,\n  deckId,\n  numberOfCards,\n  author,\n  onClick,\n  onDelete,\n  onExport,\n  onEdit,\n}: DeckInfoTileProps) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root} onClick={onClick}>\n      <Typography className={classes.title} variant=\"h5\">\n        {title}\n      </Typography>\n      <Typography>{`${numberOfCards} cards`}</Typography>\n      {author && (\n        <Typography>\n          By <Link to={`/users/${author}`}>{author}</Link>\n        </Typography>\n      )}\n      {(onDelete || onExport || onEdit) && (\n        <div className={classes.buttonBox}>\n          {onDelete && (\n            <Button\n              color=\"secondary\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onDelete();\n              }}\n            >\n              Delete\n            </Button>\n          )}\n          {onExport && (\n            <Button\n              onClick={(e) => {\n                e.stopPropagation();\n                onExport();\n              }}\n            >\n              Export\n            </Button>\n          )}\n          {onEdit && (\n            <Button\n              color=\"primary\"\n              onClick={(e: any) => {\n                e.stopPropagation();\n                onEdit();\n              }}\n            >\n              Edit\n            </Button>\n          )}\n        </div>\n      )}\n    </Paper>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  paginationContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  paginationControls: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  deckList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  sortAndSearchContainer: {\n    display: 'flex',\n    gap: theme.spacing(2),\n  },\n  addButton: {\n    marginLeft: 'auto',\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","export function deckEdit(id: string) {\n  return `/decks/${id}/edit`;\n}\n\nexport function deckView(id: string) {\n  return `/decks/${id}`;\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Fab,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport { Add as AddIcon } from '@material-ui/icons';\nimport { Pagination } from '@material-ui/lab';\nimport { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport routes from '../../router/constants/routes';\nimport useDebouncedValue from '../../common/hooks/use-debounced-value';\nimport useIsMobile from '../../common/hooks/use-is-mobile';\nimport useUniqueId from '../../common/hooks/use-unique-id';\nimport Deck from '../../deck/interfaces/deck';\nimport { FindAllDecksParams } from '../../deck/interfaces/find-all-decks-params';\nimport { decksService } from '../../deck/services/decks.service';\nimport AppBar from '../components/app-bar';\nimport DeckInfoTile from '../components/deck-info-tile';\nimport useStyles from './dashboard.page.styles';\nimport { deckView } from '../../router/utils/route.utils';\nimport CredentialsContext from '../../auth/contexts/credentials.context';\n\ninterface DashboardPageProps {\n  pageSize?: number;\n}\n\nexport default function DashboardPage({ pageSize = 10 }: DashboardPageProps) {\n  const theme = useTheme();\n  const isMobile = useIsMobile();\n\n  const { id: userId } = useContext(CredentialsContext) ?? {};\n\n  const [loadedDecks, setLoadedDecks] = useState<Deck[]>([]);\n  const [totalDecks, setTotalDecks] = useState(0);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const classes = useStyles();\n  const id = useUniqueId();\n  const [search, setSearch] = useState('');\n  const searchValue = useDebouncedValue(\n    search,\n    theme.transitions.duration.short\n  );\n\n  const findDecks = (params: FindAllDecksParams) => {\n    setLoading(true);\n    decksService\n      .findAll({\n        ...params,\n      })\n      .then((res) => {\n        setLoadedDecks(res.decks);\n        setTotalDecks(res.count);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    if (!userId) {\n      throw new Error('Unexpected nullish value: userId');\n    }\n    findDecks({\n      authorId: [userId],\n      orderTitleBy: 'asc',\n      take: pageSize,\n      skip: (page - 1) * pageSize,\n      caseInsensitive: true,\n      titleContains: searchValue ? searchValue : undefined,\n    });\n  }, [page, pageSize, searchValue, userId]);\n\n  const [showDialog, setShowDialog] = useState(false);\n  const [deckToDelete, setDeckToDelete] = useState<Deck | null>(null);\n\n  return (\n    <div>\n      <Dialog\n        open={showDialog}\n        onBackdropClick={() => setShowDialog(false)}\n        onExited={() => setDeckToDelete(null)}\n      >\n        <DialogTitle>Delete deck?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete deck \"{deckToDelete?.title}\"? This\n            action cannot be undone.\n          </DialogContentText>\n          <DialogActions>\n            <Button\n              color=\"primary\"\n              autoFocus\n              onClick={() => {\n                setShowDialog(false);\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                decksService\n                  .remove(deckToDelete?.id ?? '')\n                  .then(() => {\n                    if (!userId) {\n                      throw new Error('Unexpected nullish value: userId');\n                    }\n                    findDecks({\n                      authorId: [userId],\n                      orderTitleBy: 'asc',\n                      take: pageSize,\n                      skip: (page - 1) * pageSize,\n                      caseInsensitive: true,\n                      titleContains: searchValue ? searchValue : undefined,\n                    });\n                  })\n                  .finally(() => setShowDialog(false));\n              }}\n            >\n              Delete\n            </Button>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n      <AppBar />\n      <div className={classes.content}>\n        <Typography variant=\"h2\">Your decks</Typography>\n\n        <div className={classes.sortAndSearchContainer}>\n          <div>\n            <InputLabel id={id}>Sort by</InputLabel>\n            <Select labelId={id} value=\"title\">\n              <MenuItem value=\"title\">Title</MenuItem>\n            </Select>\n          </div>\n          <TextField\n            label=\"Search\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          {!isMobile && (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to={routes.deckAdd}\n              className={classes.addButton}\n            >\n              Add Deck\n            </Button>\n          )}\n        </div>\n        <div className={classes.paginationContainer}>\n          <div className={classes.deckList}>\n            {loadedDecks.map((deck) => (\n              <DeckInfoTile\n                key={deck.id}\n                deckId={deck.id ?? ''}\n                title={deck.title}\n                numberOfCards={deck.cards.length}\n                onClick={() => history.push(deckView(deck.id ?? ''))}\n                onDelete={() => {\n                  setDeckToDelete(deck);\n                  setShowDialog(true);\n                }}\n                onEdit={() => history.push(`${routes.decks}/${deck.id}/edit`)}\n              />\n            ))}\n          </div>\n          {/* Only show pagination controls if there is more than one page */}\n          {totalDecks / pageSize > 1 && (\n            <div className={classes.paginationControls}>\n              <Pagination\n                count={Math.ceil(totalDecks / pageSize)}\n                page={page}\n                onChange={(_e, value) => setPage(value)}\n                disabled={loading}\n              />\n            </div>\n          )}\n        </div>\n        {isMobile && (\n          <Fab\n            className={classes.fab}\n            color=\"primary\"\n            component={Link}\n            to={routes.deckAdd}\n          >\n            <AddIcon />\n          </Fab>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useMediaQuery, useTheme } from '@material-ui/core';\n\nexport default function useIsMobile() {\n  const theme = useTheme();\n  const match = useMediaQuery(theme.breakpoints.down('xs'));\n  return match;\n}\n","import { useEffect, useRef, useState } from 'react';\n\nexport default function useDebouncedValue<T>(value: T, timeout: number): T {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  const lastFired = useRef(Date.now());\n\n  useEffect(() => {\n    const handle = setTimeout(() => {\n      setDebouncedValue(value);\n      lastFired.current = Date.now();\n    }, timeout - (Date.now() - lastFired.current));\n    return () => clearTimeout(handle);\n  }, [value, timeout]);\n\n  return debouncedValue;\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\nexport default useStyles;\n","import { CircularProgress } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ReactNode } from 'react';\nimport useStyles from './loadable-component.styles';\n\ninterface LoadableComponentProps {\n  loading?: boolean;\n  children: ReactNode;\n  className?: string;\n}\n\nexport default function LoadableComponent({\n  loading,\n  children,\n  className,\n}: LoadableComponentProps) {\n  const classes = useStyles();\n\n  return loading ? (\n    <div className={clsx(classes.root, className)}>\n      <CircularProgress />\n    </div>\n  ) : (\n    <>{children}</>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  topSection: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    gap: theme.spacing(2),\n  },\n  buttonBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  exampleDecksContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  exampleDecksSection: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Typography } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport Deck from '../../deck/interfaces/deck';\nimport { decksService } from '../../deck/services/decks.service';\nimport AppBar from '../components/app-bar';\nimport DeckInfoTile from '../components/deck-info-tile';\nimport useStyles from './home.page.styles';\nimport { deckView } from '../../router/utils/route.utils';\n\nexport default function HomePage() {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(true);\n\n  const [exampleDecks, setExampleDecks] = useState<Deck[]>([]);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    decksService\n      .findAll({ orderTitleBy: 'asc', take: 3 })\n      .then(({ decks }) => setExampleDecks(decks))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div>\n      <AppBar />\n      <main>\n        <div className={classes.topSection}>\n          <Typography variant=\"h1\">\n            Create, search for, and review decks.\n          </Typography>\n        </div>\n        <div className={classes.exampleDecksSection}>\n          <Typography variant=\"h2\">Example decks</Typography>\n          <LoadableComponent loading={loading}>\n            <div className={classes.exampleDecksContainer}>\n              {exampleDecks.map((deck) => (\n                <DeckInfoTile\n                  key={deck.id}\n                  deckId={deck.id ?? ''}\n                  title={deck.title}\n                  numberOfCards={deck.cards.length}\n                  author={deck.authorId ?? ''}\n                  onClick={() => history.push(deckView(deck.id ?? ''))}\n                />\n              ))}\n            </div>\n          </LoadableComponent>\n        </div>\n      </main>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldContainer: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: theme.spacing(2),\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    margin: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\nexport default useStyles;\n","import { Card, IconButton, TextField, Typography } from '@material-ui/core';\nimport { ArrowDownward, ArrowUpward, Delete } from '@material-ui/icons';\nimport { useState } from 'react';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useStyles from './edit-card-tile.styles';\n\ninterface EditCardTileProps {\n  cardNumber: number;\n  frontText: string;\n  backText: string;\n  forceValidate?: boolean;\n  onFrontTextChange: (value: string) => void;\n  onBackTextChange: (value: string) => void;\n  onDelete?: () => void;\n  onMoveUp?: () => void;\n  onMoveDown?: () => void;\n}\n\nexport default function EditCardTile({\n  cardNumber,\n  frontText,\n  backText,\n  forceValidate,\n  onFrontTextChange,\n  onBackTextChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n}: EditCardTileProps) {\n  const classes = useStyles();\n\n  const [validateFrontText, setValidateFrontText] = useState(false);\n  const frontTextValid = frontText.length > 0;\n  const frontTextError =\n    (forceValidate || validateFrontText) && !frontTextValid;\n\n  const [validateBackText, setValidateBackText] = useState(false);\n  const backTextValid = backText.length > 0;\n  const backTextError = (forceValidate || validateBackText) && !backTextValid;\n\n  return (\n    <Card>\n      <div className={classes.cardContent}>\n        <Typography variant=\"h5\">{`Card ${cardNumber}`}</Typography>\n        <div className={classes.textFieldContainer}>\n          <TextField\n            label=\"Term\"\n            required\n            variant=\"outlined\"\n            multiline\n            value={frontText}\n            error={frontTextError}\n            helperText={\n              frontTextError ? missingRequiredFieldErrorMessage : undefined\n            }\n            onChange={(e) => {\n              setValidateFrontText(true);\n              onFrontTextChange(e.target.value);\n            }}\n          />\n          <TextField\n            label=\"Definition\"\n            required\n            variant=\"outlined\"\n            multiline\n            value={backText}\n            error={backTextError}\n            helperText={\n              backTextError ? missingRequiredFieldErrorMessage : undefined\n            }\n            onChange={(e) => {\n              setValidateBackText(true);\n              onBackTextChange(e.target.value);\n            }}\n          />\n        </div>\n        <div className={classes.actionArea}>\n          <IconButton onClick={onDelete} disabled={!onDelete}>\n            <Delete />\n          </IconButton>\n          <IconButton onClick={onMoveUp} disabled={!onMoveUp}>\n            <ArrowUpward />\n          </IconButton>\n          <IconButton onClick={onMoveDown} disabled={!onMoveDown}>\n            <ArrowDownward />\n          </IconButton>\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  generalInfoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  cardList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  saveButtonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default useStyles;\n","import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useState } from 'react';\nimport Card from '../../card/interfaces/card';\nimport useUniqueId from '../../common/hooks/use-unique-id';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport EditCardTile from './edit-card-tile';\nimport useStyles from './edit-deck-form.styles';\n\ninterface EditDeckFormProps {\n  title: string;\n  description: string;\n  visibility: DeckVisibility;\n  cards: Card[];\n  onTitleChange: (value: string) => void;\n  onDescriptionChange: (value: string) => void;\n  onChangeVisibility: (value: DeckVisibility) => void;\n  onCardsChange: (value: Card[]) => void;\n  onSubmit: () => void;\n}\n\nexport default function EditDeckForm({\n  title,\n  description,\n  visibility,\n  cards,\n  onTitleChange,\n  onDescriptionChange,\n  onChangeVisibility,\n  onCardsChange,\n  onSubmit,\n}: EditDeckFormProps) {\n  const classes = useStyles();\n  const visibilityId = useUniqueId();\n\n  const [validateTitle, setValidateTitle] = useState(false);\n  const [forceValidate, setForceValidate] = useState(false);\n  const showTitleError = (forceValidate || validateTitle) && title.length === 0;\n\n  const changeCardSideText = (\n    cardIndex: number,\n    side: number,\n    value: string\n  ) => {\n    const newCards = [...cards];\n    const modifiedCard = { ...cards[cardIndex] };\n    modifiedCard.sides[side].text = value;\n    newCards[cardIndex] = modifiedCard;\n    onCardsChange(newCards);\n  };\n\n  const addCard = () => {\n    onCardsChange([...cards, { sides: [{ text: '' }, { text: '' }] }]);\n  };\n\n  const deleteCard = (index: number) => {\n    onCardsChange([...cards.slice(0, index), ...cards.slice(index + 1)]);\n  };\n\n  const moveCard = (currentIndex: number, targetIndex: number) => {\n    const newCards = [...cards];\n    newCards.splice(targetIndex, 0, newCards.splice(currentIndex, 1)[0]);\n    onCardsChange(newCards);\n  };\n\n  return (\n    <form\n      noValidate\n      className={classes.form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (\n          title.length === 0 ||\n          cards.some(({ sides }) =>\n            sides.some((side) => side.text.length === 0)\n          )\n        ) {\n          setForceValidate(true);\n          return;\n        }\n        onSubmit();\n      }}\n    >\n      <div className={classes.generalInfoContainer}>\n        <FormControl>\n          <TextField\n            required\n            variant=\"outlined\"\n            label=\"Title\"\n            fullWidth\n            error={showTitleError}\n            helperText={\n              showTitleError ? missingRequiredFieldErrorMessage : undefined\n            }\n            value={title}\n            onChange={(e) => {\n              setValidateTitle(true);\n              onTitleChange(e.target.value);\n            }}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            variant=\"outlined\"\n            label=\"Description\"\n            fullWidth\n            value={description}\n            onChange={(e) => onDescriptionChange(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <InputLabel id={visibilityId}>Visibility</InputLabel>\n          <Select\n            labelId={visibilityId}\n            variant=\"outlined\"\n            value={visibility}\n            onChange={(e) =>\n              onChangeVisibility(e.target.value as DeckVisibility)\n            }\n          >\n            <MenuItem value=\"PRIVATE\">Private</MenuItem>\n            <MenuItem value=\"PUBLIC\">Public</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n\n      <div className={classes.cardList}>\n        {cards.map(\n          ({ sides: [{ text: frontText }, { text: backText }] }, i) => (\n            <EditCardTile\n              key={i}\n              forceValidate={forceValidate}\n              cardNumber={i + 1}\n              frontText={frontText}\n              backText={backText}\n              onFrontTextChange={(value) => changeCardSideText(i, 0, value)}\n              onBackTextChange={(value) => changeCardSideText(i, 1, value)}\n              onDelete={cards.length > 1 ? () => deleteCard(i) : undefined}\n              onMoveUp={i !== 0 ? () => moveCard(i, i - 1) : undefined}\n              onMoveDown={\n                i !== cards.length - 1 ? () => moveCard(i, i + 1) : undefined\n              }\n            />\n          )\n        )}\n      </div>\n\n      <Button\n        variant=\"outlined\"\n        fullWidth\n        startIcon={<Add />}\n        onClick={addCard}\n      >\n        Add card\n      </Button>\n      <div className={classes.saveButtonContainer}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.appBar + 1,\n  },\n}));\n\nexport default useStyles;\n","import { Backdrop, CircularProgress, Container } from '@material-ui/core';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Card from '../../card/interfaces/card';\nimport AppBarWithBackButton from '../../common/components/app-bar-with-back-button';\nimport EditDeckForm from '../components/edit-deck-form';\nimport { decksService } from '../services/decks.service';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport useStyles from './add-deck.page.styles';\n\nexport default function AddDeckPage() {\n  const classes = useStyles();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [visibility, setVisibility] = useState<DeckVisibility>('PRIVATE');\n  const [cards, setCards] = useState<Card[]>([\n    { sides: [{ text: '' }, { text: '' }] },\n  ]);\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n\n  return (\n    <>\n      <Backdrop open={submitting} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <AppBarWithBackButton title=\"Add deck\" />\n      <Container>\n        <EditDeckForm\n          title={title}\n          description={description}\n          visibility={visibility}\n          cards={cards}\n          onTitleChange={setTitle}\n          onDescriptionChange={setDescription}\n          onChangeVisibility={setVisibility}\n          onCardsChange={setCards}\n          onSubmit={() => {\n            setSubmitting(true);\n            decksService\n              .create({ title, description, visibility, cards, tags: [] })\n              .then(() => history.goBack())\n              .catch(() => {\n                setSubmitting(false);\n              });\n          }}\n        />\n      </Container>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '2fr auto 3fr',\n    columnGap: theme.spacing(2),\n    gap: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Divider, Typography } from '@material-ui/core';\nimport React from 'react';\nimport Card from '../../card/interfaces/card';\nimport useStyles from './card-list.styles';\n\ninterface CardListProps {\n  cards: Card[];\n}\n\nexport default function CardList({ cards }: CardListProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {cards.map((card) => (\n        <React.Fragment key={card.id ?? JSON.stringify(card)}>\n          <Typography>{card.sides[0].text}</Typography>\n          <Divider orientation=\"vertical\" />\n          <Typography>{card.sides[1].text}</Typography>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: theme.spacing(3),\n  },\n  typography: {\n    fontSize: theme.typography.h5.fontSize,\n  },\n}));\n\nexport default useStyles;\n","import { Card as MuiCard, CardContent, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './card-side.styles';\n\ninterface CardSideProps {\n  text: string;\n  className?: string;\n}\n\nexport default function CardSide({ text, className }: CardSideProps) {\n  const classes = useStyles();\n  return (\n    <MuiCard className={clsx(classes.root, className)}>\n      <CardContent className={classes.content}>\n        <Typography className={classes.typography}>{text}</Typography>\n      </CardContent>\n    </MuiCard>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    gridTemplateAreas: '\"main\"',\n    transformStyle: 'preserve-3d',\n  },\n  cardFlipTransition: {\n    transition: 'transform 0.3s',\n  },\n  flip: {\n    transform: 'rotateX(180deg)',\n  },\n  cardSide: {\n    gridArea: 'main',\n    backfaceVisibility: 'hidden',\n  },\n  cardBack: {\n    transform: 'rotateX(180deg)',\n  },\n});\n\nexport default useStyles;\n","import clsx from 'clsx';\nimport CardSide from './card-side';\nimport useStyles from './card.styles';\n\ninterface CardProps {\n  frontText: string;\n  backText: string;\n  showBack: boolean;\n  className?: string;\n  onFlip: () => void;\n}\n\nexport default function Card({\n  frontText,\n  backText,\n  showBack,\n  className,\n  onFlip,\n}: CardProps) {\n  const classes = useStyles();\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        classes.cardFlipTransition,\n        showBack && classes.flip,\n        className\n      )}\n      onClick={onFlip}\n    >\n      <CardSide className={classes.cardSide} text={frontText} />\n      <CardSide\n        className={clsx(classes.cardSide, classes.cardBack)}\n        text={backText}\n      />\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  card: {\n    height: '100%',\n    width: '100%',\n  },\n  hiddenCard: {\n    display: 'none',\n  },\n});\n\nexport default useStyles;\n","import { useLayoutEffect, useState } from 'react';\nimport CardComponent from '../../card/components/card';\nimport Card from '../../card/interfaces/card';\nimport useStyles from './deck-stack.styles';\n\ninterface DeckStackProps {\n  cards: Card[];\n  activeIndex: number;\n  showCardBack: boolean;\n  className?: string;\n  onFlipCard: () => void;\n}\n\nexport default function DeckStack({\n  cards,\n  activeIndex,\n  showCardBack,\n  className,\n  onFlipCard,\n}: DeckStackProps) {\n  const activeCard = cards[activeIndex];\n  const classes = useStyles();\n\n  // Unmount the Card component each time the active card changes\n  const [unmount, setUnmount] = useState(false);\n\n  useLayoutEffect(() => {\n    setUnmount(true);\n  }, [activeIndex]);\n\n  useLayoutEffect(() => {\n    if (unmount) {\n      setUnmount(false);\n    }\n  }, [unmount]);\n\n  if (!activeCard) {\n    return (\n      <div className={className}>\n        {!unmount && (\n          <CardComponent\n            className={classes.card}\n            frontText=\"\"\n            backText=\"\"\n            showBack={false}\n            onFlip={() => {}}\n          />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      {!unmount && (\n        <CardComponent\n          className={classes.card}\n          frontText={activeCard.sides[0].text}\n          backText={activeCard.sides[1].text}\n          showBack={showCardBack}\n          onFlip={onFlipCard}\n        />\n      )}\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  positionIndicator: {\n    width: '10ch',\n  },\n});\n\nexport default useStyles;\n","import { IconButton, Typography } from '@material-ui/core';\nimport { ArrowBack, ArrowForward } from '@material-ui/icons';\nimport useStyles from './deck-stack-controls.styles';\n\ninterface DeckStackControlsProps {\n  currentIndex: number;\n  numberOfCards: number;\n  onBack: () => void;\n  onForward: () => void;\n}\n\nexport default function DeckStackControls({\n  currentIndex,\n  numberOfCards,\n  onBack,\n  onForward,\n}: DeckStackControlsProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={onBack}\n        disabled={currentIndex === 0 || numberOfCards === 0}\n      >\n        <ArrowBack />\n      </IconButton>\n      <div>\n        <Typography\n          variant=\"subtitle2\"\n          align=\"center\"\n          className={classes.positionIndicator}\n        >{`${\n          numberOfCards > 0 ? currentIndex + 1 : 0\n        }/${numberOfCards}`}</Typography>\n      </div>\n\n      <IconButton\n        onClick={onForward}\n        disabled={currentIndex === numberOfCards - 1 || numberOfCards === 0}\n      >\n        <ArrowForward />\n      </IconButton>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    padding: theme.spacing(3),\n  },\n  deckStack: {\n    height: 280,\n    width: '100%',\n    maxWidth: 397,\n  },\n  deckStackContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  section: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  progressBar: {\n    width: '100%',\n    maxWidth: 400,\n  },\n  tagList: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(0.5),\n  },\n}));\n\nexport default useStyles;\n","import { Chip, Slider, Typography } from '@material-ui/core';\nimport { useEffect, useLayoutEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Link from '../../common/components/link';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport AppBar from '../../dashboard/components/app-bar';\nimport CardList from '../components/card-list';\nimport DeckStack from '../components/deck-stack';\nimport DeckStackControls from '../components/deck-stack-controls';\nimport Deck from '../interfaces/deck';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './deck.page.styles';\n\nexport default function DeckPage() {\n  const classes = useStyles();\n  const [activeCardIndex, setActiveCardIndex] = useState(0);\n  const [showCardBack, setShowCardBack] = useState(false);\n  const { id: deckId } = useParams<{ id: string }>();\n  const [loading, setLoading] = useState(true);\n\n  const [deck, setDeck] = useState<Deck | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    decksService\n      .findOne(deckId)\n      .then((deck) => setDeck(deck))\n      .finally(() => setLoading(false));\n  }, [deckId]);\n\n  // Make sure the front of the card is showing when moving to another\n  useLayoutEffect(() => {\n    setShowCardBack(false);\n  }, [activeCardIndex]);\n\n  // Alphabetize deck tags\n  const sortedTags = useMemo(() => (deck?.tags ? [...deck.tags].sort() : []), [\n    deck?.tags,\n  ]);\n\n  return (\n    <div>\n      <AppBar />\n      <div className={classes.root}>\n        {/* Deck */}\n        <LoadableComponent loading={loading}>\n          {deck && (\n            <>\n              <section className={classes.section}>\n                <div>\n                  <Typography variant=\"h4\">{deck.title}</Typography>\n                  <Typography variant=\"subtitle1\">\n                    by{' '}\n                    <Link to={`/users/${deck.authorId}`} color=\"inherit\">\n                      {deck.authorId}\n                    </Link>\n                  </Typography>\n                </div>\n                <div className={classes.deckStackContainer}>\n                  <DeckStack\n                    className={classes.deckStack}\n                    cards={deck.cards}\n                    activeIndex={activeCardIndex}\n                    showCardBack={showCardBack}\n                    onFlipCard={() => setShowCardBack((state) => !state)}\n                  />\n                  <DeckStackControls\n                    currentIndex={activeCardIndex}\n                    numberOfCards={deck.cards.length}\n                    onBack={() => {\n                      setActiveCardIndex((state) => state - 1);\n                    }}\n                    onForward={() => {\n                      setActiveCardIndex((state) => state + 1);\n                    }}\n                  />\n                  <Slider\n                    className={classes.progressBar}\n                    value={activeCardIndex}\n                    max={deck.cards.length - 1}\n                    valueLabelFormat={(value) => value + 1}\n                    onChange={(_event, value) =>\n                      setActiveCardIndex(value as number)\n                    }\n                  />\n                </div>\n              </section>\n              {/* Tag list */}\n              <section className={classes.section}>\n                <Typography variant=\"h5\">Tags</Typography>\n                <div className={classes.tagList}>\n                  {sortedTags.map((tag) => (\n                    <Chip key={tag} label={tag} variant=\"outlined\" />\n                  ))}\n                </div>\n              </section>\n              {/* Term list */}\n              <section className={classes.section}>\n                <Typography variant=\"h5\">Terms</Typography>\n                <CardList cards={deck.cards} />\n              </section>\n            </>\n          )}\n        </LoadableComponent>\n      </div>\n    </div>\n  );\n}\n","import { Redirect, RouteProps } from 'react-router';\nimport { Route } from 'react-router-dom';\nimport { authService } from '../../auth/services/auth.service';\nimport routes from '../constants/routes';\n\ninterface ProtectedRouteProps extends RouteProps {\n  path: string;\n}\n\nexport default function ProtectedRoute(props: ProtectedRouteProps) {\n  return authService.isAuthenticated() ? (\n    <Route {...props} />\n  ) : (\n    <Redirect\n      to={{\n        pathname: routes.login,\n        search: `?continue=${encodeURIComponent(props.path)}`,\n      }}\n    />\n  );\n}\n","import { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport LoginPage from '../../auth/pages/login.page';\nimport RegistrationPage from '../../auth/pages/registration.page';\nimport routes from '../constants/routes';\nimport DashboardPage from '../../dashboard/pages/dashboard.page';\nimport HomePage from '../../dashboard/pages/home.page';\nimport AddDeckPage from '../../deck/pages/add-deck.page';\nimport DeckPage from '../../deck/pages/deck.page';\nimport ProtectedRoute from './protected-route';\nimport { useContext } from 'react';\nimport CredentialsContext from '../../auth/contexts/credentials.context';\n\nexport default function Router() {\n  const credentials = useContext(CredentialsContext);\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path={routes.home}>\n          {credentials ? <Redirect to={routes.dashboard} /> : <HomePage />}\n        </Route>\n        <ProtectedRoute path={routes.dashboard}>\n          <DashboardPage />\n        </ProtectedRoute>\n        <Route exact path={routes.deckView}>\n          <DeckPage />\n        </Route>\n        <ProtectedRoute path={routes.deckEdit}>\n          <AddDeckPage />\n        </ProtectedRoute>\n        <ProtectedRoute path={routes.deckAdd}>\n          <AddDeckPage />\n        </ProtectedRoute>\n        <Route path={routes.registration}>\n          <RegistrationPage />\n        </Route>\n        <Route path={routes.login}>\n          <LoginPage />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n","import { CssBaseline } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport CredentialsContext from './auth/contexts/credentials.context';\nimport Credentials from './auth/interfaces/credentials';\nimport { retrieve } from './auth/utils/credentials.utils';\nimport Router from './router/components/router';\n\nexport default function App() {\n  const [credentials, setCredentials] = useState<Credentials | null>(retrieve);\n\n  useEffect(() => {\n    const syncCredentials = () => {\n      setCredentials(retrieve);\n    };\n    document.addEventListener('localStorageServiceChange', syncCredentials);\n    return () =>\n      document.removeEventListener(\n        'localStorageServiceChange',\n        syncCredentials\n      );\n  }, []);\n\n  return (\n    <>\n      <CredentialsContext.Provider value={credentials}>\n        <CssBaseline />\n        <Router />\n      </CredentialsContext.Provider>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}