{"version":3,"sources":["auth/contexts/authentication-status-update.context.ts","auth/contexts/authentication-status.context.ts","common/constants/api-client.ts","auth/services/auth.service.ts","common/constants/paths.ts","common/hooks/use-unique-id.tsx","deck/services/decks.service.ts","dashboard/components/app-bar.styles.tsx","dashboard/components/app-bar.tsx","common/components/link.tsx","dashboard/components/deck-info-tile.styles.tsx","dashboard/components/deck-info-tile.tsx","dashboard/pages/dashboard.page.styles.tsx","dashboard/pages/dashboard.page.tsx","common/hooks/use-debounced-file.tsx","auth/configs/auth.config.ts","common/components/loadable-component.styles.tsx","common/components/loadable-component.tsx","dashboard/pages/home.page.styles.tsx","dashboard/pages/home.page.tsx","common/components/app-bar-with-back-button.tsx","common/constants/missing-required-field-error-message.tsx","deck/components/edit-card-tile.styles.tsx","deck/components/edit-card-tile.tsx","deck/components/edit-deck-form.styles.tsx","deck/components/edit-deck-form.tsx","deck/pages/add-deck.page.styles.tsx","deck/pages/add-deck.page.tsx","deck/components/card-list.styles.tsx","deck/components/card-list.tsx","card/components/card-side.styles.tsx","card/components/card-side.tsx","card/components/card.styles.tsx","card/components/card.tsx","deck/components/deck-stack.styles.tsx","deck/components/deck-stack.tsx","deck/components/deck-stack-controls.styles.tsx","deck/components/deck-stack-controls.tsx","deck/pages/deck.page.styles.tsx","deck/pages/deck.page.tsx","router.tsx","app.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["AuthenticationStatusUpdateContext","createContext","AuthenticationStatusContext","loggedIn","apiClient","axios","create","baseURL","process","withCredentials","interceptors","request","use","config","accessToken","localStorage","getItem","headers","authService","http","idToken","a","this","post","data","decodedAccessToken","setItem","JSON","stringify","removeItem","token","get","accessTokenPayload","parse","sub","paths","home","dashboard","decks","deckSearch","deckAdd","uniqueIdNumber","useUniqueId","useRef","current","decksService","title","description","visibility","cards","authorId","getCurrentUser","map","sides","frontText","text","backText","id","findOneDeckResponseToDeck","params","count","delete","card","tags","useStyles","makeStyles","homeLink","textTransform","AppBar","classes","position","Toolbar","Button","color","component","Link","to","className","Typography","variant","children","RouterLink","theme","root","cursor","padding","spacing","backgroundColor","palette","grey","buttonBox","display","justifyContent","DeckInfoTile","numberOfCards","deckId","author","onClick","onDelete","onExport","onEdit","Paper","e","stopPropagation","content","flexDirection","gap","margin","paginationContainer","deckList","sortAndSearchContainer","addButton","marginLeft","DashboardPage","userId","pageSize","useTheme","useState","setDecks","totalDecks","setTotalDecks","page","setPage","loading","setLoading","history","useHistory","search","setSearch","searchValue","value","timeout","debouncedValue","setDebouncedValue","lastFired","Date","now","useEffect","handle","setTimeout","clearTimeout","useDebouncedValue","transitions","duration","short","findDecks","findAll","then","res","finally","orderTitleBy","take","skip","caseInsensitive","titleContains","undefined","showDialog","setShowDialog","deckToDelete","setDeckToDelete","Dialog","open","onBackdropClick","onExited","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","remove","InputLabel","Select","labelId","MenuItem","TextField","label","onChange","target","size","deck","length","push","Pagination","Math","ceil","disabled","googleClientId","LoadableComponent","clsx","CircularProgress","backDrop","zIndex","appBar","loginSection","primary","dark","contrastText","alignItems","exampleDecksContainer","exampleDecksSection","marginRight","HomePage","loggingIn","setLoggingIn","updateAuthenticationStatus","useContext","exampleDecks","setExampleDecks","Backdrop","clientId","responseType","onRequest","onSuccess","logIn","tokenId","onFailure","AppBarWithBackButton","onBack","IconButton","edge","goBack","ArrowBack","missingRequiredFieldErrorMessage","textFieldContainer","gridTemplateColumns","cardContent","actionArea","EditCardTile","cardNumber","forceValidate","onFrontTextChange","onBackTextChange","onMoveUp","onMoveDown","validateFrontText","setValidateFrontText","frontTextValid","frontTextError","validateBackText","setValidateBackText","backTextValid","backTextError","Card","required","multiline","error","helperText","Delete","ArrowUpward","ArrowDownward","form","marginTop","marginBottom","generalInfoContainer","cardList","saveButtonContainer","EditDeckForm","onTitleChange","onDescriptionChange","onChangeVisibility","onCardsChange","onSubmit","visibilityId","validateTitle","setValidateTitle","setForceValidate","showTitleError","changeCardSideText","cardIndex","side","newCards","modifiedCard","moveCard","currentIndex","targetIndex","splice","noValidate","preventDefault","some","FormControl","fullWidth","i","index","slice","startIcon","Add","type","backdrop","AddDeckPage","setTitle","setDescription","setVisibility","setCards","submitting","setSubmitting","Container","catch","columnGap","CardList","Fragment","Divider","orientation","textAlign","typography","fontSize","h5","CardSide","CardContent","gridTemplateAreas","transformStyle","cardFlipTransition","transition","flip","transform","cardSide","gridArea","backfaceVisibility","cardBack","showBack","onFlip","height","width","hiddenCard","DeckStack","activeIndex","showCardBack","onFlipCard","activeCard","unmount","setUnmount","useLayoutEffect","positionIndicator","DeckStackControls","onForward","align","ArrowForward","deckStack","maxWidth","deckStackContainer","section","progressBar","tagList","flexWrap","DeckPage","activeCardIndex","setActiveCardIndex","setShowCardBack","useParams","setDeck","findOne","sortedTags","useMemo","sort","state","Slider","max","valueLabelFormat","_event","tag","Chip","Router","isAuthenticated","exact","path","App","exp","authenticationStatus","setAuthenticatinStatus","CssBaseline","Provider","update","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.95e76f33.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport AuthenticationStatus from '../interfaces/authentication-status';\n\n/** Context for passing a callback to update authentication status. */\nexport const AuthenticationStatusUpdateContext = createContext<\n  (update: Partial<AuthenticationStatus>) => void\n>(() => {});\n","import { createContext } from 'react';\nimport AuthenticationStatus from '../interfaces/authentication-status';\n\nexport const AuthenticationStatusContext = createContext<AuthenticationStatus>({\n  loggedIn: false,\n});\n","import axios from 'axios';\n\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true,\n});\n\n// Send the access token with requests if present\napiClient.interceptors.request.use((config) => {\n  const accessToken = localStorage.getItem('accessToken');\n  if (accessToken) {\n    config.headers['Authorization'] = `Bearer ${accessToken}`;\n  }\n  return config;\n});\n\nexport default apiClient;\n","import { AxiosInstance } from 'axios';\nimport apiClient from '../../common/constants/api-client';\nimport { LogInResponse } from '../interfaces/log-in-response';\n\nexport class AuthService {\n  constructor(private http: AxiosInstance) {}\n\n  async logIn(idToken: string) {\n    const {\n      data: { accessToken, decodedAccessToken },\n    } = await this.http.post<LogInResponse>('/auth/access-tokens', {\n      idToken,\n    });\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem(\n      'accessTokenPayload',\n      JSON.stringify(decodedAccessToken)\n    );\n    return decodedAccessToken;\n  }\n\n  async logOut() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('accessTokenPayload');\n    // TODO: Revoke token from server\n  }\n\n  async verifyAccessToken(token: string): Promise<boolean> {\n    try {\n      await this.http.get(`/auth/access-tokens/${token}`);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  getCurrentUser(): string | null {\n    const accessTokenPayload = localStorage.getItem('accessTokenPayload');\n    if (!accessTokenPayload) {\n      return null;\n    }\n    return JSON.parse(accessTokenPayload).sub;\n  }\n}\n\nexport const authService = new AuthService(apiClient);\n","const paths = {\n  home: '/',\n  dashboard: '/dashboard',\n  decks: '/decks',\n  deckSearch: '/search-decks',\n  deckAdd: '/add-deck',\n};\n\nexport default paths;\n","import { useRef } from 'react';\n\nlet uniqueIdNumber = 0;\n\nexport default function useUniqueId() {\n  const uniqueId = useRef(`unique-id-${uniqueIdNumber++}`);\n  return uniqueId.current;\n}\n","import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  homeLink: {\n    textTransform: 'none',\n  },\n});\n\nexport default useStyles;\n","import {\n  AppBar as MuiAppBar,\n  Button,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport paths from '../../common/constants/paths';\nimport useStyles from './app-bar.styles';\n\nexport default function AppBar() {\n  const classes = useStyles();\n  return (\n    <MuiAppBar position=\"sticky\">\n      <Toolbar>\n        <Button\n          color=\"inherit\"\n          component={Link}\n          to={paths.home}\n          className={classes.homeLink}\n        >\n          <Typography variant=\"h6\">Basic Flashcards</Typography>\n        </Button>\n      </Toolbar>\n    </MuiAppBar>\n  );\n}\n","import { Link as MuiLink, LinkProps as MuiLinkProps } from '@material-ui/core';\nimport { ReactNode } from 'react';\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\ninterface LinkProps {\n  to: RouterLinkProps['to'];\n  color?: MuiLinkProps['color'];\n  children?: ReactNode;\n}\n\nexport default function Link({ to, color, children }: LinkProps) {\n  return (\n    <MuiLink component={RouterLink} to={to} color={color}>\n      {children}\n    </MuiLink>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    cursor: 'pointer',\n    padding: theme.spacing(2),\n    '&:hover': {\n      backgroundColor: theme.palette.grey[50],\n    },\n  },\n  buttonBox: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default useStyles;\n","import { Button, Paper, Typography } from '@material-ui/core';\nimport Link from '../../common/components/link';\nimport useStyles from './deck-info-tile.styles';\n\ninterface DeckInfoTileProps {\n  title: string;\n  deckId: string;\n  numberOfCards: number;\n  author?: string;\n  onClick?: () => void;\n  onDelete?: () => void;\n  onExport?: () => void;\n  onEdit?: () => void;\n}\n\nexport default function DeckInfoTile({\n  title,\n  deckId,\n  numberOfCards,\n  author,\n  onClick,\n  onDelete,\n  onExport,\n  onEdit,\n}: DeckInfoTileProps) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root} onClick={onClick}>\n      <Typography variant=\"h5\">{title}</Typography>\n      <Typography>{`${numberOfCards} cards`}</Typography>\n      {author && (\n        <Typography>\n          By <Link to={`/users/${author}`}>{author}</Link>\n        </Typography>\n      )}\n      {(onDelete || onExport || onEdit) && (\n        <div className={classes.buttonBox}>\n          {onDelete && (\n            <Button\n              color=\"secondary\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onDelete();\n              }}\n            >\n              Delete\n            </Button>\n          )}\n          {onExport && (\n            <Button\n              onClick={(e) => {\n                e.stopPropagation();\n                onExport();\n              }}\n            >\n              Export\n            </Button>\n          )}\n          {onEdit && (\n            <Button\n              color=\"primary\"\n              onClick={(e: any) => {\n                e.stopPropagation();\n                onEdit();\n              }}\n            >\n              Edit\n            </Button>\n          )}\n        </div>\n      )}\n    </Paper>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    margin: theme.spacing(3),\n  },\n  paginationContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  deckList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  sortAndSearchContainer: {\n    display: 'flex',\n    gap: theme.spacing(2),\n  },\n  addButton: {\n    marginLeft: 'auto',\n  },\n}));\n\nexport default useStyles;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport paths from '../../common/constants/paths';\nimport useDebouncedValue from '../../common/hooks/use-debounced-file';\nimport useUniqueId from '../../common/hooks/use-unique-id';\nimport Deck from '../../deck/interfaces/deck';\nimport { FindAllDecksParams } from '../../deck/interfaces/find-all-decks-params';\nimport { decksService } from '../../deck/services/decks.service';\nimport AppBar from '../components/app-bar';\nimport DeckInfoTile from '../components/deck-info-tile';\nimport useStyles from './dashboard.page.styles';\n\ninterface DashboardPageProps {\n  userId: string;\n  pageSize?: number;\n}\n\nexport default function DashboardPage({\n  userId,\n  pageSize = 10,\n}: DashboardPageProps) {\n  const theme = useTheme();\n  const [decks, setDecks] = useState<Deck[]>([]);\n  const [totalDecks, setTotalDecks] = useState(0);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const classes = useStyles();\n  const id = useUniqueId();\n  const [search, setSearch] = useState('');\n  const searchValue = useDebouncedValue(\n    search,\n    theme.transitions.duration.short\n  );\n\n  const findDecks = (params: FindAllDecksParams) => {\n    setLoading(true);\n    decksService\n      .findAll({\n        ...params,\n      })\n      .then((res) => {\n        setDecks(res.decks);\n        setTotalDecks(res.count);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    findDecks({\n      authorId: [userId],\n      orderTitleBy: 'asc',\n      take: pageSize,\n      skip: (page - 1) * pageSize,\n      caseInsensitive: true,\n      titleContains: searchValue ? searchValue : undefined,\n    });\n  }, [page, pageSize, searchValue, userId]);\n\n  const [showDialog, setShowDialog] = useState(false);\n  const [deckToDelete, setDeckToDelete] = useState<Deck | null>(null);\n\n  return (\n    <div>\n      <Dialog\n        open={showDialog}\n        onBackdropClick={() => setShowDialog(false)}\n        onExited={() => setDeckToDelete(null)}\n      >\n        <DialogTitle>Delete deck?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete deck \"{deckToDelete?.title}\"? This\n            action cannot be undone.\n          </DialogContentText>\n          <DialogActions>\n            <Button\n              color=\"primary\"\n              autoFocus\n              onClick={() => {\n                setShowDialog(false);\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                decksService\n                  .remove(deckToDelete?.id ?? '')\n                  .then(() =>\n                    findDecks({\n                      authorId: [userId],\n                      orderTitleBy: 'asc',\n                      take: pageSize,\n                      skip: (page - 1) * pageSize,\n                      caseInsensitive: true,\n                      titleContains: searchValue ? searchValue : undefined,\n                    })\n                  )\n                  .finally(() => setShowDialog(false));\n              }}\n            >\n              Delete\n            </Button>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n      <AppBar />\n      <div className={classes.content}>\n        <Typography variant=\"h2\">Your decks</Typography>\n\n        <div className={classes.sortAndSearchContainer}>\n          <div>\n            <InputLabel id={id}>Sort by</InputLabel>\n            <Select labelId={id} value=\"title\">\n              <MenuItem value=\"title\">Title</MenuItem>\n            </Select>\n          </div>\n          <TextField\n            label=\"Search\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"small\"\n            component={Link}\n            to={paths.deckAdd}\n            className={classes.addButton}\n          >\n            Add Deck\n          </Button>\n        </div>\n        <div className={classes.paginationContainer}>\n          <div className={classes.deckList}>\n            {decks.map((deck) => (\n              <DeckInfoTile\n                key={deck.id}\n                deckId={deck.id ?? ''}\n                title={deck.title}\n                numberOfCards={deck.cards.length}\n                onClick={() => history.push(`${paths.decks}/${deck.id}`)}\n                onDelete={() => {\n                  setDeckToDelete(deck);\n                  setShowDialog(true);\n                }}\n                onEdit={() => history.push(`${paths.decks}/${deck.id}/edit`)}\n              />\n            ))}\n          </div>\n          <Pagination\n            count={Math.ceil(totalDecks / pageSize)}\n            page={page}\n            onChange={(e, value) => setPage(value)}\n            disabled={loading}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\n\nexport default function useDebouncedValue<T>(value: T, timeout: number): T {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  const lastFired = useRef(Date.now());\n\n  useEffect(() => {\n    const handle = setTimeout(() => {\n      setDebouncedValue(value);\n      lastFired.current = Date.now();\n    }, timeout - (Date.now() - lastFired.current));\n    return () => clearTimeout(handle);\n  }, [value, timeout]);\n\n  return debouncedValue;\n}\n","export const googleClientId = process.env.REACT_APP_GOOGLE_CLIENT_ID ?? '';\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\nexport default useStyles;\n","import { CircularProgress } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ReactNode } from 'react';\nimport useStyles from './loadable-component.styles';\n\ninterface LoadableComponentProps {\n  loading?: boolean;\n  children: ReactNode;\n  className?: string;\n}\n\nexport default function LoadableComponent({\n  loading,\n  children,\n  className,\n}: LoadableComponentProps) {\n  const classes = useStyles();\n\n  return loading ? (\n    <div className={clsx(classes.root, className)}>\n      <CircularProgress />\n    </div>\n  ) : (\n    <>{children}</>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backDrop: {\n    zIndex: theme.zIndex.appBar + 1,\n  },\n  loginSection: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    gap: theme.spacing(2),\n  },\n  exampleDecksContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  exampleDecksSection: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import { Backdrop, CircularProgress, Typography } from '@material-ui/core';\nimport { useContext, useEffect, useState } from 'react';\nimport { GoogleLogin, GoogleLoginResponse } from 'react-google-login';\nimport { useHistory } from 'react-router';\nimport { googleClientId } from '../../auth/configs/auth.config';\nimport { AuthenticationStatusUpdateContext } from '../../auth/contexts/authentication-status-update.context';\nimport { authService } from '../../auth/services/auth.service';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport paths from '../../common/constants/paths';\nimport Deck from '../../deck/interfaces/deck';\nimport { decksService } from '../../deck/services/decks.service';\nimport AppBar from '../components/app-bar';\nimport DeckInfoTile from '../components/deck-info-tile';\nimport useStyles from './home.page.styles';\n\nexport default function HomePage() {\n  const classes = useStyles();\n  const [loggingIn, setLoggingIn] = useState(false);\n  const updateAuthenticationStatus = useContext(\n    AuthenticationStatusUpdateContext\n  );\n\n  const [loading, setLoading] = useState(true);\n\n  const history = useHistory();\n\n  const [exampleDecks, setExampleDecks] = useState<Deck[]>([]);\n\n  useEffect(() => {\n    decksService\n      .findAll({ orderTitleBy: 'asc', take: 3 })\n      .then(({ decks }) => setExampleDecks(decks))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div>\n      <Backdrop className={classes.backDrop} open={loggingIn}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <AppBar />\n      <main>\n        <div className={classes.loginSection}>\n          <Typography variant=\"h1\">Log in to create decks.</Typography>\n          <GoogleLogin\n            clientId={googleClientId}\n            responseType=\"id_token\"\n            onRequest={() => setLoggingIn(true)}\n            onSuccess={(res) => {\n              authService\n                .logIn((res as GoogleLoginResponse).tokenId)\n                .then(() => updateAuthenticationStatus({ loggedIn: true }))\n                .finally(() => setLoggingIn(false));\n            }}\n            onFailure={() => setLoggingIn(false)}\n          />\n        </div>\n        <div className={classes.exampleDecksSection}>\n          <Typography variant=\"h2\">Decks</Typography>\n          <LoadableComponent loading={loading}>\n            <div className={classes.exampleDecksContainer}>\n              {exampleDecks.map((deck) => (\n                <DeckInfoTile\n                  key={deck.id}\n                  deckId={deck.id ?? ''}\n                  title={deck.title}\n                  numberOfCards={deck.cards.length}\n                  author={deck.authorId ?? ''}\n                  onClick={() => history.push(`${paths.decks}/${deck.id}`)}\n                />\n              ))}\n            </div>\n          </LoadableComponent>\n        </div>\n      </main>\n    </div>\n  );\n}\n","import {\n  AppBar as MuiAppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\nimport { useHistory } from 'react-router';\n\ninterface AppBarWithBackButtonProps {\n  title: string;\n  onBack?: () => void;\n}\n\nexport default function AppBarWithBackButton({\n  title,\n  onBack,\n}: AppBarWithBackButtonProps) {\n  const history = useHistory();\n  return (\n    <MuiAppBar position=\"sticky\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={onBack ?? (() => history.goBack())}\n        >\n          <ArrowBack />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Toolbar>\n    </MuiAppBar>\n  );\n}\n","const missingRequiredFieldErrorMessage = 'This field is required.';\n\nexport default missingRequiredFieldErrorMessage;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldContainer: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: theme.spacing(2),\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    margin: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\nexport default useStyles;\n","import { Card, IconButton, TextField, Typography } from '@material-ui/core';\nimport { ArrowDownward, ArrowUpward, Delete } from '@material-ui/icons';\nimport { useState } from 'react';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useStyles from './edit-card-tile.styles';\n\ninterface EditCardTileProps {\n  cardNumber: number;\n  frontText: string;\n  backText: string;\n  forceValidate?: boolean;\n  onFrontTextChange: (value: string) => void;\n  onBackTextChange: (value: string) => void;\n  onDelete?: () => void;\n  onMoveUp?: () => void;\n  onMoveDown?: () => void;\n}\n\nexport default function EditCardTile({\n  cardNumber,\n  frontText,\n  backText,\n  forceValidate,\n  onFrontTextChange,\n  onBackTextChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n}: EditCardTileProps) {\n  const classes = useStyles();\n\n  const [validateFrontText, setValidateFrontText] = useState(false);\n  const frontTextValid = frontText.length > 0;\n  const frontTextError =\n    (forceValidate || validateFrontText) && !frontTextValid;\n\n  const [validateBackText, setValidateBackText] = useState(false);\n  const backTextValid = backText.length > 0;\n  const backTextError = (forceValidate || validateBackText) && !backTextValid;\n\n  return (\n    <Card>\n      <div className={classes.cardContent}>\n        <Typography variant=\"h5\">{`Card ${cardNumber}`}</Typography>\n        <div className={classes.textFieldContainer}>\n          <TextField\n            label=\"Term\"\n            required\n            variant=\"outlined\"\n            multiline\n            value={frontText}\n            error={frontTextError}\n            helperText={\n              frontTextError ? missingRequiredFieldErrorMessage : undefined\n            }\n            onChange={(e) => {\n              setValidateFrontText(true);\n              onFrontTextChange(e.target.value);\n            }}\n          />\n          <TextField\n            label=\"Definition\"\n            required\n            variant=\"outlined\"\n            multiline\n            value={backText}\n            error={backTextError}\n            helperText={\n              backTextError ? missingRequiredFieldErrorMessage : undefined\n            }\n            onChange={(e) => {\n              setValidateBackText(true);\n              onBackTextChange(e.target.value);\n            }}\n          />\n        </div>\n        <div className={classes.actionArea}>\n          <IconButton onClick={onDelete} disabled={!onDelete}>\n            <Delete />\n          </IconButton>\n          <IconButton onClick={onMoveUp} disabled={!onMoveUp}>\n            <ArrowUpward />\n          </IconButton>\n          <IconButton onClick={onMoveDown} disabled={!onMoveDown}>\n            <ArrowDownward />\n          </IconButton>\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  generalInfoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  cardList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  saveButtonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default useStyles;\n","import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useState } from 'react';\nimport Card from '../../card/interfaces/card';\nimport useUniqueId from '../../common/hooks/use-unique-id';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport EditCardTile from './edit-card-tile';\nimport useStyles from './edit-deck-form.styles';\n\ninterface EditDeckFormProps {\n  title: string;\n  description: string;\n  visibility: DeckVisibility;\n  cards: Card[];\n  onTitleChange: (value: string) => void;\n  onDescriptionChange: (value: string) => void;\n  onChangeVisibility: (value: DeckVisibility) => void;\n  onCardsChange: (value: Card[]) => void;\n  onSubmit: () => void;\n}\n\nexport default function EditDeckForm({\n  title,\n  description,\n  visibility,\n  cards,\n  onTitleChange,\n  onDescriptionChange,\n  onChangeVisibility,\n  onCardsChange,\n  onSubmit,\n}: EditDeckFormProps) {\n  const classes = useStyles();\n  const visibilityId = useUniqueId();\n\n  const [validateTitle, setValidateTitle] = useState(false);\n  const [forceValidate, setForceValidate] = useState(false);\n  const showTitleError = (forceValidate || validateTitle) && title.length === 0;\n\n  const changeCardSideText = (\n    cardIndex: number,\n    side: number,\n    value: string\n  ) => {\n    const newCards = [...cards];\n    const modifiedCard = { ...cards[cardIndex] };\n    modifiedCard.sides[side].text = value;\n    newCards[cardIndex] = modifiedCard;\n    onCardsChange(newCards);\n  };\n\n  const addCard = () => {\n    onCardsChange([...cards, { sides: [{ text: '' }, { text: '' }] }]);\n  };\n\n  const deleteCard = (index: number) => {\n    onCardsChange([...cards.slice(0, index), ...cards.slice(index + 1)]);\n  };\n\n  const moveCard = (currentIndex: number, targetIndex: number) => {\n    const newCards = [...cards];\n    newCards.splice(targetIndex, 0, newCards.splice(currentIndex, 1)[0]);\n    onCardsChange(newCards);\n  };\n\n  return (\n    <form\n      noValidate\n      className={classes.form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (\n          title.length === 0 ||\n          cards.some(({ sides }) =>\n            sides.some((side) => side.text.length === 0)\n          )\n        ) {\n          setForceValidate(true);\n          return;\n        }\n        onSubmit();\n      }}\n    >\n      <div className={classes.generalInfoContainer}>\n        <FormControl>\n          <TextField\n            required\n            variant=\"outlined\"\n            label=\"Title\"\n            fullWidth\n            error={showTitleError}\n            helperText={\n              showTitleError ? missingRequiredFieldErrorMessage : undefined\n            }\n            value={title}\n            onChange={(e) => {\n              setValidateTitle(true);\n              onTitleChange(e.target.value);\n            }}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            variant=\"outlined\"\n            label=\"Description\"\n            fullWidth\n            value={description}\n            onChange={(e) => onDescriptionChange(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <InputLabel id={visibilityId}>Visibility</InputLabel>\n          <Select\n            labelId={visibilityId}\n            variant=\"outlined\"\n            value={visibility}\n            onChange={(e) =>\n              onChangeVisibility(e.target.value as DeckVisibility)\n            }\n          >\n            <MenuItem value=\"PRIVATE\">Private</MenuItem>\n            <MenuItem value=\"PUBLIC\">Public</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n\n      <div className={classes.cardList}>\n        {cards.map(\n          ({ sides: [{ text: frontText }, { text: backText }] }, i) => (\n            <EditCardTile\n              key={i}\n              forceValidate={forceValidate}\n              cardNumber={i + 1}\n              frontText={frontText}\n              backText={backText}\n              onFrontTextChange={(value) => changeCardSideText(i, 0, value)}\n              onBackTextChange={(value) => changeCardSideText(i, 1, value)}\n              onDelete={cards.length > 1 ? () => deleteCard(i) : undefined}\n              onMoveUp={i !== 0 ? () => moveCard(i, i - 1) : undefined}\n              onMoveDown={\n                i !== cards.length - 1 ? () => moveCard(i, i + 1) : undefined\n              }\n            />\n          )\n        )}\n      </div>\n\n      <Button\n        variant=\"outlined\"\n        fullWidth\n        startIcon={<Add />}\n        onClick={addCard}\n      >\n        Add card\n      </Button>\n      <div className={classes.saveButtonContainer}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.appBar + 1,\n  },\n}));\n\nexport default useStyles;\n","import { Backdrop, CircularProgress, Container } from '@material-ui/core';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Card from '../../card/interfaces/card';\nimport AppBarWithBackButton from '../../common/components/app-bar-with-back-button';\nimport EditDeckForm from '../components/edit-deck-form';\nimport { decksService } from '../services/decks.service';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport useStyles from './add-deck.page.styles';\n\nexport default function AddDeckPage() {\n  const classes = useStyles();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [visibility, setVisibility] = useState<DeckVisibility>('PRIVATE');\n  const [cards, setCards] = useState<Card[]>([\n    { sides: [{ text: '' }, { text: '' }] },\n  ]);\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n\n  return (\n    <>\n      <Backdrop open={submitting} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <AppBarWithBackButton title=\"Add deck\" />\n      <Container>\n        <EditDeckForm\n          title={title}\n          description={description}\n          visibility={visibility}\n          cards={cards}\n          onTitleChange={setTitle}\n          onDescriptionChange={setDescription}\n          onChangeVisibility={setVisibility}\n          onCardsChange={setCards}\n          onSubmit={() => {\n            setSubmitting(true);\n            decksService\n              .create({ title, description, visibility, cards, tags: [] })\n              .then(() => history.goBack())\n              .catch(() => {\n                setSubmitting(false);\n              });\n          }}\n        />\n      </Container>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '2fr auto 3fr',\n    columnGap: theme.spacing(2),\n    gap: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Divider, Typography } from '@material-ui/core';\nimport React from 'react';\nimport Card from '../../card/interfaces/card';\nimport useStyles from './card-list.styles';\n\ninterface CardListProps {\n  cards: Card[];\n}\n\nexport default function CardList({ cards }: CardListProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {cards.map((card) => (\n        <React.Fragment key={card.id ?? JSON.stringify(card)}>\n          <Typography>{card.sides[0].text}</Typography>\n          <Divider orientation=\"vertical\" />\n          <Typography>{card.sides[1].text}</Typography>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: theme.spacing(3),\n  },\n  typography: {\n    fontSize: theme.typography.h5.fontSize,\n  },\n}));\n\nexport default useStyles;\n","import { Card as MuiCard, CardContent, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport useStyles from './card-side.styles';\n\ninterface CardSideProps {\n  text: string;\n  className?: string;\n}\n\nexport default function CardSide({ text, className }: CardSideProps) {\n  const classes = useStyles();\n  return (\n    <MuiCard className={clsx(classes.root, className)}>\n      <CardContent className={classes.content}>\n        <Typography className={classes.typography}>{text}</Typography>\n      </CardContent>\n    </MuiCard>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    gridTemplateAreas: '\"main\"',\n    transformStyle: 'preserve-3d',\n  },\n  cardFlipTransition: {\n    transition: 'transform 0.3s',\n  },\n  flip: {\n    transform: 'rotateX(180deg)',\n  },\n  cardSide: {\n    gridArea: 'main',\n    backfaceVisibility: 'hidden',\n  },\n  cardBack: {\n    transform: 'rotateX(180deg)',\n  },\n});\n\nexport default useStyles;\n","import clsx from 'clsx';\nimport CardSide from './card-side';\nimport useStyles from './card.styles';\n\ninterface CardProps {\n  frontText: string;\n  backText: string;\n  showBack: boolean;\n  className?: string;\n  onFlip: () => void;\n}\n\nexport default function Card({\n  frontText,\n  backText,\n  showBack,\n  className,\n  onFlip,\n}: CardProps) {\n  const classes = useStyles();\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        classes.cardFlipTransition,\n        showBack && classes.flip,\n        className\n      )}\n      onClick={onFlip}\n    >\n      <CardSide className={classes.cardSide} text={frontText} />\n      <CardSide\n        className={clsx(classes.cardSide, classes.cardBack)}\n        text={backText}\n      />\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  card: {\n    height: '100%',\n    width: '100%',\n  },\n  hiddenCard: {\n    display: 'none',\n  },\n});\n\nexport default useStyles;\n","import { useLayoutEffect, useState } from 'react';\nimport CardComponent from '../../card/components/card';\nimport Card from '../../card/interfaces/card';\nimport useStyles from './deck-stack.styles';\n\ninterface DeckStackProps {\n  cards: Card[];\n  activeIndex: number;\n  showCardBack: boolean;\n  className?: string;\n  onFlipCard: () => void;\n}\n\nexport default function DeckStack({\n  cards,\n  activeIndex,\n  showCardBack,\n  className,\n  onFlipCard,\n}: DeckStackProps) {\n  const activeCard = cards[activeIndex];\n  const classes = useStyles();\n\n  // Unmount the Card component each time the active card changes\n  const [unmount, setUnmount] = useState(false);\n\n  useLayoutEffect(() => {\n    setUnmount(true);\n  }, [activeIndex]);\n\n  useLayoutEffect(() => {\n    if (unmount) {\n      setUnmount(false);\n    }\n  }, [unmount]);\n\n  if (!activeCard) {\n    return (\n      <div className={className}>\n        {!unmount && (\n          <CardComponent\n            className={classes.card}\n            frontText=\"\"\n            backText=\"\"\n            showBack={false}\n            onFlip={() => {}}\n          />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      {!unmount && (\n        <CardComponent\n          className={classes.card}\n          frontText={activeCard.sides[0].text}\n          backText={activeCard.sides[1].text}\n          showBack={showCardBack}\n          onFlip={onFlipCard}\n        />\n      )}\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  positionIndicator: {\n    width: '10ch',\n  },\n});\n\nexport default useStyles;\n","import { IconButton, Typography } from '@material-ui/core';\nimport { ArrowBack, ArrowForward } from '@material-ui/icons';\nimport useStyles from './deck-stack-controls.styles';\n\ninterface DeckStackControlsProps {\n  currentIndex: number;\n  numberOfCards: number;\n  onBack: () => void;\n  onForward: () => void;\n}\n\nexport default function DeckStackControls({\n  currentIndex,\n  numberOfCards,\n  onBack,\n  onForward,\n}: DeckStackControlsProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={onBack}\n        disabled={currentIndex === 0 || numberOfCards === 0}\n      >\n        <ArrowBack />\n      </IconButton>\n      <div>\n        <Typography\n          variant=\"subtitle2\"\n          align=\"center\"\n          className={classes.positionIndicator}\n        >{`${\n          numberOfCards > 0 ? currentIndex + 1 : 0\n        }/${numberOfCards}`}</Typography>\n      </div>\n\n      <IconButton\n        onClick={onForward}\n        disabled={currentIndex === numberOfCards - 1 || numberOfCards === 0}\n      >\n        <ArrowForward />\n      </IconButton>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    margin: theme.spacing(3),\n  },\n  deckStack: {\n    height: 280,\n    width: '100%',\n    maxWidth: 397,\n  },\n  deckStackContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  section: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  progressBar: {\n    width: '100%',\n    maxWidth: 400,\n  },\n  tagList: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(0.5),\n  },\n}));\n\nexport default useStyles;\n","import { Chip, Slider, Typography } from '@material-ui/core';\nimport { useEffect, useLayoutEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Link from '../../common/components/link';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport AppBar from '../../dashboard/components/app-bar';\nimport CardList from '../components/card-list';\nimport DeckStack from '../components/deck-stack';\nimport DeckStackControls from '../components/deck-stack-controls';\nimport Deck from '../interfaces/deck';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './deck.page.styles';\n\nexport default function DeckPage() {\n  const classes = useStyles();\n  const [activeCardIndex, setActiveCardIndex] = useState(0);\n  const [showCardBack, setShowCardBack] = useState(false);\n  const { id: deckId } = useParams<{ id: string }>();\n  const [loading, setLoading] = useState(true);\n\n  const [deck, setDeck] = useState<Deck | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    decksService\n      .findOne(deckId)\n      .then((deck) => setDeck(deck))\n      .finally(() => setLoading(false));\n  }, [deckId]);\n\n  // Make sure the front of the card is showing when moving to another\n  useLayoutEffect(() => {\n    setShowCardBack(false);\n  }, [activeCardIndex]);\n\n  // Alphabetize deck tags\n  const sortedTags = useMemo(() => (deck?.tags ? [...deck.tags].sort() : []), [\n    deck?.tags,\n  ]);\n\n  return (\n    <div>\n      <AppBar />\n      <div className={classes.root}>\n        {/* Deck */}\n        <LoadableComponent loading={loading}>\n          {deck && (\n            <>\n              <section className={classes.section}>\n                <div>\n                  <Typography variant=\"h4\">{deck.title}</Typography>\n                  <Typography variant=\"subtitle1\">\n                    by{' '}\n                    <Link to={`/users/${deck.authorId}`} color=\"inherit\">\n                      {deck.authorId}\n                    </Link>\n                  </Typography>\n                </div>\n                <div className={classes.deckStackContainer}>\n                  <DeckStack\n                    className={classes.deckStack}\n                    cards={deck.cards}\n                    activeIndex={activeCardIndex}\n                    showCardBack={showCardBack}\n                    onFlipCard={() => setShowCardBack((state) => !state)}\n                  />\n                  <DeckStackControls\n                    currentIndex={activeCardIndex}\n                    numberOfCards={deck.cards.length}\n                    onBack={() => {\n                      setActiveCardIndex((state) => state - 1);\n                    }}\n                    onForward={() => {\n                      setActiveCardIndex((state) => state + 1);\n                    }}\n                  />\n                  <Slider\n                    className={classes.progressBar}\n                    value={activeCardIndex}\n                    max={deck.cards.length - 1}\n                    valueLabelFormat={(value) => value + 1}\n                    onChange={(_event, value) =>\n                      setActiveCardIndex(value as number)\n                    }\n                  />\n                </div>\n              </section>\n              {/* Tag list */}\n              <section className={classes.section}>\n                <Typography variant=\"h5\">Tags</Typography>\n                <div className={classes.tagList}>\n                  {sortedTags.map((tag) => (\n                    <Chip key={tag} label={tag} variant=\"outlined\" />\n                  ))}\n                </div>\n              </section>\n              {/* Term list */}\n              <section className={classes.section}>\n                <Typography variant=\"h5\">Terms</Typography>\n                <CardList cards={deck.cards} />\n              </section>\n            </>\n          )}\n        </LoadableComponent>\n      </div>\n    </div>\n  );\n}\n","import { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { authService } from './auth/services/auth.service';\nimport paths from './common/constants/paths';\nimport DashboardPage from './dashboard/pages/dashboard.page';\nimport HomePage from './dashboard/pages/home.page';\nimport AddDeckPage from './deck/pages/add-deck.page';\nimport DeckPage from './deck/pages/deck.page';\n\ninterface RouterProps {\n  isAuthenticated?: boolean;\n}\n\nexport default function Router({ isAuthenticated }: RouterProps) {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path={paths.home}>\n          {!isAuthenticated ? <HomePage /> : <Redirect to={paths.dashboard} />}\n        </Route>\n        <Route path={paths.dashboard}>\n          <DashboardPage userId={authService.getCurrentUser() as string} />\n        </Route>\n        <Route exact path={`${paths.decks}/:id`}>\n          <DeckPage />\n        </Route>\n        <Route path={`${paths.decks}/:id/edit`}>\n          <AddDeckPage />\n        </Route>\n        <Route path={paths.deckAdd}>\n          <AddDeckPage />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n","import { CssBaseline } from '@material-ui/core';\nimport { useState } from 'react';\nimport { AuthenticationStatusUpdateContext } from './auth/contexts/authentication-status-update.context';\nimport { AuthenticationStatusContext } from './auth/contexts/authentication-status.context';\nimport AuthenticationStatus from './auth/interfaces/authentication-status';\nimport { LogInResponse } from './auth/interfaces/log-in-response';\nimport Router from './router';\n\nexport default function App() {\n  const [authenticationStatus, setAuthenticatinStatus] = useState({\n    loggedIn:\n      new Date(\n        (JSON.parse(\n          localStorage.getItem('accessTokenPayload') ?? '{\"exp\": 0}'\n        ) as LogInResponse['decodedAccessToken']).exp * 1000\n      ) > new Date(),\n  });\n\n  const updateAuthenticationStatus = (\n    update: Partial<AuthenticationStatus>\n  ) => {\n    setAuthenticatinStatus((state) => ({ ...state, ...update }));\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <AuthenticationStatusContext.Provider value={authenticationStatus}>\n        <AuthenticationStatusUpdateContext.Provider\n          value={updateAuthenticationStatus}\n        >\n          <Router isAuthenticated={authenticationStatus.loggedIn} />\n        </AuthenticationStatusUpdateContext.Provider>\n      </AuthenticationStatusContext.Provider>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}