{"version":3,"sources":["deck/services/decks.service.ts","common/constants/snackbar.ts","deck/pages/add-deck.page.styles.tsx","../node_modules/@material-ui/icons/esm/Delete.js","../node_modules/@material-ui/icons/esm/ArrowUpward.js","../node_modules/@material-ui/icons/esm/ArrowDownward.js","deck/components/edit-card-tile.styles.tsx","deck/components/edit-card-tile.tsx","deck/components/edit-deck-form.styles.tsx","deck/components/edit-deck-form.tsx","deck/pages/add-deck.page.tsx"],"names":["decksService","http","a","title","description","visibility","cards","this","post","authorId","authService","getCurrentUser","map","sides","frontText","text","backText","data","id","get","findOneDeckResponseToDeck","params","decks","count","put","cardId","delete","apiClient","card","tags","autoHideDuration","useStyles","makeStyles","theme","backdrop","zIndex","appBar","createSvgIcon","React","d","root","display","flexDirection","gap","spacing","padding","textFieldContainer","gridTemplateColumns","actionArea","justifyContent","EditCardTileInner","props","index","variant","defaultTerm","defaultDefinition","termError","definitionError","removeDisabled","moveUpDisabled","moveDownDisabled","onRemove","onMove","register","classes","handleRemove","useCallback","handleMoveUp","handleMoveDown","Paper","className","Typography","component","TextField","label","required","multiline","defaultValue","inputProps","error","undefined","helperText","IconButton","aria-label","onClick","disabled","Delete","ArrowUpward","ArrowDownward","EditCardTile","memo","form","marginTop","marginBottom","generalInfoContainer","cardList","saveButtonContainer","editCardTileContainer","paddingTop","schema","yup","shape","max","oneOf","of","EditDeckForm","defaultValues","onSubmit","useForm","resolver","yupResolver","control","errors","formState","handleSubmit","useFieldArray","name","keyName","append","fields","move","remove","noValidate","message","select","MenuItem","value","key","length","Button","fullWidth","startIcon","Add","type","color","AddDeckPage","useState","submitting","setSubmitting","history","useHistory","showSnackbar","setShowsSnackbar","snackbarMessage","setSnackbarMessage","open","create","then","goBack","catch","onClose"],"mappings":"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","file":"static/js/12.b4d4f7a4.chunk.js","sourcesContent":["import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","export const autoHideDuration = 6000;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.appBar + 1,\n  },\n}));\n\nexport default useStyles;\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  textFieldContainer: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\nexport default useStyles;\n","import {\n  IconButton,\n  Paper,\n  TextField,\n  TextFieldProps,\n  Typography,\n} from '@material-ui/core';\nimport { ArrowDownward, ArrowUpward, Delete } from '@material-ui/icons';\nimport { memo, useCallback } from 'react';\nimport { UseFormRegister } from 'react-hook-form';\nimport useStyles from './edit-card-tile.styles';\nimport { FormValues } from './edit-deck-form';\n\nexport interface EditCardTileProps {\n  index: number;\n  variant?: TextFieldProps['variant'];\n  defaultTerm: string;\n  defaultDefinition: string;\n  termError?: string;\n  definitionError?: string;\n  removeDisabled?: boolean;\n  moveUpDisabled?: boolean;\n  moveDownDisabled?: boolean;\n  onRemove: (index: number) => void;\n  onMove: (source: number, destination: number) => void;\n  register: UseFormRegister<FormValues>;\n}\n\nexport function EditCardTileInner(props: EditCardTileProps) {\n  const {\n    index,\n    variant,\n    defaultTerm,\n    defaultDefinition,\n    termError,\n    definitionError,\n    removeDisabled,\n    moveUpDisabled,\n    moveDownDisabled,\n    onRemove,\n    onMove,\n    register,\n  } = props;\n  const classes = useStyles();\n\n  const handleRemove = useCallback(() => onRemove(index), [index, onRemove]);\n\n  const handleMoveUp = useCallback(\n    () => onMove(index, index - 1),\n    [index, onMove]\n  );\n\n  const handleMoveDown = useCallback(\n    () => onMove(index, index + 1),\n    [index, onMove]\n  );\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"h6\" component=\"div\">{`Card ${\n        index + 1\n      }`}</Typography>\n      <div className={classes.textFieldContainer}>\n        <TextField\n          label=\"Term\"\n          required\n          multiline\n          variant={variant}\n          defaultValue={defaultTerm}\n          inputProps={{\n            'aria-label': 'term',\n            ...register(`cards.${index}.sides.0.text` as const),\n          }}\n          error={termError !== undefined}\n          helperText={termError}\n        />\n        <TextField\n          label=\"Definition\"\n          required\n          multiline\n          variant={variant}\n          defaultValue={defaultDefinition}\n          inputProps={{\n            'aria-label': 'definition',\n            ...register(`cards.${index}.sides.1.text` as const),\n          }}\n          error={definitionError !== undefined}\n          helperText={definitionError}\n        />\n      </div>\n      <div className={classes.actionArea}>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={handleRemove}\n          disabled={removeDisabled}\n        >\n          <Delete />\n        </IconButton>\n        <IconButton\n          aria-label=\"move up\"\n          onClick={handleMoveUp}\n          disabled={moveUpDisabled}\n        >\n          <ArrowUpward />\n        </IconButton>\n        <IconButton\n          aria-label=\"move down\"\n          onClick={handleMoveDown}\n          disabled={moveDownDisabled}\n        >\n          <ArrowDownward />\n        </IconButton>\n      </div>\n    </Paper>\n  );\n}\n\nconst EditCardTile = memo(EditCardTileInner);\nexport default EditCardTile;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  generalInfoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  cardList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  saveButtonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  editCardTileContainer: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Button, MenuItem, TextField, TextFieldProps } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport Card from '../../card/interfaces/card';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport EditCardTile from './edit-card-tile';\nimport useStyles from './edit-deck-form.styles';\n\nexport type FormValues = {\n  title: string;\n  description: string;\n  visibility: DeckVisibility;\n  cards: Card[];\n};\n\nconst schema = yup.object().shape({\n  title: yup.string().label('Title').required().max(255),\n  description: yup.string().label('Description').max(4096),\n  visibility: yup.string().label('Visibility').oneOf(['PRIVATE', 'PUBLIC']),\n  cards: yup.array().of(\n    yup.object().shape({\n      sides: yup.array().of(\n        yup.object().shape({\n          text: yup.string().label('This').required().max(4096),\n        })\n      ),\n    })\n  ),\n});\n\ninterface EditDeckFormProps {\n  defaultValues?: FormValues;\n  variant?: TextFieldProps['variant'];\n  onSubmit: (value: FormValues) => void;\n}\n\nexport default function EditDeckForm({\n  defaultValues,\n  variant,\n  onSubmit,\n}: EditDeckFormProps) {\n  const classes = useStyles();\n\n  const {\n    control,\n    formState: { errors },\n    handleSubmit,\n    register,\n  } = useForm<FormValues>({\n    defaultValues,\n    resolver: yupResolver(schema),\n  });\n\n  const { append, fields, move, remove } = useFieldArray({\n    control,\n    name: 'cards',\n    keyName: 'key', // A Card already has an id field\n  });\n\n  return (\n    <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\n      <div className={classes.generalInfoContainer}>\n        <TextField\n          label=\"Title\"\n          required\n          variant={variant}\n          defaultValue=\"\"\n          inputProps={{ 'aria-label': 'title', ...register('title') }}\n          error={errors.title !== undefined}\n          helperText={errors.title?.message}\n        />\n        <TextField\n          label=\"Description\"\n          variant={variant}\n          defaultValue=\"\"\n          inputProps={{\n            'aria-label': 'description',\n            ...register('description'),\n          }}\n          error={errors.description !== undefined}\n          helperText={errors.description?.message}\n        />\n        <TextField\n          label=\"Visibility\"\n          select\n          variant={variant}\n          defaultValue={defaultValues?.visibility ?? 'PRIVATE'}\n          inputProps={{ 'aria-label': 'visibility', ...register('visibility') }}\n          error={errors.visibility !== undefined}\n          helperText={errors.visibility?.message}\n        >\n          <MenuItem value=\"PRIVATE\">Private</MenuItem>\n          <MenuItem value=\"PUBLIC\">Public</MenuItem>\n        </TextField>\n      </div>\n\n      <div className={classes.cardList}>\n        {fields.map(\n          (\n            {\n              key,\n              sides: [{ text: defaultTerm }, { text: defaultDefinition }],\n            },\n            index\n          ) => (\n            <EditCardTile\n              key={key}\n              index={index}\n              variant={variant}\n              defaultTerm={defaultTerm}\n              defaultDefinition={defaultDefinition}\n              termError={errors.cards?.[index]?.sides?.[0]?.text?.message}\n              definitionError={errors.cards?.[index]?.sides?.[1]?.text?.message}\n              onRemove={remove}\n              onMove={move}\n              removeDisabled={fields.length <= 1}\n              moveUpDisabled={index === 0}\n              moveDownDisabled={index >= fields.length - 1}\n              register={register}\n            />\n          )\n        )}\n      </div>\n\n      <Button\n        variant=\"outlined\"\n        fullWidth\n        startIcon={<Add />}\n        onClick={() => append({ sides: [{ text: '' }, { text: '' }] })}\n      >\n        Add card\n      </Button>\n      <div className={classes.saveButtonContainer}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import {\n  Backdrop,\n  CircularProgress,\n  Container,\n  Snackbar,\n} from '@material-ui/core';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { autoHideDuration } from '../../common/constants/snackbar';\nimport EditDeckForm from '../components/edit-deck-form';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './add-deck.page.styles';\n\nexport default function AddDeckPage() {\n  const classes = useStyles();\n\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n\n  const [showSnackbar, setShowsSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  return (\n    <>\n      <Backdrop open={submitting} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Container>\n        <EditDeckForm\n          variant=\"outlined\"\n          defaultValues={{\n            title: '',\n            description: '',\n            visibility: 'PRIVATE',\n            cards: [{ sides: [{ text: '' }, { text: '' }] }],\n          }}\n          onSubmit={(value) => {\n            setSubmitting(true);\n            decksService\n              .create({ tags: [], ...value })\n              .then(() => history.goBack())\n              .catch(() => {\n                setSnackbarMessage('Failed to save deck.');\n                setShowsSnackbar(true);\n                setSubmitting(false);\n              });\n          }}\n        />\n      </Container>\n      <Snackbar\n        open={showSnackbar}\n        message={snackbarMessage}\n        autoHideDuration={autoHideDuration}\n        onClose={() => setShowsSnackbar(false)}\n      />\n    </>\n  );\n}\n"],"sourceRoot":""}