{"version":3,"sources":["deck/services/decks.service.ts","common/constants/missing-required-field-error-message.tsx","common/components/loadable-component.styles.tsx","common/components/loadable-component.tsx","common/constants/snackbar.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","deck/pages/add-deck.page.styles.tsx","../node_modules/@material-ui/icons/esm/Delete.js","../node_modules/@material-ui/icons/esm/ArrowUpward.js","../node_modules/@material-ui/icons/esm/ArrowDownward.js","deck/components/edit-card-tile.styles.tsx","deck/components/edit-card-tile.tsx","deck/components/edit-deck-form.styles.tsx","deck/components/edit-deck-form.tsx","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/Container/Container.js","deck/pages/edit-deck.page.tsx"],"names":["decksService","http","a","title","description","visibility","cards","this","post","authorId","authService","getCurrentUser","map","sides","frontText","text","backText","data","id","get","findOneDeckResponseToDeck","params","decks","count","put","cardId","delete","apiClient","card","tags","missingRequiredFieldErrorMessage","useStyles","makeStyles","root","display","justifyContent","LoadableComponent","loading","children","className","delay","classes","useState","showProgress","setShowProgress","useEffect","timeout","setTimeout","clearTimeout","clsx","CircularProgress","autoHideDuration","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","theme","backdrop","zIndex","appBar","createSvgIcon","React","d","textFieldContainer","gridTemplateColumns","gap","spacing","cardContent","flexDirection","margin","actionArea","EditCardTile","cardNumber","forceValidate","onFrontTextChange","onBackTextChange","onDelete","onMoveUp","onMoveDown","validateFrontText","setValidateFrontText","frontTextValid","length","frontTextError","validateBackText","setValidateBackText","backTextValid","backTextError","Card","Typography","variant","TextField","label","required","multiline","value","error","helperText","undefined","onChange","e","target","inputProps","IconButton","aria-label","onClick","disabled","Delete","ArrowUpward","ArrowDownward","form","marginTop","marginBottom","generalInfoContainer","cardList","saveButtonContainer","EditDeckForm","onTitleChange","onDescriptionChange","onChangeVisibility","onCardsChange","onSubmit","validateTitle","setValidateTitle","setForceValidate","showTitleError","changeCardSideText","cardIndex","side","newCards","modifiedCard","moveCard","currentIndex","targetIndex","splice","noValidate","preventDefault","some","fullWidth","select","MenuItem","i","index","slice","Button","startIcon","Add","type","color","props","ref","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","elevation","withStyles","overflow","name","Container","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","concat","capitalize","String","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","EditDeckPage","deckId","useParams","submitting","setSubmitting","history","useHistory","deck","setDeck","setLoading","showSnackbar","setShowsSnackbar","snackbarMessage","setSnackbarMessage","findOne","then","finally","open","state","update","goBack","catch","message","onClose"],"mappings":"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","file":"static/js/6.25e02889.chunk.js","sourcesContent":["import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","const missingRequiredFieldErrorMessage = 'This field is required.';\n\nexport default missingRequiredFieldErrorMessage;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\nexport default useStyles;\n","import { CircularProgress } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ReactNode, useEffect, useState } from 'react';\nimport useStyles from './loadable-component.styles';\n\ninterface LoadableComponentProps {\n  loading?: boolean;\n  children: ReactNode;\n  className?: string;\n  delay?: number;\n}\n\nexport default function LoadableComponent({\n  loading,\n  children,\n  className,\n  delay = 300,\n}: LoadableComponentProps) {\n  const classes = useStyles();\n\n  const [showProgress, setShowProgress] = useState(delay <= 0);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowProgress(true);\n    }, delay);\n    return () => clearTimeout(timeout);\n  }, [delay]);\n\n  return loading ? (\n    <div className={clsx(classes.root, className)}>\n      {showProgress && <CircularProgress />}\n    </div>\n  ) : (\n    <>{children}</>\n  );\n}\n","export const autoHideDuration = 6000;\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.appBar + 1,\n  },\n}));\n\nexport default useStyles;\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldContainer: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: theme.spacing(2),\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    margin: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\nexport default useStyles;\n","import { Card, IconButton, TextField, Typography } from '@material-ui/core';\nimport { ArrowDownward, ArrowUpward, Delete } from '@material-ui/icons';\nimport { useState } from 'react';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useStyles from './edit-card-tile.styles';\n\ninterface EditCardTileProps {\n  cardNumber: number;\n  frontText: string;\n  backText: string;\n  forceValidate?: boolean;\n  onFrontTextChange: (value: string) => void;\n  onBackTextChange: (value: string) => void;\n  onDelete?: () => void;\n  onMoveUp?: () => void;\n  onMoveDown?: () => void;\n}\n\nexport default function EditCardTile({\n  cardNumber,\n  frontText,\n  backText,\n  forceValidate,\n  onFrontTextChange,\n  onBackTextChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n}: EditCardTileProps) {\n  const classes = useStyles();\n\n  const [validateFrontText, setValidateFrontText] = useState(false);\n  const frontTextValid = frontText.length > 0;\n  const frontTextError =\n    (forceValidate || validateFrontText) && !frontTextValid;\n\n  const [validateBackText, setValidateBackText] = useState(false);\n  const backTextValid = backText.length > 0;\n  const backTextError = (forceValidate || validateBackText) && !backTextValid;\n\n  return (\n    <Card>\n      <div className={classes.cardContent}>\n        <Typography variant=\"h5\">{`Card ${cardNumber}`}</Typography>\n        <div className={classes.textFieldContainer}>\n          <TextField\n            label=\"Term\"\n            required\n            variant=\"outlined\"\n            multiline\n            value={frontText}\n            error={frontTextError}\n            helperText={\n              frontTextError ? missingRequiredFieldErrorMessage : undefined\n            }\n            onChange={(e) => {\n              setValidateFrontText(true);\n              onFrontTextChange(e.target.value);\n            }}\n            inputProps={{ 'aria-label': 'term' }}\n          />\n          <TextField\n            label=\"Definition\"\n            required\n            variant=\"outlined\"\n            multiline\n            value={backText}\n            error={backTextError}\n            helperText={\n              backTextError ? missingRequiredFieldErrorMessage : undefined\n            }\n            onChange={(e) => {\n              setValidateBackText(true);\n              onBackTextChange(e.target.value);\n            }}\n            inputProps={{ 'aria-label': 'definition' }}\n          />\n        </div>\n        <div className={classes.actionArea}>\n          <IconButton\n            aria-label=\"delete\"\n            onClick={onDelete}\n            disabled={!onDelete}\n          >\n            <Delete />\n          </IconButton>\n          <IconButton\n            aria-label=\"move up\"\n            onClick={onMoveUp}\n            disabled={!onMoveUp}\n          >\n            <ArrowUpward />\n          </IconButton>\n          <IconButton\n            aria-label=\"move down\"\n            onClick={onMoveDown}\n            disabled={!onMoveDown}\n          >\n            <ArrowDownward />\n          </IconButton>\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  generalInfoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  cardList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  saveButtonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default useStyles;\n","import { Button, MenuItem, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useState } from 'react';\nimport Card from '../../card/interfaces/card';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport EditCardTile from './edit-card-tile';\nimport useStyles from './edit-deck-form.styles';\n\ninterface EditDeckFormProps {\n  title: string;\n  description: string;\n  visibility: DeckVisibility;\n  cards: Card[];\n  onTitleChange: (value: string) => void;\n  onDescriptionChange: (value: string) => void;\n  onChangeVisibility: (value: DeckVisibility) => void;\n  onCardsChange: (value: Card[]) => void;\n  onSubmit: () => void;\n}\n\nexport default function EditDeckForm({\n  title,\n  description,\n  visibility,\n  cards,\n  onTitleChange,\n  onDescriptionChange,\n  onChangeVisibility,\n  onCardsChange,\n  onSubmit,\n}: EditDeckFormProps) {\n  const classes = useStyles();\n\n  const [validateTitle, setValidateTitle] = useState(false);\n  const [forceValidate, setForceValidate] = useState(false);\n  const showTitleError = (forceValidate || validateTitle) && title.length === 0;\n\n  const changeCardSideText = (\n    cardIndex: number,\n    side: number,\n    value: string\n  ) => {\n    const newCards = [...cards];\n    const modifiedCard = { ...cards[cardIndex] };\n    modifiedCard.sides[side].text = value;\n    newCards[cardIndex] = modifiedCard;\n    onCardsChange(newCards);\n  };\n\n  const addCard = () => {\n    onCardsChange([...cards, { sides: [{ text: '' }, { text: '' }] }]);\n  };\n\n  const deleteCard = (index: number) => {\n    onCardsChange([...cards.slice(0, index), ...cards.slice(index + 1)]);\n  };\n\n  const moveCard = (currentIndex: number, targetIndex: number) => {\n    const newCards = [...cards];\n    newCards.splice(targetIndex, 0, newCards.splice(currentIndex, 1)[0]);\n    onCardsChange(newCards);\n  };\n\n  return (\n    <form\n      noValidate\n      className={classes.form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (\n          title.length === 0 ||\n          cards.some(({ sides }) =>\n            sides.some((side) => side.text.length === 0)\n          )\n        ) {\n          setForceValidate(true);\n          return;\n        }\n        onSubmit();\n      }}\n    >\n      <div className={classes.generalInfoContainer}>\n        <TextField\n          required\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          error={showTitleError}\n          helperText={\n            showTitleError ? missingRequiredFieldErrorMessage : undefined\n          }\n          value={title}\n          onChange={(e) => {\n            setValidateTitle(true);\n            onTitleChange(e.target.value);\n          }}\n          inputProps={{ 'aria-label': 'title' }}\n        />\n        <TextField\n          variant=\"outlined\"\n          label=\"Description\"\n          fullWidth\n          value={description}\n          onChange={(e) => onDescriptionChange(e.target.value)}\n          inputProps={{ 'aria-label': 'description' }}\n        />\n        <TextField\n          variant=\"outlined\"\n          value={visibility}\n          onChange={(e) => onChangeVisibility(e.target.value as DeckVisibility)}\n          select\n          label=\"Visibility\"\n          inputProps={{ 'aria-label': 'visibility' }}\n        >\n          <MenuItem value=\"PRIVATE\">Private</MenuItem>\n          <MenuItem value=\"PUBLIC\">Public</MenuItem>\n        </TextField>\n      </div>\n\n      <div className={classes.cardList}>\n        {cards.map(\n          ({ sides: [{ text: frontText }, { text: backText }] }, i) => (\n            <EditCardTile\n              key={i}\n              forceValidate={forceValidate}\n              cardNumber={i + 1}\n              frontText={frontText}\n              backText={backText}\n              onFrontTextChange={(value) => changeCardSideText(i, 0, value)}\n              onBackTextChange={(value) => changeCardSideText(i, 1, value)}\n              onDelete={cards.length > 1 ? () => deleteCard(i) : undefined}\n              onMoveUp={i !== 0 ? () => moveCard(i, i - 1) : undefined}\n              onMoveDown={\n                i !== cards.length - 1 ? () => moveCard(i, i + 1) : undefined\n              }\n            />\n          )\n        )}\n      </div>\n\n      <Button\n        variant=\"outlined\"\n        fullWidth\n        startIcon={<Add />}\n        onClick={addCard}\n      >\n        Add card\n      </Button>\n      <div className={classes.saveButtonContainer}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import {\n  Backdrop,\n  CircularProgress,\n  Container,\n  Snackbar,\n} from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport { autoHideDuration } from '../../common/constants/snackbar';\nimport EditDeckForm from '../components/edit-deck-form';\nimport Deck from '../interfaces/deck';\nimport { decksService } from '../services/decks.service';\nimport useStyles from './add-deck.page.styles';\n\nexport default function EditDeckPage() {\n  const classes = useStyles();\n  const { id: deckId } = useParams<{ id: string }>();\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n\n  const [deck, setDeck] = useState<Deck | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const [showSnackbar, setShowsSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    decksService\n      .findOne(deckId)\n      .then((deck) => setDeck(deck))\n      .finally(() => setLoading(false));\n  }, [deckId]);\n\n  return (\n    <>\n      <Backdrop open={submitting} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <LoadableComponent loading={loading}>\n        {deck && (\n          <Container>\n            <EditDeckForm\n              title={deck.title}\n              description={deck.description}\n              visibility={deck.visibility}\n              cards={deck.cards}\n              onTitleChange={(title) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, title };\n                })\n              }\n              onDescriptionChange={(description) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, description };\n                })\n              }\n              onChangeVisibility={(visibility) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, visibility };\n                })\n              }\n              onCardsChange={(cards) =>\n                setDeck((state) => {\n                  if (!state) {\n                    return state;\n                  }\n                  return { ...state, cards };\n                })\n              }\n              onSubmit={() => {\n                setSubmitting(true);\n                decksService\n                  .update({\n                    id: deck.id,\n                    title: deck.title,\n                    description: deck.description,\n                    visibility: deck.visibility,\n                    cards: deck.cards,\n                    tags: [],\n                  })\n                  .then(() => history.goBack())\n                  .catch(() => {\n                    setSnackbarMessage('Failed to update deck.');\n                    setShowsSnackbar(true);\n                    setSubmitting(false);\n                  });\n              }}\n            />\n          </Container>\n        )}\n      </LoadableComponent>\n      <Snackbar\n        open={showSnackbar}\n        message={snackbarMessage}\n        autoHideDuration={autoHideDuration}\n        onClose={() => setShowsSnackbar(false)}\n      />\n    </>\n  );\n}\n"],"sourceRoot":""}