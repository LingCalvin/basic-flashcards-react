{"version":3,"sources":["deck/services/decks.service.ts","common/components/loadable-component.styles.tsx","common/components/loadable-component.tsx","common/components/link.tsx","dashboard/components/deck-info-tile.styles.tsx","dashboard/components/deck-info-tile.tsx","router/utils/route.utils.ts","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","../node_modules/@material-ui/core/esm/Link/Link.js","dashboard/pages/home.page.styles.tsx","dashboard/pages/home.page.tsx"],"names":["decksService","http","a","title","description","visibility","cards","this","post","authorId","authService","getCurrentUser","map","sides","frontText","text","backText","data","id","get","findOneDeckResponseToDeck","params","decks","count","put","cardId","delete","apiClient","card","tags","useStyles","makeStyles","root","display","justifyContent","LoadableComponent","loading","children","className","delay","classes","useState","showProgress","setShowProgress","useEffect","timeout","setTimeout","clearTimeout","clsx","CircularProgress","Link","to","color","component","RouterLink","theme","padding","spacing","textOverflow","overflow","whiteSpace","buttonBox","deleteButton","palette","error","main","DeckInfoTile","deckId","numberOfCards","author","onDelete","onExport","onEdit","Paper","Typography","variant","onClick","e","stopPropagation","Button","SIZE","React","props","ref","_props$color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","value","_props$variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","_extends","capitalize","determinate","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","transition","transitions","create","animation","colorPrimary","primary","colorSecondary","secondary","stroke","transformOrigin","name","flip","_props$component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","button","event","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","cursor","userSelect","verticalAlign","borderStyle","topSection","dark","contrastText","flexDirection","alignItems","gap","exampleDecksContainer","exampleDecksSection","marginLeft","marginRight","paddingBottom","HomePage","setLoading","exampleDecks","setExampleDecks","findAll","orderTitleBy","take","then","finally","deck","length"],"mappings":"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","file":"static/js/11.9a912498.chunk.js","sourcesContent":["import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\nexport default useStyles;\n","import { CircularProgress } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ReactNode, useEffect, useState } from 'react';\nimport useStyles from './loadable-component.styles';\n\ninterface LoadableComponentProps {\n  loading?: boolean;\n  children: ReactNode;\n  className?: string;\n  delay?: number;\n}\n\nexport default function LoadableComponent({\n  loading,\n  children,\n  className,\n  delay = 300,\n}: LoadableComponentProps) {\n  const classes = useStyles();\n\n  const [showProgress, setShowProgress] = useState(delay <= 0);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowProgress(true);\n    }, delay);\n    return () => clearTimeout(timeout);\n  }, [delay]);\n\n  return loading ? (\n    <div className={clsx(classes.root, className)}>\n      {showProgress && <CircularProgress />}\n    </div>\n  ) : (\n    <>{children}</>\n  );\n}\n","import { Link as MuiLink, LinkProps as MuiLinkProps } from '@material-ui/core';\nimport { ReactNode } from 'react';\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from 'react-router-dom';\n\ninterface LinkProps {\n  to: RouterLinkProps['to'];\n  color?: MuiLinkProps['color'];\n  children?: ReactNode;\n}\n\nexport default function Link({ to, color, children }: LinkProps) {\n  return (\n    <MuiLink component={RouterLink} to={to} color={color}>\n      {children}\n    </MuiLink>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  title: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n  buttonBox: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  deleteButton: {\n    color: theme.palette.error.main,\n  },\n}));\n\nexport default useStyles;\n","import { Button, Paper, Typography } from '@material-ui/core';\nimport Link from '../../common/components/link';\nimport { deckView } from '../../router/utils/route.utils';\nimport useStyles from './deck-info-tile.styles';\n\ninterface DeckInfoTileProps {\n  title: string;\n  deckId: string;\n  numberOfCards: number;\n  author?: string;\n  onDelete?: () => void;\n  onExport?: () => void;\n  onEdit?: () => void;\n}\n\nexport default function DeckInfoTile({\n  title,\n  deckId,\n  numberOfCards,\n  author,\n  onDelete,\n  onExport,\n  onEdit,\n}: DeckInfoTileProps) {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Link to={deckView(deckId)}>\n        <Typography className={classes.title} variant=\"h5\" component=\"div\">\n          {title}\n        </Typography>\n      </Link>\n      <Typography>{`${numberOfCards} cards`}</Typography>\n      {author && (\n        <Typography\n          onClick={(e: React.MouseEvent<HTMLSpanElement, MouseEvent>) =>\n            e.stopPropagation()\n          }\n          component=\"span\"\n        >\n          By <Link to={`/users/${author}`}>{author}</Link>\n        </Typography>\n      )}\n      {(onDelete || onExport || onEdit) && (\n        <div className={classes.buttonBox}>\n          {onDelete && (\n            <Button\n              className={classes.deleteButton}\n              onClick={(e) => {\n                e.stopPropagation();\n                onDelete();\n              }}\n            >\n              Delete\n            </Button>\n          )}\n          {onExport && (\n            <Button\n              onClick={(e) => {\n                e.stopPropagation();\n                onExport();\n              }}\n            >\n              Export\n            </Button>\n          )}\n          {onEdit && (\n            <Button\n              color=\"primary\"\n              onClick={(e: any) => {\n                e.stopPropagation();\n                onEdit();\n              }}\n            >\n              Edit\n            </Button>\n          )}\n        </div>\n      )}\n    </Paper>\n  );\n}\n","export function deckEdit(id: string) {\n  return `/decks/${id}/edit`;\n}\n\nexport function deckView(id: string) {\n  return `/decks/${id}`;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  topSection: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    gap: theme.spacing(2),\n  },\n  buttonBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  exampleDecksContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n  },\n  exampleDecksSection: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { Typography } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport LoadableComponent from '../../common/components/loadable-component';\nimport Deck from '../../deck/interfaces/deck';\nimport { decksService } from '../../deck/services/decks.service';\nimport DeckInfoTile from '../components/deck-info-tile';\nimport useStyles from './home.page.styles';\n\nexport default function HomePage() {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(true);\n\n  const [exampleDecks, setExampleDecks] = useState<Deck[]>([]);\n\n  useEffect(() => {\n    decksService\n      .findAll({ orderTitleBy: 'asc', take: 3 })\n      .then(({ decks }) => setExampleDecks(decks))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <main>\n      <div className={classes.topSection}>\n        <Typography variant=\"h1\">\n          Create, search for, and review decks.\n        </Typography>\n      </div>\n      <section className={classes.exampleDecksSection}>\n        <Typography variant=\"h2\">Example decks</Typography>\n        <LoadableComponent loading={loading}>\n          <div className={classes.exampleDecksContainer}>\n            {exampleDecks.map((deck) => (\n              <DeckInfoTile\n                key={deck.id}\n                deckId={deck.id ?? ''}\n                title={deck.title}\n                numberOfCards={deck.cards.length}\n                author={deck.authorId ?? ''}\n              />\n            ))}\n          </div>\n        </LoadableComponent>\n      </section>\n    </main>\n  );\n}\n"],"sourceRoot":""}