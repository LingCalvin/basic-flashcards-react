{"version":3,"sources":["deck/services/decks.service.ts","common/constants/missing-required-field-error-message.tsx","common/constants/snackbar.ts","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","deck/pages/add-deck.page.styles.tsx","../node_modules/@material-ui/icons/esm/Delete.js","../node_modules/@material-ui/icons/esm/ArrowUpward.js","../node_modules/@material-ui/icons/esm/ArrowDownward.js","deck/components/edit-card-tile.styles.tsx","deck/components/edit-card-tile.tsx","deck/components/edit-deck-form.styles.tsx","deck/components/edit-deck-form.tsx","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/Container/Container.js"],"names":["decksService","http","a","title","description","visibility","cards","this","post","authorId","authService","getCurrentUser","map","sides","frontText","text","backText","data","id","get","findOneDeckResponseToDeck","params","decks","count","put","cardId","delete","apiClient","card","tags","missingRequiredFieldErrorMessage","autoHideDuration","SIZE","CircularProgress","React","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","value","_props$variant","variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","_extends","clsx","root","capitalize","determinate","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","useStyles","makeStyles","backdrop","zIndex","appBar","createSvgIcon","d","textFieldContainer","gridTemplateColumns","gap","spacing","cardContent","flexDirection","margin","actionArea","justifyContent","EditCardTile","cardNumber","forceValidate","onFrontTextChange","onBackTextChange","onDelete","onMoveUp","onMoveDown","useState","validateFrontText","setValidateFrontText","frontTextValid","length","frontTextError","validateBackText","setValidateBackText","backTextValid","backTextError","Card","Typography","TextField","label","required","multiline","error","helperText","undefined","onChange","e","target","inputProps","IconButton","aria-label","onClick","disabled","Delete","ArrowUpward","ArrowDownward","form","marginTop","marginBottom","generalInfoContainer","cardList","saveButtonContainer","EditDeckForm","onTitleChange","onDescriptionChange","onChangeVisibility","onCardsChange","onSubmit","validateTitle","setValidateTitle","setForceValidate","showTitleError","changeCardSideText","cardIndex","side","newCards","modifiedCard","moveCard","currentIndex","targetIndex","splice","noValidate","preventDefault","some","fullWidth","select","MenuItem","i","index","slice","Button","startIcon","Add","type","_props$raised","raised","Paper","elevation","overflow","Container","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","String","_defineProperty","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","keys","values","reduce","acc","breakpoint","maxWidthXs","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl"],"mappings":"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","file":"static/js/3.1b694e43.chunk.js","sourcesContent":["import { AxiosInstance } from 'axios';\nimport { authService } from '../../auth/services/auth.service';\nimport apiClient from '../../common/constants/api-client';\nimport Deck from '../interfaces/deck';\nimport { FindAllDecksParams } from '../interfaces/find-all-decks-params';\nimport { FindAllDecksResponse } from '../interfaces/find-all-decks-response';\nimport FindOneDeckResponse from '../interfaces/find-one-deck-response';\n\nexport class DecksService {\n  constructor(private http: AxiosInstance) {}\n\n  async create({ title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.post('/decks', {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ sides: [{ text: frontText }, { text: backText }] }) => ({\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async findOne(id: string): Promise<Deck | null> {\n    const { data } = await this.http.get<FindOneDeckResponse>(`/decks/${id}`);\n    return findOneDeckResponseToDeck(data);\n  }\n\n  async findAll(\n    params: FindAllDecksParams\n  ): Promise<{ decks: Deck[]; count: number }> {\n    const { data } = await this.http.get<FindAllDecksResponse>(`/decks`, {\n      params,\n    });\n\n    return {\n      decks: data.decks.map(findOneDeckResponseToDeck),\n      count: data.count,\n    };\n  }\n\n  async update({ id, title, description, visibility, cards }: Deck) {\n    const { data } = await this.http.put(`/decks/${id}`, {\n      authorId: authService.getCurrentUser(),\n      title,\n      description,\n      visibility,\n      cards: cards.map(\n        ({ id: cardId, sides: [{ text: frontText }, { text: backText }] }) => ({\n          id: cardId,\n          frontText,\n          backText,\n        })\n      ),\n    });\n    return data;\n  }\n\n  async remove(id: string) {\n    return this.http.delete(`/decks/${id}`);\n  }\n}\n\nexport const decksService = new DecksService(apiClient);\n\nfunction findOneDeckResponseToDeck(data: FindOneDeckResponse): Deck {\n  const { id, authorId, title, description, visibility } = data;\n  return {\n    id,\n    authorId,\n    title,\n    description,\n    visibility,\n    cards: data.cards.map((card) => ({\n      id: card.id,\n      sides: [{ text: card.frontText }, { text: card.backText }],\n    })),\n    tags: [],\n  };\n}\n","const missingRequiredFieldErrorMessage = 'This field is required.';\n\nexport default missingRequiredFieldErrorMessage;\n","export const autoHideDuration = 6000;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.appBar + 1,\n  },\n}));\n\nexport default useStyles;\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldContainer: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: theme.spacing(2),\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    margin: theme.spacing(2),\n  },\n  actionArea: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\nexport default useStyles;\n","import { Card, IconButton, TextField, Typography } from '@material-ui/core';\nimport { ArrowDownward, ArrowUpward, Delete } from '@material-ui/icons';\nimport { useState } from 'react';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport useStyles from './edit-card-tile.styles';\n\ninterface EditCardTileProps {\n  cardNumber: number;\n  frontText: string;\n  backText: string;\n  forceValidate?: boolean;\n  onFrontTextChange: (value: string) => void;\n  onBackTextChange: (value: string) => void;\n  onDelete?: () => void;\n  onMoveUp?: () => void;\n  onMoveDown?: () => void;\n}\n\nexport default function EditCardTile({\n  cardNumber,\n  frontText,\n  backText,\n  forceValidate,\n  onFrontTextChange,\n  onBackTextChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n}: EditCardTileProps) {\n  const classes = useStyles();\n\n  const [validateFrontText, setValidateFrontText] = useState(false);\n  const frontTextValid = frontText.length > 0;\n  const frontTextError =\n    (forceValidate || validateFrontText) && !frontTextValid;\n\n  const [validateBackText, setValidateBackText] = useState(false);\n  const backTextValid = backText.length > 0;\n  const backTextError = (forceValidate || validateBackText) && !backTextValid;\n\n  return (\n    <Card>\n      <div className={classes.cardContent}>\n        <Typography variant=\"h5\">{`Card ${cardNumber}`}</Typography>\n        <div className={classes.textFieldContainer}>\n          <TextField\n            label=\"Term\"\n            required\n            variant=\"outlined\"\n            multiline\n            value={frontText}\n            error={frontTextError}\n            helperText={\n              frontTextError ? missingRequiredFieldErrorMessage : undefined\n            }\n            onChange={(e) => {\n              setValidateFrontText(true);\n              onFrontTextChange(e.target.value);\n            }}\n            inputProps={{ 'aria-label': 'term' }}\n          />\n          <TextField\n            label=\"Definition\"\n            required\n            variant=\"outlined\"\n            multiline\n            value={backText}\n            error={backTextError}\n            helperText={\n              backTextError ? missingRequiredFieldErrorMessage : undefined\n            }\n            onChange={(e) => {\n              setValidateBackText(true);\n              onBackTextChange(e.target.value);\n            }}\n            inputProps={{ 'aria-label': 'definition' }}\n          />\n        </div>\n        <div className={classes.actionArea}>\n          <IconButton\n            aria-label=\"delete\"\n            onClick={onDelete}\n            disabled={!onDelete}\n          >\n            <Delete />\n          </IconButton>\n          <IconButton\n            aria-label=\"move up\"\n            onClick={onMoveUp}\n            disabled={!onMoveUp}\n          >\n            <ArrowUpward />\n          </IconButton>\n          <IconButton\n            aria-label=\"move down\"\n            onClick={onMoveDown}\n            disabled={!onMoveDown}\n          >\n            <ArrowDownward />\n          </IconButton>\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(3),\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  generalInfoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  cardList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  saveButtonContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport default useStyles;\n","import { Button, MenuItem, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useState } from 'react';\nimport Card from '../../card/interfaces/card';\nimport missingRequiredFieldErrorMessage from '../../common/constants/missing-required-field-error-message';\nimport { DeckVisibility } from '../types/deck-visibility';\nimport EditCardTile from './edit-card-tile';\nimport useStyles from './edit-deck-form.styles';\n\ninterface EditDeckFormProps {\n  title: string;\n  description: string;\n  visibility: DeckVisibility;\n  cards: Card[];\n  onTitleChange: (value: string) => void;\n  onDescriptionChange: (value: string) => void;\n  onChangeVisibility: (value: DeckVisibility) => void;\n  onCardsChange: (value: Card[]) => void;\n  onSubmit: () => void;\n}\n\nexport default function EditDeckForm({\n  title,\n  description,\n  visibility,\n  cards,\n  onTitleChange,\n  onDescriptionChange,\n  onChangeVisibility,\n  onCardsChange,\n  onSubmit,\n}: EditDeckFormProps) {\n  const classes = useStyles();\n\n  const [validateTitle, setValidateTitle] = useState(false);\n  const [forceValidate, setForceValidate] = useState(false);\n  const showTitleError = (forceValidate || validateTitle) && title.length === 0;\n\n  const changeCardSideText = (\n    cardIndex: number,\n    side: number,\n    value: string\n  ) => {\n    const newCards = [...cards];\n    const modifiedCard = { ...cards[cardIndex] };\n    modifiedCard.sides[side].text = value;\n    newCards[cardIndex] = modifiedCard;\n    onCardsChange(newCards);\n  };\n\n  const addCard = () => {\n    onCardsChange([...cards, { sides: [{ text: '' }, { text: '' }] }]);\n  };\n\n  const deleteCard = (index: number) => {\n    onCardsChange([...cards.slice(0, index), ...cards.slice(index + 1)]);\n  };\n\n  const moveCard = (currentIndex: number, targetIndex: number) => {\n    const newCards = [...cards];\n    newCards.splice(targetIndex, 0, newCards.splice(currentIndex, 1)[0]);\n    onCardsChange(newCards);\n  };\n\n  return (\n    <form\n      noValidate\n      className={classes.form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (\n          title.length === 0 ||\n          cards.some(({ sides }) =>\n            sides.some((side) => side.text.length === 0)\n          )\n        ) {\n          setForceValidate(true);\n          return;\n        }\n        onSubmit();\n      }}\n    >\n      <div className={classes.generalInfoContainer}>\n        <TextField\n          required\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          error={showTitleError}\n          helperText={\n            showTitleError ? missingRequiredFieldErrorMessage : undefined\n          }\n          value={title}\n          onChange={(e) => {\n            setValidateTitle(true);\n            onTitleChange(e.target.value);\n          }}\n          inputProps={{ 'aria-label': 'title' }}\n        />\n        <TextField\n          variant=\"outlined\"\n          label=\"Description\"\n          fullWidth\n          value={description}\n          onChange={(e) => onDescriptionChange(e.target.value)}\n          inputProps={{ 'aria-label': 'description' }}\n        />\n        <TextField\n          variant=\"outlined\"\n          value={visibility}\n          onChange={(e) => onChangeVisibility(e.target.value as DeckVisibility)}\n          select\n          label=\"Visibility\"\n          inputProps={{ 'aria-label': 'visibility' }}\n        >\n          <MenuItem value=\"PRIVATE\">Private</MenuItem>\n          <MenuItem value=\"PUBLIC\">Public</MenuItem>\n        </TextField>\n      </div>\n\n      <div className={classes.cardList}>\n        {cards.map(\n          ({ sides: [{ text: frontText }, { text: backText }] }, i) => (\n            <EditCardTile\n              key={i}\n              forceValidate={forceValidate}\n              cardNumber={i + 1}\n              frontText={frontText}\n              backText={backText}\n              onFrontTextChange={(value) => changeCardSideText(i, 0, value)}\n              onBackTextChange={(value) => changeCardSideText(i, 1, value)}\n              onDelete={cards.length > 1 ? () => deleteCard(i) : undefined}\n              onMoveUp={i !== 0 ? () => moveCard(i, i - 1) : undefined}\n              onMoveDown={\n                i !== cards.length - 1 ? () => moveCard(i, i + 1) : undefined\n              }\n            />\n          )\n        )}\n      </div>\n\n      <Button\n        variant=\"outlined\"\n        fullWidth\n        startIcon={<Add />}\n        onClick={addCard}\n      >\n        Add card\n      </Button>\n      <div className={classes.saveButtonContainer}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);"],"sourceRoot":""}